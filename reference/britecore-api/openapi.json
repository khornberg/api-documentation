{
  "swagger" : "2.0",
  "info" : {
    "description" : "BriteCore's Application Programming Interface",
    "version" : "1.0",
    "title" : "BriteCore API"
  },
  "host" : "api.engineering-sandbox.britecore.com",
  "schemes" : [ "https" ],
  "paths" : {
    "/" : {
      "get" : {
        "description" : "Mock",
        "produces" : [ "text/html" ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "headers" : {
              "Content-Type" : {
                "type" : "string",
                "description" : "Media type"
              }
            }
          }
        }
      }
    },
    "/BriteAccess-Enforcer-sandbox" : {
      "x-amazon-apigateway-any-method" : {
        "responses" : {
          "200" : {
            "description" : "200 response"
          }
        },
        "security" : [ {
          "sigv4" : [ ]
        } ]
      }
    },
    "/access/actors" : {
      "get" : {
        "tags" : [ "access" ],
        "summary" : "Gets all actors",
        "description" : "Gets all actors",
        "operationId" : "getActors",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Actors retrieved successfully",
            "schema" : {
              "$ref" : "#/definitions/ArrayOfActor"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      },
      "options" : {
        "tags" : [ "CORS" ],
        "summary" : "CORS support",
        "description" : "Enable CORS by returning correct headers",
        "consumes" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Default response for CORS method",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      }
    },
    "/access/actors/{id}" : {
      "get" : {
        "tags" : [ "access" ],
        "summary" : "Gets a specific actor",
        "description" : "Gets an actor",
        "operationId" : "getActor",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Unique identifier for retrieving single object",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Actor is retrieved successfully",
            "schema" : {
              "$ref" : "#/definitions/ArrayOfActor"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      },
      "options" : {
        "tags" : [ "CORS" ],
        "summary" : "CORS support",
        "description" : "Enable CORS by returning correct headers",
        "consumes" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Default response for CORS method",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      }
    },
    "/access/domains" : {
      "get" : {
        "tags" : [ "access" ],
        "summary" : "Gets all domains",
        "description" : "Gets all of the domains and their respective resources, actions, and attributes",
        "operationId" : "getDomains",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Domains retrieved successfully",
            "schema" : {
              "$ref" : "#/definitions/ArrayOfDomain"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      },
      "options" : {
        "tags" : [ "CORS" ],
        "summary" : "CORS support",
        "description" : "Enable CORS by returning correct headers",
        "consumes" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Default response for CORS method",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      }
    },
    "/access/domains/{id}" : {
      "get" : {
        "tags" : [ "access" ],
        "summary" : "Gets a specific domain",
        "description" : "Gets a domain and its respective resources, actions, and attributes",
        "operationId" : "getDomain",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Unique identifier for retrieving single object",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Domain and its respective actions, resources, and attributes are retrieved successfully",
            "schema" : {
              "$ref" : "#/definitions/ArrayOfDomain"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      },
      "options" : {
        "tags" : [ "CORS" ],
        "summary" : "CORS support",
        "description" : "Enable CORS by returning correct headers",
        "consumes" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Default response for CORS method",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      }
    },
    "/access/evaluations" : {
      "post" : {
        "tags" : [ "access" ],
        "summary" : "Evaluates the provided access attempt description objects",
        "description" : "Evaluates all provided request objects",
        "operationId" : "submitEvaluationRequests",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "ArrayOfEvaluationRequest",
          "description" : "List of access attempt description objects to be evaluated",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ArrayOfEvaluationRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Evaluation requests processed successfully",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "400" : {
            "description" : "Invalid input",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      },
      "options" : {
        "tags" : [ "CORS" ],
        "summary" : "CORS support",
        "description" : "Enable CORS by returning correct headers",
        "consumes" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Default response for CORS method",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      }
    },
    "/access/groups" : {
      "get" : {
        "tags" : [ "access" ],
        "summary" : "Gets all groups",
        "description" : "Gets all groups",
        "operationId" : "getGroups",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Groups retrieved successfully",
            "schema" : {
              "$ref" : "#/definitions/ArrayOfGroup"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      },
      "options" : {
        "tags" : [ "CORS" ],
        "summary" : "CORS support",
        "description" : "Enable CORS by returning correct headers",
        "consumes" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Default response for CORS method",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      }
    },
    "/access/groups/{id}" : {
      "get" : {
        "tags" : [ "access" ],
        "summary" : "Gets a specific group",
        "description" : "Gets a group",
        "operationId" : "getGroup",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Unique identifier for retrieving single object",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Group is retrieved successfully",
            "schema" : {
              "$ref" : "#/definitions/ArrayOfGroup"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      },
      "options" : {
        "tags" : [ "CORS" ],
        "summary" : "CORS support",
        "description" : "Enable CORS by returning correct headers",
        "consumes" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Default response for CORS method",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      }
    },
    "/access/policies" : {
      "get" : {
        "tags" : [ "access" ],
        "summary" : "Gets all access policies",
        "description" : "Gets all of the access policies and their respective policy statements",
        "operationId" : "getAccessPolicies",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "type",
          "in" : "query",
          "description" : "Filter by type",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "name",
          "in" : "query",
          "description" : "Filter by name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "description",
          "in" : "query",
          "description" : "Filter by description",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Access policies retrieved successfully",
            "schema" : {
              "$ref" : "#/definitions/ArrayOfPolicy"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "access" ],
        "summary" : "Adds a new access policy",
        "description" : "Adds a new access policy with its respective statements",
        "operationId" : "addAccessPolicy",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "Policy",
          "description" : "A JSON with the required information to create an access policy",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Policy"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Access policy added successfully",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "400" : {
            "description" : "Invalid input",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "options" : {
        "tags" : [ "CORS" ],
        "summary" : "CORS support",
        "description" : "Enable CORS by returning correct headers",
        "consumes" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Default response for CORS method",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      }
    },
    "/access/policies/validations" : {
      "post" : {
        "tags" : [ "access" ],
        "summary" : "Validates an array of access policies",
        "description" : "Validates an array of access policies and returns whether they are valid or not",
        "operationId" : "validateAccessPolicies",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "ArrayOfPolicy",
          "description" : "A JSON with the required information to create an access policy",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ArrayOfPolicy"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Access policies validated successfully",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "400" : {
            "description" : "Invalid input",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      },
      "options" : {
        "tags" : [ "CORS" ],
        "summary" : "CORS support",
        "description" : "Enable CORS by returning correct headers",
        "consumes" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Default response for CORS method",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      }
    },
    "/access/policies/{id}" : {
      "get" : {
        "tags" : [ "access" ],
        "summary" : "Gets a specific access policy",
        "description" : "Gets an access policy and its respective policy statements",
        "operationId" : "getAccessPolicy",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Unique identifier for retrieving single object",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Access policy and its respective policy statements are retrieved successfully",
            "schema" : {
              "$ref" : "#/definitions/ArrayOfPolicy"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "access" ],
        "summary" : "Update an access policy",
        "description" : "Update an access policy with its respective statements",
        "operationId" : "updateAccessPolicy",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Unique identifier for retrieving single object",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "ArrayOfPolicy",
          "description" : "A JSON with the required information to update an access policy",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ArrayOfPolicy"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Access policy updated successfully",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "400" : {
            "description" : "Invalid input",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "405" : {
            "description" : "Method not allowed",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "access" ],
        "summary" : "Deletes an access policy that matches the id",
        "description" : "Deletes a specific access policy",
        "operationId" : "deleteAccessPolicy",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Unique identifier for retrieving single object",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "Access policy deleted successfully",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      },
      "options" : {
        "tags" : [ "CORS" ],
        "summary" : "CORS support",
        "description" : "Enable CORS by returning correct headers",
        "consumes" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Default response for CORS method",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      }
    },
    "/access/policy-assignments" : {
      "get" : {
        "tags" : [ "access" ],
        "summary" : "Gets all policy assignments",
        "description" : "Gets all of the policy assignments",
        "operationId" : "getPolicyAssignments",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Policy assignments retrieved successfully",
            "schema" : {
              "$ref" : "#/definitions/ArrayOfPolicyAssignment"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "access" ],
        "summary" : "Adds a new policy assignment",
        "description" : "Adds a new policy assignment",
        "operationId" : "addPolicyAssignment",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "PolicyAssignment",
          "description" : "A JSON with the required information to create a policy assignment",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PolicyAssignment"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Policy assignment added successfully",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "400" : {
            "description" : "Invalid input",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      },
      "options" : {
        "tags" : [ "CORS" ],
        "summary" : "CORS support",
        "description" : "Enable CORS by returning correct headers",
        "consumes" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Default response for CORS method",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      }
    },
    "/access/policy-assignments/{id}" : {
      "get" : {
        "tags" : [ "access" ],
        "summary" : "Gets a specific policy assignment",
        "description" : "Gets a policy assignment",
        "operationId" : "getPolicyAssignment",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Unique identifier for retrieving single object",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Policy assignment is retrieved successfully",
            "schema" : {
              "$ref" : "#/definitions/ArrayOfPolicyAssignment"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "access" ],
        "summary" : "Deletes a policy assignment that matches the id",
        "description" : "Deletes a specific policy assignment",
        "operationId" : "deletePolicyAssignment",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Unique identifier for retrieving single object",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "Policy assignment deleted successfully",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      },
      "options" : {
        "tags" : [ "CORS" ],
        "summary" : "CORS support",
        "description" : "Enable CORS by returning correct headers",
        "consumes" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Default response for CORS method",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      }
    },
    "/access/role-group-assignments" : {
      "get" : {
        "tags" : [ "access" ],
        "summary" : "Gets all RoleGroupAssignment",
        "description" : "Gets all RoleGroupAssignment",
        "operationId" : "getRoleGroupAssignments",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "date_added_before",
          "in" : "query",
          "description" : "Filter by date_added start date",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "group",
          "in" : "query",
          "description" : "Filter by Group ID",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "role_name",
          "in" : "query",
          "description" : "Filter by Role name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "date_added_after",
          "in" : "query",
          "description" : "Filter by date_added end date",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "role",
          "in" : "query",
          "description" : "Filter by Role ID",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "group_name",
          "in" : "query",
          "description" : "Filter by Group name",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "RoleGroupAssignment retrieved successfully",
            "schema" : {
              "$ref" : "#/definitions/ArrayOfRoleGroupAssignment"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "access" ],
        "summary" : "Adds a new RoleGroupAssignment",
        "description" : "Add a new RoleGroupAssignment",
        "operationId" : "addRoleGroupAssignment",
        "produces" : [ "application/json" ],
        "responses" : {
          "201" : {
            "description" : "RoleGroupAssignment created successfully",
            "schema" : {
              "$ref" : "#/definitions/ArrayOfRoleGroupAssignment"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "400" : {
            "description" : "Invalid input",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      },
      "options" : {
        "tags" : [ "CORS" ],
        "summary" : "CORS support",
        "description" : "Enable CORS by returning correct headers",
        "consumes" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Default response for CORS method",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      }
    },
    "/access/role-group-assignments/{id}" : {
      "get" : {
        "tags" : [ "access" ],
        "summary" : "Gets a specific RoleGroupAssignment",
        "description" : "Gets an RoleGroupAssignment",
        "operationId" : "getRoleGroupAssignment",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Unique identifier for retrieving single object",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "RoleGroupAssignment is retrieved successfully",
            "schema" : {
              "$ref" : "#/definitions/MODEL48b5b3"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "404" : {
            "description" : "RoleGroupAssignment Not found",
            "schema" : {
              "$ref" : "#/definitions/MODELf084dc"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "access" ],
        "summary" : "Update a RoleGroupAssignment",
        "description" : "Update a RoleGroupAssignment",
        "operationId" : "updateRoleGroupAssignment",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Unique identifier for retrieving single object",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "ArrayOfRoleGroupAssignment",
          "description" : "A JSON with the required information to update a RoleGroupAssignment",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ArrayOfRoleGroupAssignment"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "RoleGroupAssignment updated successfully",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "400" : {
            "description" : "Invalid input",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "404" : {
            "description" : "RoleGroupAssignment Not found",
            "schema" : {
              "$ref" : "#/definitions/MODEL3811c1"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "access" ],
        "summary" : "Deletes a RoleGroupAssignment that matches the id",
        "description" : "Deletes a specific RoleGroupAssignment",
        "operationId" : "deleteRoleGroupAssignment",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Unique identifier for retrieving single object",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "RoleGroupAssignment deleted successfully",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "404" : {
            "description" : "RoleGroupAssignment Not found",
            "schema" : {
              "$ref" : "#/definitions/MODEL697037"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      },
      "options" : {
        "tags" : [ "CORS" ],
        "summary" : "CORS support",
        "description" : "Enable CORS by returning correct headers",
        "consumes" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Default response for CORS method",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      }
    },
    "/access/role-user-assignments" : {
      "get" : {
        "tags" : [ "access" ],
        "summary" : "Gets all RoleUserAssignments",
        "description" : "Gets all RoleUserAssignments",
        "operationId" : "getRoleUserAssignments",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "date_added_before",
          "in" : "query",
          "description" : "Filter by date_added start date",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "user",
          "in" : "query",
          "description" : "Filter by User ID",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "role_name",
          "in" : "query",
          "description" : "Filter by Role name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "date_added_after",
          "in" : "query",
          "description" : "Filter by date_added end date",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "role",
          "in" : "query",
          "description" : "Filter by Role ID",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "user_name",
          "in" : "query",
          "description" : "Filter by User name",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "RoleUserAssignment retrieved successfully",
            "schema" : {
              "$ref" : "#/definitions/ArrayOfRoleUserAssignment"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "access" ],
        "summary" : "Adds a new RoleUserAssignment",
        "description" : "Add a new RoleUserAssignment",
        "operationId" : "addRoleUserAssignment",
        "produces" : [ "application/json" ],
        "responses" : {
          "201" : {
            "description" : "RoleUserAssignment created successfully",
            "schema" : {
              "$ref" : "#/definitions/ArrayOfRoleUserAssignment"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "400" : {
            "description" : "Invalid input",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      },
      "options" : {
        "tags" : [ "CORS" ],
        "summary" : "CORS support",
        "description" : "Enable CORS by returning correct headers",
        "consumes" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Default response for CORS method",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      }
    },
    "/access/role-user-assignments/{id}" : {
      "get" : {
        "tags" : [ "access" ],
        "summary" : "Gets a specific RoleUserAssignment",
        "description" : "Gets an RoleUserAssignment",
        "operationId" : "getRoleUserAssignment",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Unique identifier for retrieving single object",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "RoleUserAssignment is retrieved successfully",
            "schema" : {
              "$ref" : "#/definitions/MODEL98b218"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "404" : {
            "description" : "RoleUserAssignment Not found",
            "schema" : {
              "$ref" : "#/definitions/MODEL98044e"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "access" ],
        "summary" : "Update a RoleUserAssignment",
        "description" : "Update a RoleUserAssignment",
        "operationId" : "updateRoleUserAssignment",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Unique identifier for retrieving single object",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "ArrayOfRoleUserAssignment",
          "description" : "A JSON with the required information to update a RoleUserAssignment",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ArrayOfRoleUserAssignment"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "RoleUserAssignment updated successfully",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "400" : {
            "description" : "Invalid input",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "404" : {
            "description" : "RoleUserAssignment Not found",
            "schema" : {
              "$ref" : "#/definitions/MODELda58f0"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "access" ],
        "summary" : "Deletes a RoleUserAssignment that matches the id",
        "description" : "Deletes a specific RoleUserAssignment",
        "operationId" : "deleteRoleUserAssignment",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Unique identifier for retrieving single object",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "RoleUserAssignment deleted successfully",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "404" : {
            "description" : "RoleUserAssignment Not found",
            "schema" : {
              "$ref" : "#/definitions/MODEL411f1e"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      },
      "options" : {
        "tags" : [ "CORS" ],
        "summary" : "CORS support",
        "description" : "Enable CORS by returning correct headers",
        "consumes" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Default response for CORS method",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      }
    },
    "/access/roles" : {
      "get" : {
        "tags" : [ "access" ],
        "summary" : "Gets all roles",
        "description" : "Gets all roles",
        "operationId" : "getRoles",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "description",
          "in" : "query",
          "description" : "Filter roles by description",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "rel_usergroups",
          "in" : "query",
          "description" : "Get roles related to a list of groups",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "name",
          "in" : "query",
          "description" : "Filter roles by name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "rel_username",
          "in" : "query",
          "description" : "Get roles related to a user",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Roles retrieved successfully",
            "schema" : {
              "$ref" : "#/definitions/ArrayOfRole"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "access" ],
        "summary" : "Adds a new role",
        "description" : "Add a new Role",
        "operationId" : "addRole",
        "produces" : [ "application/json" ],
        "responses" : {
          "201" : {
            "description" : "Role created successfully",
            "schema" : {
              "$ref" : "#/definitions/ArrayOfRole"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "400" : {
            "description" : "Invalid input",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      },
      "options" : {
        "tags" : [ "CORS" ],
        "summary" : "CORS support",
        "description" : "Enable CORS by returning correct headers",
        "consumes" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Default response for CORS method",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      }
    },
    "/access/roles/{id}" : {
      "get" : {
        "tags" : [ "access" ],
        "summary" : "Gets a specific role",
        "description" : "Gets an role",
        "operationId" : "getRole",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Unique identifier for retrieving single object",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Role is retrieved successfully",
            "schema" : {
              "$ref" : "#/definitions/MODEL9d9ea8"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "404" : {
            "description" : "Role Not found",
            "schema" : {
              "$ref" : "#/definitions/MODEL2e7edf"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "access" ],
        "summary" : "Update a Role",
        "description" : "Update a Role",
        "operationId" : "updateRole",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Unique identifier for retrieving single object",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "ArrayOfRole",
          "description" : "A JSON with the required information to update a Role",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ArrayOfRole"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Role updated successfully",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "400" : {
            "description" : "Invalid input",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "404" : {
            "description" : "Role Not found",
            "schema" : {
              "$ref" : "#/definitions/MODEL2a2d67"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "access" ],
        "summary" : "Deletes a role that matches the id",
        "description" : "Deletes a specific Role",
        "operationId" : "deleteRole",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Unique identifier for retrieving single object",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "Role deleted successfully",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "404" : {
            "description" : "Role Not found",
            "schema" : {
              "$ref" : "#/definitions/MODEL793bc7"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      },
      "options" : {
        "tags" : [ "CORS" ],
        "summary" : "CORS support",
        "description" : "Enable CORS by returning correct headers",
        "consumes" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Default response for CORS method",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      }
    },
    "/access/silk/{proxy+}" : {
      "options" : {
        "tags" : [ "CORS" ],
        "summary" : "CORS support",
        "description" : "Enable CORS by returning correct headers",
        "consumes" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Default response for CORS method",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "x-amazon-apigateway-any-method" : {
        "parameters" : [ {
          "name" : "proxy",
          "in" : "path",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      }
    },
    "/access/sync-users-and-groups" : {
      "post" : {
        "tags" : [ "access" ],
        "summary" : "Sync users and groups table with data from an external source",
        "description" : "Delete stale users and groups that are no longer present in the external source and create new users and groups",
        "operationId" : "syncUsersAndGroups",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "MODELcbd4d3",
          "description" : "A JSON with the required information to sync users and groups",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/MODELcbd4d3"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Users and groups have been synced successfully",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "400" : {
            "description" : "Invalid input",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      },
      "options" : {
        "tags" : [ "CORS" ],
        "summary" : "CORS support",
        "description" : "Enable CORS by returning correct headers",
        "consumes" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Default response for CORS method",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      }
    },
    "/access/users" : {
      "get" : {
        "tags" : [ "access" ],
        "summary" : "Gets all users",
        "description" : "Gets all users",
        "operationId" : "getUsers",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Users retrieved successfully",
            "schema" : {
              "$ref" : "#/definitions/ArrayOfUser"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      },
      "options" : {
        "tags" : [ "CORS" ],
        "summary" : "CORS support",
        "description" : "Enable CORS by returning correct headers",
        "consumes" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Default response for CORS method",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      }
    },
    "/access/users/{id}" : {
      "get" : {
        "tags" : [ "access" ],
        "summary" : "Gets a specific user",
        "description" : "Gets a user",
        "operationId" : "getUser",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Unique identifier for retrieving single object",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "User is retrieved successfully",
            "schema" : {
              "$ref" : "#/definitions/ArrayOfUser"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      },
      "options" : {
        "tags" : [ "CORS" ],
        "summary" : "CORS support",
        "description" : "Enable CORS by returning correct headers",
        "consumes" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Default response for CORS method",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      }
    },
    "/auth/oauth2/token" : {
      "post" : {
        "tags" : [ "authentication" ],
        "summary" : "The token endpoint is used by the client to obtain an access token by presenting its authorization grant or refresh token.",
        "operationId" : "exchangeToken",
        "consumes" : [ "application/x-www-form-urlencoded" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "header",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "MODELd06ea7",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/MODELd06ea7"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "400" : {
            "description" : "bad request",
            "schema" : {
              "$ref" : "#/definitions/MODELd833e4"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      },
      "options" : {
        "tags" : [ "CORS" ],
        "summary" : "CORS support",
        "description" : "Enable CORS by returning correct headers",
        "consumes" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Default response for CORS method",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      }
    },
    "/auth/settings/invitation-messages" : {
      "get" : {
        "tags" : [ "authentication" ],
        "summary" : "Returns the Invitation Message templates currently set on the main user pool.",
        "operationId" : "getInvitationMessages",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/InvitationMessagesRequest"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "authentication" ],
        "summary" : "Updates the Invitation Message templates currently set on the main user pool. Your custom message must contain the {username} and {####} placeholders.",
        "operationId" : "updateInvitationMessages",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "InvitationMessagesRequest",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/InvitationMessagesRequest"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "success",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "options" : {
        "tags" : [ "CORS" ],
        "summary" : "CORS support",
        "description" : "Enable CORS by returning correct headers",
        "consumes" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Default response for CORS method",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      }
    },
    "/auth/settings/password-policy" : {
      "get" : {
        "tags" : [ "authentication" ],
        "summary" : "Returns the Password Policy currently set on the main user pool.",
        "operationId" : "getPasswordPolicy",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/PasswordPolicyRequest"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "authentication" ],
        "summary" : "Updates the Password Policy currently set on the main user pool.",
        "operationId" : "updatePasswordPolicy",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "PasswordPolicyRequest",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PasswordPolicyRequest"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "success",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "options" : {
        "tags" : [ "CORS" ],
        "summary" : "CORS support",
        "description" : "Enable CORS by returning correct headers",
        "consumes" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Default response for CORS method",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      }
    },
    "/documents/{proxy+}" : {
      "options" : {
        "tags" : [ "CORS" ],
        "summary" : "CORS support",
        "description" : "Enable CORS by returning correct headers",
        "consumes" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Default response for CORS method",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "x-amazon-apigateway-any-method" : {
        "parameters" : [ {
          "name" : "proxy",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      }
    },
    "/graphql/lines" : {
      "options" : {
        "tags" : [ "CORS" ],
        "summary" : "CORS support",
        "description" : "Enable CORS by returning correct headers",
        "consumes" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Default response for CORS method",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "x-amazon-apigateway-any-method" : {
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      }
    },
    "/graphql/quote" : {
      "options" : {
        "tags" : [ "CORS" ],
        "summary" : "CORS support",
        "description" : "Enable CORS by returning correct headers",
        "consumes" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Default response for CORS method",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "x-amazon-apigateway-any-method" : {
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      }
    },
    "/lines/admin/{proxy+}" : {
      "options" : {
        "tags" : [ "CORS" ],
        "summary" : "CORS support",
        "description" : "Enable CORS by returning correct headers",
        "consumes" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Default response for CORS method",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "x-amazon-apigateway-any-method" : {
        "parameters" : [ {
          "name" : "proxy",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      }
    },
    "/lines/field-formats" : {
      "get" : {
        "tags" : [ "lines" ],
        "description" : "Get list of all Field Formats.",
        "operationId" : "listFieldFormats",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "List of all Field Formats",
            "schema" : {
              "$ref" : "#/definitions/FieldFormat"
            },
            "examples" : {
              "application/json" : [ {
                "label" : "Vehicle Identification Number",
                "classification" : "string.vehicle.vin",
                "group" : {
                  "label" : "Vehicle"
                },
                "description" : "Text input for valid 17 character VIN.",
                "default_field_values" : {
                  "name" : "vin",
                  "label" : "Vehicle Identification Number",
                  "type" : "string",
                  "validators" : [ {
                    "name" : "regex",
                    "params" : {
                      "value" : "^[a-zA-Z0-9]{9}[a-zA-Z0-9]{2}[0-9]{6}$"
                    }
                  } ]
                }
              }, {
                "label" : "Social Security Number",
                "classification" : "string.personal.social_security_number",
                "group" : {
                  "label" : "Identity"
                },
                "description" : "Text input for a valid SSN, allows separation using hyphens. (e.g. 123-45-6789)",
                "default_field_values" : {
                  "name" : "ssn",
                  "label" : "Social Security Number",
                  "type" : "string",
                  "validators" : [ {
                    "name" : "regex",
                    "params" : {
                      "value" : "^(?!000|666|9)\\d{3}(-?)(?!00)\\d{2}\\1(?!0000)\\d{4}$"
                    }
                  } ]
                }
              }, {
                "label" : "Birthdate",
                "classification" : "date.personal.birthdate",
                "group" : {
                  "label" : "Identity"
                },
                "description" : "Date input intended to be used for submitting date of birth.",
                "default_field_values" : {
                  "name" : "birthdate",
                  "label" : "Birthdate",
                  "type" : "date"
                }
              }, {
                "label" : "Currency",
                "classification" : "number.monetary.currency",
                "group" : {
                  "label" : "Payment Info"
                },
                "description" : "Number input field containing monetary value.",
                "default_field_values" : {
                  "name" : "currency",
                  "label" : "Currency",
                  "type" : "number"
                }
              }, {
                "label" : "Yes/No Question",
                "classification" : "boolean.informational.yes_no",
                "group" : {
                  "label" : "Boolean Formats"
                },
                "description" : "Choice field containing response to a Yes/No question.",
                "default_field_values" : {
                  "name" : "yesNoQuestion",
                  "label" : "Yes/No Question",
                  "type" : "boolean"
                }
              }, {
                "label" : "U.S. State Selection",
                "classification" : "enum.address.us.state",
                "group" : {
                  "label" : "Location"
                },
                "description" : "Option Selection Field with list of all U.S. States with their names as labels and 2 character ISO codes as values.",
                "default_field_values" : {
                  "name" : "usState",
                  "label" : "U.S. State",
                  "type" : "enum",
                  "options" : [ {
                    "label" : "Alabama",
                    "value" : "AL",
                    "name" : "AL"
                  }, {
                    "label" : "Alaska",
                    "value" : "AK",
                    "name" : "AK"
                  }, {
                    "label" : "American Samoa",
                    "value" : "AS",
                    "name" : "AS"
                  }, {
                    "label" : "Arizona",
                    "value" : "AZ",
                    "name" : "AZ"
                  }, {
                    "label" : "Arkansas",
                    "value" : "AR",
                    "name" : "AR"
                  }, {
                    "label" : "California",
                    "value" : "CA",
                    "name" : "CA"
                  }, {
                    "label" : "Colorado",
                    "value" : "CO",
                    "name" : "CO"
                  }, {
                    "label" : "Connecticut",
                    "value" : "CT",
                    "name" : "CT"
                  }, {
                    "label" : "Delaware",
                    "value" : "DE",
                    "name" : "DE"
                  }, {
                    "label" : "District Of Columbia",
                    "value" : "DC",
                    "name" : "DC"
                  }, {
                    "label" : "Federated States Of Micronesia",
                    "value" : "FM",
                    "name" : "FM"
                  }, {
                    "label" : "Florida",
                    "value" : "FL",
                    "name" : "FL"
                  }, {
                    "label" : "Georgia",
                    "value" : "GA",
                    "name" : "GA"
                  }, {
                    "label" : "Guam",
                    "value" : "GU",
                    "name" : "GU"
                  }, {
                    "label" : "Hawaii",
                    "value" : "HI",
                    "name" : "HI"
                  }, {
                    "label" : "Idaho",
                    "value" : "ID",
                    "name" : "ID"
                  }, {
                    "label" : "Illinois",
                    "value" : "IL",
                    "name" : "IL"
                  }, {
                    "label" : "Indiana",
                    "value" : "IN",
                    "name" : "IN"
                  }, {
                    "label" : "Iowa",
                    "value" : "IA",
                    "name" : "IA"
                  }, {
                    "label" : "Kansas",
                    "value" : "KS",
                    "name" : "KS"
                  }, {
                    "label" : "Kentucky",
                    "value" : "KY",
                    "name" : "KY"
                  }, {
                    "label" : "Louisiana",
                    "value" : "LA",
                    "name" : "LA"
                  }, {
                    "label" : "Maine",
                    "value" : "ME",
                    "name" : "ME"
                  }, {
                    "label" : "Marshall Islands",
                    "value" : "MH",
                    "name" : "MH"
                  }, {
                    "label" : "Maryland",
                    "value" : "MD",
                    "name" : "MD"
                  }, {
                    "label" : "Massachusetts",
                    "value" : "MA",
                    "name" : "MA"
                  }, {
                    "label" : "Michigan",
                    "value" : "MI",
                    "name" : "MI"
                  }, {
                    "label" : "Minnesota",
                    "value" : "MN",
                    "name" : "MN"
                  }, {
                    "label" : "Mississippi",
                    "value" : "MS",
                    "name" : "MS"
                  }, {
                    "label" : "Missouri",
                    "value" : "MO",
                    "name" : "MO"
                  }, {
                    "label" : "Montana",
                    "value" : "MT",
                    "name" : "MT"
                  }, {
                    "label" : "Nebraska",
                    "value" : "NE",
                    "name" : "NE"
                  }, {
                    "label" : "Nevada",
                    "value" : "NV",
                    "name" : "NV"
                  }, {
                    "label" : "New Hampshire",
                    "value" : "NH",
                    "name" : "NH"
                  }, {
                    "label" : "New Jersey",
                    "value" : "NJ",
                    "name" : "NJ"
                  }, {
                    "label" : "New Mexico",
                    "value" : "NM",
                    "name" : "NM"
                  }, {
                    "label" : "New York",
                    "value" : "NY",
                    "name" : "NY"
                  }, {
                    "label" : "North Carolina",
                    "value" : "NC",
                    "name" : "NC"
                  }, {
                    "label" : "North Dakota",
                    "value" : "ND",
                    "name" : "ND"
                  }, {
                    "label" : "Northern Mariana Islands",
                    "value" : "MP",
                    "name" : "MP"
                  }, {
                    "label" : "Ohio",
                    "value" : "OH",
                    "name" : "OH"
                  }, {
                    "label" : "Oklahoma",
                    "value" : "OK",
                    "name" : "OK"
                  }, {
                    "label" : "Oregon",
                    "value" : "OR",
                    "name" : "OR"
                  }, {
                    "label" : "Palau",
                    "value" : "PW",
                    "name" : "PW"
                  }, {
                    "label" : "Pennsylvania",
                    "value" : "PA",
                    "name" : "PA"
                  }, {
                    "label" : "Puerto Rico",
                    "value" : "PR",
                    "name" : "PR"
                  }, {
                    "label" : "Rhode Island",
                    "value" : "RI",
                    "name" : "RI"
                  }, {
                    "label" : "South Carolina",
                    "value" : "SC",
                    "name" : "SC"
                  }, {
                    "label" : "South Dakota",
                    "value" : "SD",
                    "name" : "SD"
                  }, {
                    "label" : "Tennessee",
                    "value" : "TN",
                    "name" : "TN"
                  }, {
                    "label" : "Texas",
                    "value" : "TX",
                    "name" : "TX"
                  }, {
                    "label" : "Utah",
                    "value" : "UT",
                    "name" : "UT"
                  }, {
                    "label" : "Vermont",
                    "value" : "VT",
                    "name" : "VT"
                  }, {
                    "label" : "Virgin Islands",
                    "value" : "VI",
                    "name" : "VI"
                  }, {
                    "label" : "Virginia",
                    "value" : "VA",
                    "name" : "VA"
                  }, {
                    "label" : "Washington",
                    "value" : "WA",
                    "name" : "WA"
                  }, {
                    "label" : "West Virginia",
                    "value" : "WV",
                    "name" : "WV"
                  }, {
                    "label" : "Wisconsin",
                    "value" : "WI",
                    "name" : "WI"
                  }, {
                    "label" : "Wyoming",
                    "value" : "WY",
                    "name" : "WY"
                  } ]
                }
              } ]
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "options" : {
        "tags" : [ "CORS" ],
        "summary" : "CORS support",
        "description" : "Enable CORS by returning correct headers",
        "consumes" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Default response for CORS method",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      }
    },
    "/lines/lines" : {
      "get" : {
        "tags" : [ "lines" ],
        "description" : "List all lines.",
        "operationId" : "listLine",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "description" : "A page number within the paginated result set.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/MODEL742328"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "lines" ],
        "description" : "Creates a line.",
        "operationId" : "createLine",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "Line",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Line"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Line created successfully.",
            "schema" : {
              "$ref" : "#/definitions/Line"
            },
            "examples" : {
              "application/json" : {
                "id" : "2a17b803-1b2c-427a-93f2-5be5dd2b99e4",
                "label" : "General Auto",
                "name" : "AUTO",
                "description" : "General Auto Description"
              }
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "options" : {
        "tags" : [ "CORS" ],
        "summary" : "CORS support",
        "description" : "Enable CORS by returning correct headers",
        "consumes" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Default response for CORS method",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      }
    },
    "/lines/lines/{line_name}" : {
      "get" : {
        "tags" : [ "lines" ],
        "description" : "Get details of a line.",
        "operationId" : "readLine",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "line_name",
          "in" : "path",
          "description" : "Line Reference Name.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Line details.",
            "schema" : {
              "$ref" : "#/definitions/Line"
            },
            "examples" : {
              "application/json" : {
                "id" : "2a17b803-1b2c-427a-93f2-5be5dd2b99e4",
                "label" : "General Auto",
                "name" : "AUTO",
                "description" : "General Auto Description"
              }
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "lines" ],
        "description" : "Updates a line.",
        "operationId" : "updateLine",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "line_name",
          "in" : "path",
          "description" : "Line Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "LineUpdate",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/LineUpdate"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Line updated successfully.",
            "schema" : {
              "$ref" : "#/definitions/Line"
            },
            "examples" : {
              "application/json" : {
                "id" : "2a17b803-1b2c-427a-93f2-5be5dd2b99e4",
                "label" : "General Auto",
                "name" : "AUTO",
                "description" : "General Auto Description"
              }
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "lines" ],
        "description" : "Deletes a line.",
        "operationId" : "deleteLine",
        "parameters" : [ {
          "name" : "line_name",
          "in" : "path",
          "description" : "Line Reference Name.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "Line is successfully deleted.",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "options" : {
        "tags" : [ "CORS" ],
        "summary" : "CORS support",
        "description" : "Enable CORS by returning correct headers",
        "consumes" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Default response for CORS method",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "patch" : {
        "tags" : [ "lines" ],
        "description" : "Partially updates a line.",
        "operationId" : "partialUpdateLine",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "line_name",
          "in" : "path",
          "description" : "Line Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "LineUpdate",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/LineUpdate"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Line updated successfully.",
            "schema" : {
              "$ref" : "#/definitions/Line"
            },
            "examples" : {
              "application/json" : {
                "id" : "2a17b803-1b2c-427a-93f2-5be5dd2b99e4",
                "label" : "Test",
                "name" : "AUTO",
                "description" : "General Auto Description"
              }
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      }
    },
    "/lines/products" : {
      "get" : {
        "tags" : [ "lines" ],
        "description" : "The Product list is returned based on the `format` query parameter.",
        "operationId" : "listProduct",
        "parameters" : [ {
          "name" : "format",
          "in" : "query",
          "description" : "The format used to display resources.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "effective_before",
          "in" : "query",
          "description" : "The date to filter products by their effective date of their associated version.\nDate string should be in YYYY-MM-DD format.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "A page number within the paginated result set.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "The Product list is returned.",
            "examples" : {
              "application/json" : [ {
                "line" : {
                  "id" : "41b13d8e-1fde-465c-a609-3e696ca444ab",
                  "label" : "General Auto",
                  "name" : "generalAuto",
                  "description" : "General Auto Description"
                },
                "version" : {
                  "id" : "2ffed157-1229-47aa-a4c2-18b14611c4a1",
                  "date_added" : "2019-06-27",
                  "date_modified" : "2019-06-27",
                  "name" : "Initial Version",
                  "effective_date" : "2019-05-10",
                  "status" : "draft",
                  "description" : "The first version of the product."
                },
                "children" : [ {
                  "parent_product" : "generalAutoCW",
                  "line" : {
                    "id" : "41b13d8e-1fde-465c-a609-3e696ca444ab",
                    "label" : "General Auto",
                    "name" : "generalAuto",
                    "description" : "General Auto Description"
                  },
                  "version" : {
                    "id" : "2ffed157-1229-47aa-a4c2-18b14611c4a1",
                    "date_added" : "2019-06-27",
                    "date_modified" : "2019-06-27",
                    "name" : "Initial Version",
                    "effective_date" : "2019-05-10",
                    "status" : "draft",
                    "description" : "The first version of the product."
                  },
                  "name" : "childProduct2",
                  "label" : "Child Product 2"
                }, {
                  "parent_product" : "generalAutoCW",
                  "line" : {
                    "id" : "41b13d8e-1fde-465c-a609-3e696ca444ab",
                    "label" : "General Auto",
                    "name" : "generalAuto",
                    "description" : "General Auto Description"
                  },
                  "version" : {
                    "id" : "2ffed157-1229-47aa-a4c2-18b14611c4a1",
                    "date_added" : "2019-06-27",
                    "date_modified" : "2019-06-27",
                    "name" : "Initial Version",
                    "effective_date" : "2019-05-10",
                    "status" : "draft",
                    "description" : "The first version of the product."
                  },
                  "children" : [ {
                    "parent_product" : "childProduct",
                    "line" : {
                      "id" : "41b13d8e-1fde-465c-a609-3e696ca444ab",
                      "label" : "General Auto",
                      "name" : "generalAuto",
                      "description" : "General Auto Description"
                    },
                    "version" : {
                      "id" : "2ffed157-1229-47aa-a4c2-18b14611c4a1",
                      "date_added" : "2019-06-27",
                      "date_modified" : "2019-06-27",
                      "name" : "Initial Version",
                      "effective_date" : "2019-05-10",
                      "status" : "draft",
                      "description" : "The first version of the product."
                    },
                    "name" : "grandChildProduct",
                    "label" : "Grand Child Product"
                  } ],
                  "name" : "childProduct",
                  "label" : "Child Product"
                } ],
                "name" : "generalAutoCW",
                "label" : "General Auto - Countrywide"
              } ]
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "lines" ],
        "description" : "Creates a product.",
        "operationId" : "createProduct",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "version_name",
          "in" : "query",
          "description" : "Version name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "version_id",
          "in" : "query",
          "description" : "Version UUID",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "Product",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Product"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Product created successfully.",
            "schema" : {
              "$ref" : "#/definitions/Product"
            },
            "examples" : {
              "application/json" : {
                "id" : "5e007bd1-5caf-46c2-82e7-ace1e5b69910",
                "label" : "General Auto - MO",
                "name" : "generalAutoMO",
                "line" : "2a17b803-1b2c-427a-93f2-5be5dd2b99e4",
                "parent_product" : "8f42c7b4-3921-45ed-a6b7-d64c45e2fa39",
                "version" : "2b4402f9-7247-4c6c-9f03-59b3af6e2fa2",
                "initial_version" : "2b4402f9-7247-4c6c-9f03-59b3af6e2fa2"
              }
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "options" : {
        "tags" : [ "CORS" ],
        "summary" : "CORS support",
        "description" : "Enable CORS by returning correct headers",
        "consumes" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Default response for CORS method",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      }
    },
    "/lines/products/import" : {
      "post" : {
        "tags" : [ "lines" ],
        "description" : "Imports a Product Template.",
        "operationId" : "importTemplateProduct",
        "parameters" : [ {
          "name" : "Content-Type",
          "in" : "header",
          "description" : "Send multipart/form-data in Content-Type header.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "201" : {
            "description" : "Product Template imported successfully.",
            "examples" : {
              "application/json" : [ {
                "line" : {
                  "id" : "41b13d8e-1fde-465c-a609-3e696ca444ab",
                  "label" : "General Auto",
                  "name" : "generalAuto",
                  "description" : "General Auto Description"
                },
                "version" : {
                  "id" : "2ffed157-1229-47aa-a4c2-18b14611c4a1",
                  "date_added" : "2019-06-27",
                  "date_modified" : "2019-06-27",
                  "name" : "Initial Version",
                  "effective_date" : "2019-05-10",
                  "status" : "draft",
                  "description" : "The first version of the product."
                },
                "children" : [ {
                  "parent_product" : "generalAutoCW",
                  "line" : {
                    "id" : "41b13d8e-1fde-465c-a609-3e696ca444ab",
                    "label" : "General Auto",
                    "name" : "generalAuto",
                    "description" : "General Auto Description"
                  },
                  "version" : {
                    "id" : "2ffed157-1229-47aa-a4c2-18b14611c4a1",
                    "date_added" : "2019-06-27",
                    "date_modified" : "2019-06-27",
                    "name" : "Initial Version",
                    "effective_date" : "2019-05-10",
                    "status" : "draft",
                    "description" : "The first version of the product."
                  },
                  "name" : "childProduct2",
                  "label" : "Child Product 2"
                }, {
                  "parent_product" : "generalAutoCW",
                  "line" : {
                    "id" : "41b13d8e-1fde-465c-a609-3e696ca444ab",
                    "label" : "General Auto",
                    "name" : "generalAuto",
                    "description" : "General Auto Description"
                  },
                  "version" : {
                    "id" : "2ffed157-1229-47aa-a4c2-18b14611c4a1",
                    "date_added" : "2019-06-27",
                    "date_modified" : "2019-06-27",
                    "name" : "Initial Version",
                    "effective_date" : "2019-05-10",
                    "status" : "draft",
                    "description" : "The first version of the product."
                  },
                  "children" : [ {
                    "parent_product" : "childProduct",
                    "line" : {
                      "id" : "41b13d8e-1fde-465c-a609-3e696ca444ab",
                      "label" : "General Auto",
                      "name" : "generalAuto",
                      "description" : "General Auto Description"
                    },
                    "version" : {
                      "id" : "2ffed157-1229-47aa-a4c2-18b14611c4a1",
                      "date_added" : "2019-06-27",
                      "date_modified" : "2019-06-27",
                      "name" : "Initial Version",
                      "effective_date" : "2019-05-10",
                      "status" : "draft",
                      "description" : "The first version of the product."
                    },
                    "name" : "grandChildProduct",
                    "label" : "Grand Child Product"
                  } ],
                  "name" : "childProduct",
                  "label" : "Child Product"
                } ],
                "name" : "generalAutoCW",
                "label" : "General Auto - Countrywide"
              } ]
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "options" : {
        "tags" : [ "CORS" ],
        "summary" : "CORS support",
        "description" : "Enable CORS by returning correct headers",
        "consumes" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Default response for CORS method",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      }
    },
    "/lines/products/{product_name}" : {
      "delete" : {
        "tags" : [ "lines" ],
        "description" : "Deletes a product.",
        "operationId" : "deleteProduct",
        "parameters" : [ {
          "name" : "version_name",
          "in" : "query",
          "description" : "Version name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "product_name",
          "in" : "path",
          "description" : "Product Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version_id",
          "in" : "query",
          "description" : "Version UUID",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "Product is successfully deleted.",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "options" : {
        "tags" : [ "CORS" ],
        "summary" : "CORS support",
        "description" : "Enable CORS by returning correct headers",
        "consumes" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Default response for CORS method",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "patch" : {
        "tags" : [ "lines" ],
        "description" : "Partially updates a product.",
        "operationId" : "partialUpdateProduct",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "version_name",
          "in" : "query",
          "description" : "Version name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "product_name",
          "in" : "path",
          "description" : "Product Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version_id",
          "in" : "query",
          "description" : "Version UUID",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "ProductPartialUpdate",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ProductPartialUpdate"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Product updated successfully.",
            "schema" : {
              "$ref" : "#/definitions/ProductPartialUpdate"
            },
            "examples" : {
              "application/json" : {
                "id" : "5e007bd1-5caf-46c2-82e7-ace1e5b69910",
                "label" : "General Auto - MO",
                "name" : "generalAutoMO",
                "line" : "2a17b803-1b2c-427a-93f2-5be5dd2b99e4",
                "parent_product" : "8f42c7b4-3921-45ed-a6b7-d64c45e2fa39",
                "version" : "2b4402f9-7247-4c6c-9f03-59b3af6e2fa2",
                "initial_version" : "2b4402f9-7247-4c6c-9f03-59b3af6e2fa2"
              }
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      }
    },
    "/lines/products/{product_name}/risk-types" : {
      "get" : {
        "tags" : [ "lines" ],
        "description" : "The RiskType list is returned based on the `format` query parameter.",
        "operationId" : "listProductRiskType",
        "parameters" : [ {
          "name" : "version_name",
          "in" : "query",
          "description" : "Version name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "format",
          "in" : "query",
          "description" : "The format used to display resources.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "A page number within the paginated result set.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "product_name",
          "in" : "path",
          "description" : "Product Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version_id",
          "in" : "query",
          "description" : "Version UUID",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "The RiskType list is returned.",
            "examples" : {
              "application/json" : {
                "label" : "Policy",
                "name" : "policy",
                "risk_name_template" : "{{ riskType.label }} {{ number }}",
                "children" : [ {
                  "label" : "Drivers",
                  "name" : "drivers",
                  "risk_name_template" : "{{ riskType.label }} {{ number }}"
                }, {
                  "label" : "Mailing Address",
                  "name" : "mailingAddresses",
                  "risk_name_template" : "{{ riskType.label }} {{ number }}"
                }, {
                  "label" : "Vehicle",
                  "name" : "vehicles",
                  "risk_name_template" : "{{ riskType.label }} {{ number }}"
                } ]
              }
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "lines" ],
        "description" : "Creates the risk type.",
        "operationId" : "createProductRiskType",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "name" : "version_name",
          "in" : "query",
          "description" : "Version name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "product_name",
          "in" : "path",
          "description" : "Product Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version_id",
          "in" : "query",
          "description" : "Version UUID",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "RiskTypeCreate",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RiskTypeCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Returns the newly created risk type.",
            "examples" : {
              "application/json" : {
                "id" : "705cff15-81ee-4c08-bc30-3a025b7f6a16",
                "label" : "Vehicle",
                "name" : "vehicles",
                "risk_name_template" : "{{ riskType.label }} {{ number }}",
                "description" : "Vehicle risk type",
                "product" : "ab63f51d-2176-4b90-a3d4-1fe77b1e52de"
              }
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "options" : {
        "tags" : [ "CORS" ],
        "summary" : "CORS support",
        "description" : "Enable CORS by returning correct headers",
        "consumes" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Default response for CORS method",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      }
    },
    "/lines/products/{product_name}/risk-types/{risk_type_name}" : {
      "get" : {
        "tags" : [ "lines" ],
        "description" : "The RiskType matching the risk type name is returned.",
        "operationId" : "readProductRiskType",
        "parameters" : [ {
          "name" : "version_name",
          "in" : "query",
          "description" : "Version name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "risk_type_name",
          "in" : "path",
          "description" : "Risk Type Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "product_name",
          "in" : "path",
          "description" : "Product Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version_id",
          "in" : "query",
          "description" : "Version UUID",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "The RiskType is returned.",
            "examples" : {
              "application/json" : {
                "id" : "705cff15-81ee-4c08-bc30-3a025b7f6a16",
                "label" : "Vehicle",
                "name" : "vehicles",
                "risk_name_template" : "{{ riskType.label }} {{ number }}",
                "description" : "Vehicle risk type",
                "product" : "ab63f51d-2176-4b90-a3d4-1fe77b1e52de"
              }
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "lines" ],
        "description" : "Updates the risk type.",
        "operationId" : "updateProductRiskType",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "name" : "version_name",
          "in" : "query",
          "description" : "Version name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "risk_type_name",
          "in" : "path",
          "description" : "Risk Type Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "product_name",
          "in" : "path",
          "description" : "Product Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version_id",
          "in" : "query",
          "description" : "Version UUID",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "RiskTypeUpdate",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RiskTypeUpdate"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns risk type with updated information.",
            "examples" : {
              "application/json" : {
                "id" : "705cff15-81ee-4c08-bc30-3a025b7f6a16",
                "label" : "Vehicle",
                "name" : "vehicles",
                "risk_name_template" : "{{ riskType.label }} {{ number }}",
                "description" : "Updated description",
                "product" : "ab63f51d-2176-4b90-a3d4-1fe77b1e52de",
                "risk_type" : "3a0f1563-bc30-4b90-2176-3a025b7f6a16"
              }
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "lines" ],
        "description" : "Deletes the risk type.",
        "operationId" : "deleteProductRiskType",
        "parameters" : [ {
          "name" : "version_name",
          "in" : "query",
          "description" : "Version name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "risk_type_name",
          "in" : "path",
          "description" : "Risk Type Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "product_name",
          "in" : "path",
          "description" : "Product Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version_id",
          "in" : "query",
          "description" : "Version UUID",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "Risk type is successfully deleted.",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "options" : {
        "tags" : [ "CORS" ],
        "summary" : "CORS support",
        "description" : "Enable CORS by returning correct headers",
        "consumes" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Default response for CORS method",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "patch" : {
        "tags" : [ "lines" ],
        "operationId" : "partialUpdateProductRiskType",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "RiskTypeUpdate",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RiskTypeUpdate"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Product updated successfully.",
            "schema" : {
              "$ref" : "#/definitions/RiskTypeUpdate"
            },
            "examples" : {
              "application/json" : {
                "id" : "5e007bd1-5caf-46c2-82e7-ace1e5b69910",
                "label" : "General Auto - MO",
                "name" : "generalAutoMO",
                "line" : "2a17b803-1b2c-427a-93f2-5be5dd2b99e4",
                "parent_product" : "8f42c7b4-3921-45ed-a6b7-d64c45e2fa39",
                "version" : "2b4402f9-7247-4c6c-9f03-59b3af6e2fa2",
                "initial_version" : "2b4402f9-7247-4c6c-9f03-59b3af6e2fa2"
              }
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      }
    },
    "/lines/products/{product_name}/risk-types/{risk_type_name}/calculations" : {
      "get" : {
        "tags" : [ "lines" ],
        "description" : "List all calculations for the given Product and Risk Type.",
        "operationId" : "listProductRiskTypeCalculation",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "version_name",
          "in" : "query",
          "description" : "Version name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "risk_type_name",
          "in" : "path",
          "description" : "Risk Type Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "A page number within the paginated result set.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "product_name",
          "in" : "path",
          "description" : "Product Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version_id",
          "in" : "query",
          "description" : "Version UUID",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Calculation list.",
            "schema" : {
              "$ref" : "#/definitions/CalculationListRetrieve"
            },
            "examples" : {
              "application/json" : {
                "count" : 1,
                "results" : [ {
                  "id" : "23dac5e1-7122-416c-a2e8-2a0a0821e47c",
                  "name" : "exampleCalculation",
                  "type" : "variable",
                  "description" : "Calculation Example",
                  "calculation" : "1.0",
                  "compiled_code" : "gANjZGlsbC5kaWxsCl9sb2FkX3R5cGUKcQBYCAAAAENvZGVUeXBlcQGFcQJScQMoSwBLAEsASwNLQEMOZQBlAWQAgwJkAYMBUwBxBFgHAAAARGVjaW1hbHEFWAMAAAAxLjBxBoZxB1gJAAAAX2dldGF0dHJfcQhYBwAAAGRlY2ltYWxxCYZxCilYCAAAADxzdHJpbmc+cQtYCAAAADxtb2R1bGU+cQxLAUMAcQ0pKXRxDlJxDy4=",
                  "order" : 1,
                  "inheritance_status" : "inherited"
                } ]
              }
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "lines" ],
        "description" : "Creates a calculation.",
        "operationId" : "createProductRiskTypeCalculation",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "version_name",
          "in" : "query",
          "description" : "Version name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "risk_type_name",
          "in" : "path",
          "description" : "Risk Type Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "product_name",
          "in" : "path",
          "description" : "Product Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version_id",
          "in" : "query",
          "description" : "Version UUID",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "CalculationCreate",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CalculationCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Calculation created successfully.",
            "schema" : {
              "$ref" : "#/definitions/CalculationCreate"
            },
            "examples" : {
              "application/json" : {
                "id" : "b039fc46-690a-4bc0-bbf6-2570b4d9eaa7",
                "risk_type" : "294cee37-041e-4aae-ae5d-87d8cc566703",
                "version" : "b2a81cbf-cfcf-4f6b-8be7-bbd0d67edbf0",
                "name" : "exampleCalculation",
                "type" : "variable",
                "referenced_names" : "{'current': [], 'descendant': []}",
                "calculation" : "1.0",
                "compiled_code" : "gANjZGlsbC5kaWxsCl9sb2FkX3R5cGUKcQBYCAAAAENvZGVUeXBlcQGFcQJScQMoSwBLAEsASwNLQEMOZQBlAWQAgwJkAYMBUwBxBFgHAAAARGVjaW1hbHEFWAMAAAAxLjBxBoZxB1gJAAAAX2dldGF0dHJfcQhYBwAAAGRlY2ltYWxxCYZxCilYCAAAADxzdHJpbmc+cQtYCAAAADxtb2R1bGU+cQxLAUMAcQ0pKXRxDlJxDy4=",
                "order" : 0,
                "inheritance_status" : "new"
              }
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "options" : {
        "tags" : [ "CORS" ],
        "summary" : "CORS support",
        "description" : "Enable CORS by returning correct headers",
        "consumes" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Default response for CORS method",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      }
    },
    "/lines/products/{product_name}/risk-types/{risk_type_name}/calculations/{calculation_name}" : {
      "get" : {
        "tags" : [ "lines" ],
        "description" : "Get details of a calculation.",
        "operationId" : "readProductRiskTypeCalculation",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "version_name",
          "in" : "query",
          "description" : "Version name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "risk_type_name",
          "in" : "path",
          "description" : "Risk Type Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "calculation_name",
          "in" : "path",
          "description" : "Calculation Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "product_name",
          "in" : "path",
          "description" : "Product Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version_id",
          "in" : "query",
          "description" : "Version UUID",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Calculation details.",
            "schema" : {
              "$ref" : "#/definitions/CalculationListRetrieve"
            },
            "examples" : {
              "application/json" : {
                "id" : "5c75c87f-7c57-4ba0-b35e-5536891b5b8d",
                "name" : "calculationExample",
                "type" : "variable",
                "description" : "Calculation Example",
                "calculation" : "1.0",
                "compiled_code" : "gANjZGlsbC5kaWxsCl9sb2FkX3R5cGUKcQBYCAAAAENvZGVUeXBlcQGFcQJScQMoSwBLAEsASwNLQEMOZQBlAWQAgwJkAYMBUwBxBFgHAAAARGVjaW1hbHEFWAMAAAAxLjBxBoZxB1gJAAAAX2dldGF0dHJfcQhYBwAAAGRlY2ltYWxxCYZxCilYCAAAADxzdHJpbmc+cQtYCAAAADxtb2R1bGU+cQxLAUMAcQ0pKXRxDlJxDy4=",
                "order" : 0,
                "inheritance_status" : "overridden",
                "inheritance_relationships" : [ {
                  "relationship_type" : "overridden_from",
                  "product" : {
                    "name" : "testProduct",
                    "label" : "Test Product"
                  }
                }, {
                  "relationship_type" : "overridden_by",
                  "product" : {
                    "name" : "anotherProduct",
                    "label" : "Another Product"
                  }
                } ]
              }
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "lines" ],
        "description" : "Updates a calculation.",
        "operationId" : "updateProductRiskTypeCalculation",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "version_name",
          "in" : "query",
          "description" : "Version name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "risk_type_name",
          "in" : "path",
          "description" : "Risk Type Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "calculation_name",
          "in" : "path",
          "description" : "Calculation Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "product_name",
          "in" : "path",
          "description" : "Product Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version_id",
          "in" : "query",
          "description" : "Version UUID",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "CalculationUpdate",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CalculationUpdate"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Calculation updated successfully.",
            "schema" : {
              "$ref" : "#/definitions/CalculationUpdate"
            },
            "examples" : {
              "application/json" : {
                "id" : "b039fc46-690a-4bc0-bbf6-2570b4d9eaa7",
                "risk_type" : "294cee37-041e-4aae-ae5d-87d8cc566703",
                "version" : "b2a81cbf-cfcf-4f6b-8be7-bbd0d67edbf0",
                "name" : "exampleCalculation",
                "type" : "variable",
                "referenced_names" : "{'current': [], 'descendant': []}",
                "calculation" : "1.0",
                "compiled_code" : "gANjZGlsbC5kaWxsCl9sb2FkX3R5cGUKcQBYCAAAAENvZGVUeXBlcQGFcQJScQMoSwBLAEsASwNLQEMOZQBlAWQAgwJkAYMBUwBxBFgHAAAARGVjaW1hbHEFWAMAAAAxLjBxBoZxB1gJAAAAX2dldGF0dHJfcQhYBwAAAGRlY2ltYWxxCYZxCilYCAAAADxzdHJpbmc+cQtYCAAAADxtb2R1bGU+cQxLAUMAcQ0pKXRxDlJxDy4=",
                "order" : 0,
                "inheritance_status" : "new"
              }
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "lines" ],
        "description" : "Deletes a calculation.",
        "operationId" : "deleteProductRiskTypeCalculation",
        "parameters" : [ {
          "name" : "version_name",
          "in" : "query",
          "description" : "Version name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "risk_type_name",
          "in" : "path",
          "description" : "Risk Type Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "calculation_name",
          "in" : "path",
          "description" : "Calculation Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "product_name",
          "in" : "path",
          "description" : "Product Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version_id",
          "in" : "query",
          "description" : "Version UUID",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "Calculation is successfully deleted.",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "options" : {
        "tags" : [ "CORS" ],
        "summary" : "CORS support",
        "description" : "Enable CORS by returning correct headers",
        "consumes" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Default response for CORS method",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "patch" : {
        "tags" : [ "lines" ],
        "description" : "Partially updates a calculation.",
        "operationId" : "partialUpdateProductRiskTypeCalculation",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "version_name",
          "in" : "query",
          "description" : "Version name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "risk_type_name",
          "in" : "path",
          "description" : "Risk Type Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "calculation_name",
          "in" : "path",
          "description" : "Calculation Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "product_name",
          "in" : "path",
          "description" : "Product Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version_id",
          "in" : "query",
          "description" : "Version UUID",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "CalculationPartialUpdate",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CalculationPartialUpdate"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Calculation updated successfully.",
            "schema" : {
              "$ref" : "#/definitions/CalculationPartialUpdate"
            },
            "examples" : {
              "application/json" : {
                "id" : "b039fc46-690a-4bc0-bbf6-2570b4d9eaa7",
                "risk_type" : "294cee37-041e-4aae-ae5d-87d8cc566703",
                "version" : "b2a81cbf-cfcf-4f6b-8be7-bbd0d67edbf0",
                "name" : "exampleCalculation",
                "type" : "variable",
                "referenced_names" : "{'current': [], 'descendant': []}",
                "calculation" : "1.0",
                "compiled_code" : "gANjZGlsbC5kaWxsCl9sb2FkX3R5cGUKcQBYCAAAAENvZGVUeXBlcQGFcQJScQMoSwBLAEsASwNLQEMOZQBlAWQAgwJkAYMBUwBxBFgHAAAARGVjaW1hbHEFWAMAAAAxLjBxBoZxB1gJAAAAX2dldGF0dHJfcQhYBwAAAGRlY2ltYWxxCYZxCilYCAAAADxzdHJpbmc+cQtYCAAAADxtb2R1bGU+cQxLAUMAcQ0pKXRxDlJxDy4=",
                "order" : 0,
                "inheritance_status" : "new"
              }
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      }
    },
    "/lines/products/{product_name}/risk-types/{risk_type_name}/calculations/{calculation_name}/reorder" : {
      "options" : {
        "tags" : [ "CORS" ],
        "summary" : "CORS support",
        "description" : "Enable CORS by returning correct headers",
        "consumes" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Default response for CORS method",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "patch" : {
        "tags" : [ "lines" ],
        "description" : "Reorders a Calculation.",
        "operationId" : "reorderProductRiskTypeCalculation",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "version_name",
          "in" : "query",
          "description" : "Version name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "risk_type_name",
          "in" : "path",
          "description" : "Risk Type Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "calculation_name",
          "in" : "path",
          "description" : "Calculation Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "product_name",
          "in" : "path",
          "description" : "Product Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version_id",
          "in" : "query",
          "description" : "Version UUID",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "CalculationReorder",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CalculationReorder"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Calculation reordered successfully.",
            "schema" : {
              "$ref" : "#/definitions/CalculationReorder"
            },
            "examples" : {
              "application/json" : {
                "order" : 42
              }
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      }
    },
    "/lines/products/{product_name}/risk-types/{risk_type_name}/calculations/{calculation_name}/restore" : {
      "post" : {
        "tags" : [ "lines" ],
        "description" : "Restore an overridden Calculation back to inherited status.",
        "operationId" : "restoreProductRiskTypeCalculation",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "version_name",
          "in" : "query",
          "description" : "Version name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "risk_type_name",
          "in" : "path",
          "description" : "Risk Type Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "calculation_name",
          "in" : "path",
          "description" : "Calculation Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "product_name",
          "in" : "path",
          "description" : "Product Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version_id",
          "in" : "query",
          "description" : "Version UUID",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "CalculationRestore",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CalculationRestore"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Calculation restored successfully.",
            "schema" : {
              "$ref" : "#/definitions/CalculationRestore"
            },
            "examples" : {
              "application/json" : {
                "id" : "53afa4b1-a48b-4059-b77f-5d6b78ce2a6e",
                "inheritance_status" : "inherited",
                "inheritance_relationships" : [ {
                  "relationship_type" : "inherited_from",
                  "product" : {
                    "name" : "generalAutoCW",
                    "label" : "General Auto - Countrywide"
                  }
                } ],
                "name" : "driverFactor",
                "type" : "variable",
                "calculation" : "1.0",
                "compiled_code" : "gANjZGlsbC5kaWxsCl9sb2FkX3R5cGUKcQBYCAAAAENvZGVUeXBlcQGFcQJScQMoSwBLAEsASwNLQEMOZQBlAWQAgwJkAYMBUwBxBFgHAAAARGVjaW1hbHEFWAMAAAAxLjBxBoZxB1gJAAAAX2dldGF0dHJfcQhYBwAAAGRlY2ltYWxxCYZxCilYCAAAADxzdHJpbmc+cQtYCAAAADxtb2R1bGU+cQxLAUMAcQ0pKXRxDlJxDy4=",
                "order" : 0
              }
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "options" : {
        "tags" : [ "CORS" ],
        "summary" : "CORS support",
        "description" : "Enable CORS by returning correct headers",
        "consumes" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Default response for CORS method",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      }
    },
    "/lines/products/{product_name}/risk-types/{risk_type_name}/copy" : {
      "post" : {
        "tags" : [ "lines" ],
        "description" : "Creates a copy of a risk type.",
        "operationId" : "copyRiskType",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "name" : "version_name",
          "in" : "query",
          "description" : "Version name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "risk_type_name",
          "in" : "path",
          "description" : "Risk Type Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "product_name",
          "in" : "path",
          "description" : "Product Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version_id",
          "in" : "query",
          "description" : "Version UUID",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "MODEL4cb80f",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/MODEL4cb80f"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns `risk_type_id` (UUID) of copied risk type.",
            "examples" : {
              "application/json" : {
                "risk_type_id" : "6d5bea9e-d439-47e0-88ea-2e4994f508c5"
              }
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "options" : {
        "tags" : [ "CORS" ],
        "summary" : "CORS support",
        "description" : "Enable CORS by returning correct headers",
        "consumes" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Default response for CORS method",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      }
    },
    "/lines/products/{product_name}/risk-types/{risk_type_name}/initialize-risk-state" : {
      "post" : {
        "tags" : [ "lines" ],
        "description" : "Initializes risk state of a given risk type.",
        "operationId" : "initializeRiskState",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "name" : "version_name",
          "in" : "query",
          "description" : "Version name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "risk_type_name",
          "in" : "path",
          "description" : "Risk Type Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "product_name",
          "in" : "path",
          "description" : "Product Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version_id",
          "in" : "query",
          "description" : "Version UUID",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "RiskStateInitializationValidator",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RiskStateInitializationValidator"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Initialized risk state.",
            "examples" : {
              "application/json" : {
                "id" : "e9244c42-b92e-4466-85ee-8aba68f2c12e",
                "name" : "Vehicle 3",
                "number" : 3,
                "total_premium" : 0.0,
                "type" : {
                  "id" : "070b89d2-43bd-43b8-8e27-997b0ec1d882",
                  "name" : "vehicles",
                  "label" : "Vehicle"
                },
                "field_answers" : {
                  "bodilyInjuryLimit" : "bodilyInjuryLimit_50000100000",
                  "includeAntiLockBrakes" : true,
                  "propertyDamageLimit" : "propertyDamageLimit_25000",
                  "medicalExpenseLimit" : "medicalExpenseLimit_2000"
                }
              }
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "options" : {
        "tags" : [ "CORS" ],
        "summary" : "CORS support",
        "description" : "Enable CORS by returning correct headers",
        "consumes" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Default response for CORS method",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      }
    },
    "/lines/products/{product_name}/risk-types/{risk_type_name}/rate-tables" : {
      "get" : {
        "tags" : [ "lines" ],
        "description" : "List all rate tables for the given Product and Risk Type.",
        "operationId" : "listProductRiskTypeRateTable",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "version_name",
          "in" : "query",
          "description" : "Version name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "risk_type_name",
          "in" : "path",
          "description" : "Risk Type Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "A page number within the paginated result set.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "product_name",
          "in" : "path",
          "description" : "Product Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version_id",
          "in" : "query",
          "description" : "Version UUID",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Rate tables list.",
            "schema" : {
              "$ref" : "#/definitions/RateTable"
            },
            "examples" : {
              "application/json" : {
                "count" : 1,
                "results" : [ {
                  "id" : "5e007bd1-5caf-46c2-82e7-ace1e5b69910",
                  "name" : "bodilyInjuryLimitFactorTable",
                  "label" : "BI Limit Factors",
                  "default" : 1.22,
                  "order" : 0,
                  "risk_type" : "705cff15-81ee-4c08-bc30-3a025b7f6a16",
                  "version" : "e5cda83b-570c-480d-af14-ff69a1e189b9",
                  "sources" : [ {
                    "id" : "c6aad670-0980-431b-ac9d-9d3f5aaaaa07",
                    "column_index" : 0,
                    "source_name" : "bodilyInjuryLimit",
                    "resolution" : "map",
                    "validity_state" : "valid",
                    "source_field" : "bae04019-8985-4213-b8a0-318cd0bdf7db"
                  } ],
                  "data" : [ [ "limit", "factor" ], [ "50000-100000", 1.22 ], [ "100000-300000", 1.47 ], [ "250000-500000", 1.61 ] ],
                  "validity_state" : "valid",
                  "inheritance_status" : "new"
                } ]
              }
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "lines" ],
        "description" : "Creates a rate table.",
        "operationId" : "createProductRiskTypeRateTable",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "version_name",
          "in" : "query",
          "description" : "Version name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "risk_type_name",
          "in" : "path",
          "description" : "Risk Type Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "product_name",
          "in" : "path",
          "description" : "Product Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version_id",
          "in" : "query",
          "description" : "Version UUID",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "RateTable",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RateTable"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Rate table created successfully.",
            "schema" : {
              "$ref" : "#/definitions/RateTable"
            },
            "examples" : {
              "application/json" : {
                "id" : "5e007bd1-5caf-46c2-82e7-ace1e5b69910",
                "name" : "bodilyInjuryLimitFactorTable",
                "label" : "BI Limit Factors",
                "default" : 1.22,
                "order" : 0,
                "risk_type" : "705cff15-81ee-4c08-bc30-3a025b7f6a16",
                "version" : "e5cda83b-570c-480d-af14-ff69a1e189b9",
                "sources" : [ {
                  "id" : "c6aad670-0980-431b-ac9d-9d3f5aaaaa07",
                  "column_index" : 0,
                  "source_name" : "bodilyInjuryLimit",
                  "resolution" : "map",
                  "validity_state" : "valid",
                  "source_field" : "bae04019-8985-4213-b8a0-318cd0bdf7db"
                } ],
                "data" : [ [ "limit", "factor" ], [ "50000-100000", 1.22 ], [ "100000-300000", 1.47 ], [ "250000-500000", 1.61 ] ],
                "validity_state" : "valid",
                "inheritance_status" : "new"
              }
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "options" : {
        "tags" : [ "CORS" ],
        "summary" : "CORS support",
        "description" : "Enable CORS by returning correct headers",
        "consumes" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Default response for CORS method",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      }
    },
    "/lines/products/{product_name}/risk-types/{risk_type_name}/rate-tables/{rate_table_name}" : {
      "get" : {
        "tags" : [ "lines" ],
        "description" : "Get details of a rate table.",
        "operationId" : "readProductRiskTypeRateTable",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "version_name",
          "in" : "query",
          "description" : "Version name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "risk_type_name",
          "in" : "path",
          "description" : "Risk Type Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "product_name",
          "in" : "path",
          "description" : "Product Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "rate_table_name",
          "in" : "path",
          "description" : "Rate Table Reference Name",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version_id",
          "in" : "query",
          "description" : "Version UUID",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Rate table details.",
            "schema" : {
              "$ref" : "#/definitions/RateTable"
            },
            "examples" : {
              "application/json" : {
                "id" : "5e007bd1-5caf-46c2-82e7-ace1e5b69910",
                "name" : "bodilyInjuryLimitFactorTable",
                "label" : "BI Limit Factors",
                "default" : 1.22,
                "order" : 0,
                "risk_type" : "705cff15-81ee-4c08-bc30-3a025b7f6a16",
                "version" : "e5cda83b-570c-480d-af14-ff69a1e189b9",
                "sources" : [ {
                  "id" : "c6aad670-0980-431b-ac9d-9d3f5aaaaa07",
                  "column_index" : 0,
                  "source_name" : "bodilyInjuryLimit",
                  "resolution" : "map",
                  "validity_state" : "valid",
                  "source_field" : "bae04019-8985-4213-b8a0-318cd0bdf7db"
                } ],
                "data" : [ [ "limit", "factor" ], [ "50000-100000", 1.22 ], [ "100000-300000", 1.47 ], [ "250000-500000", 1.61 ] ],
                "validity_state" : "valid",
                "inheritance_status" : "new"
              }
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "lines" ],
        "description" : "Updates a rate table.",
        "operationId" : "updateProductRiskTypeRateTable",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "version_name",
          "in" : "query",
          "description" : "Version name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "risk_type_name",
          "in" : "path",
          "description" : "Risk Type Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "product_name",
          "in" : "path",
          "description" : "Product Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "rate_table_name",
          "in" : "path",
          "description" : "Rate Table Reference Name",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version_id",
          "in" : "query",
          "description" : "Version UUID",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "RateTableUpdate",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RateTableUpdate"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Rate table updated successfully.",
            "schema" : {
              "$ref" : "#/definitions/RateTableUpdate"
            },
            "examples" : {
              "application/json" : {
                "id" : "5e007bd1-5caf-46c2-82e7-ace1e5b69910",
                "name" : "bodilyInjuryLimitFactorTable",
                "label" : "BI Limit Factors",
                "default" : 1.22,
                "order" : 0,
                "risk_type" : "705cff15-81ee-4c08-bc30-3a025b7f6a16",
                "version" : "e5cda83b-570c-480d-af14-ff69a1e189b9",
                "sources" : [ {
                  "id" : "c6aad670-0980-431b-ac9d-9d3f5aaaaa07",
                  "column_index" : 0,
                  "source_name" : "bodilyInjuryLimit",
                  "resolution" : "map",
                  "validity_state" : "valid",
                  "source_field" : "bae04019-8985-4213-b8a0-318cd0bdf7db"
                } ],
                "data" : [ [ "limit", "factor" ], [ "50000-100000", 1.22 ], [ "100000-300000", 1.47 ], [ "250000-500000", 1.61 ] ],
                "validity_state" : "valid",
                "inheritance_status" : "new"
              }
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "lines" ],
        "description" : "Deletes a rate table.",
        "operationId" : "deleteProductRiskTypeRateTable",
        "parameters" : [ {
          "name" : "version_name",
          "in" : "query",
          "description" : "Version name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "risk_type_name",
          "in" : "path",
          "description" : "Risk Type Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "product_name",
          "in" : "path",
          "description" : "Product Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "rate_table_name",
          "in" : "path",
          "description" : "Rate Table Reference Name",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version_id",
          "in" : "query",
          "description" : "Version UUID",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "Rate table is successfully deleted.",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "options" : {
        "tags" : [ "CORS" ],
        "summary" : "CORS support",
        "description" : "Enable CORS by returning correct headers",
        "consumes" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Default response for CORS method",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "patch" : {
        "tags" : [ "lines" ],
        "description" : "A viewset that provides `create` and `update` actions for a RateTableVersion.",
        "operationId" : "partialUpdateProductRiskTypeRateTable",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "RateTablePartialUpdate",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RateTablePartialUpdate"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Product updated successfully.",
            "schema" : {
              "$ref" : "#/definitions/RateTablePartialUpdate"
            },
            "examples" : {
              "application/json" : {
                "id" : "5e007bd1-5caf-46c2-82e7-ace1e5b69910",
                "label" : "General Auto - MO",
                "name" : "generalAutoMO",
                "line" : "2a17b803-1b2c-427a-93f2-5be5dd2b99e4",
                "parent_product" : "8f42c7b4-3921-45ed-a6b7-d64c45e2fa39",
                "version" : "2b4402f9-7247-4c6c-9f03-59b3af6e2fa2",
                "initial_version" : "2b4402f9-7247-4c6c-9f03-59b3af6e2fa2"
              }
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      }
    },
    "/lines/products/{product_name}/risk-types/{risk_type_name}/rate-tables/{rate_table_name}/reorder" : {
      "options" : {
        "tags" : [ "CORS" ],
        "summary" : "CORS support",
        "description" : "Enable CORS by returning correct headers",
        "consumes" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Default response for CORS method",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "patch" : {
        "tags" : [ "lines" ],
        "description" : "Reorders a Rate Table.",
        "operationId" : "reorderProductRiskTypeRateTable",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "version_name",
          "in" : "query",
          "description" : "Version name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "risk_type_name",
          "in" : "path",
          "description" : "Risk Type Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "product_name",
          "in" : "path",
          "description" : "Product Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "rate_table_name",
          "in" : "path",
          "description" : "Rate Table Reference Name",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version_id",
          "in" : "query",
          "description" : "Version UUID",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "RateTableReorder",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RateTableReorder"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Rate Table reordered successfully.",
            "schema" : {
              "$ref" : "#/definitions/RateTableReorder"
            },
            "examples" : {
              "application/json" : {
                "order" : 42
              }
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      }
    },
    "/lines/products/{product_name}/risk-types/{risk_type_name}/rate-tables/{rate_table_name}/restore" : {
      "post" : {
        "tags" : [ "lines" ],
        "description" : "Restore an overridden Rate Table back to inherited status.",
        "operationId" : "restoreProductRiskTypeRateTable",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "version_name",
          "in" : "query",
          "description" : "Version name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "risk_type_name",
          "in" : "path",
          "description" : "Risk Type Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "product_name",
          "in" : "path",
          "description" : "Product Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "rate_table_name",
          "in" : "path",
          "description" : "Rate Table Reference Name",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version_id",
          "in" : "query",
          "description" : "Version UUID",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "RateTableRestore",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RateTableRestore"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Rate table restored successfully.",
            "schema" : {
              "$ref" : "#/definitions/RateTableRestore"
            },
            "examples" : {
              "application/json" : {
                "id" : "5e007bd1-5caf-46c2-82e7-ace1e5b69910",
                "name" : "bodilyInjuryLimitFactorTable",
                "label" : "BI Limit Factors",
                "default" : 1.22,
                "order" : 0,
                "risk_type" : "705cff15-81ee-4c08-bc30-3a025b7f6a16",
                "version" : "e5cda83b-570c-480d-af14-ff69a1e189b9",
                "sources" : [ {
                  "id" : "c6aad670-0980-431b-ac9d-9d3f5aaaaa07",
                  "column_index" : 0,
                  "source_name" : "bodilyInjuryLimit",
                  "resolution" : "map",
                  "validity_state" : "valid",
                  "source_field" : "bae04019-8985-4213-b8a0-318cd0bdf7db"
                } ],
                "data" : [ [ "limit", "factor" ], [ "50000-100000", 1.22 ], [ "100000-300000", 1.47 ], [ "250000-500000", 1.61 ] ],
                "validity_state" : "valid",
                "inheritance_status" : "inherited",
                "inheritance_relationships" : [ {
                  "relationship_type" : "inherited_from",
                  "product" : {
                    "name" : "generalAutoCW",
                    "label" : "General Auto - Countrywide"
                  }
                } ]
              }
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "options" : {
        "tags" : [ "CORS" ],
        "summary" : "CORS support",
        "description" : "Enable CORS by returning correct headers",
        "consumes" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Default response for CORS method",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      }
    },
    "/lines/products/{product_name}/risk-types/{risk_type_name}/rating-context" : {
      "get" : {
        "tags" : [ "lines" ],
        "description" : "Returns all references that are available to a risk type.",
        "operationId" : "riskTypeRatingContext",
        "parameters" : [ {
          "name" : "risk_field_id",
          "in" : "query",
          "description" : "The UUID of risk field that should be ignored when requesting references.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "version_name",
          "in" : "query",
          "description" : "Version name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "risk_type_name",
          "in" : "path",
          "description" : "Risk Type Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "product_name",
          "in" : "path",
          "description" : "Product Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "risk_item_id",
          "in" : "query",
          "description" : "The risk item to receive references for.\nIf provided, item calculation references will be included in the response.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "version_id",
          "in" : "query",
          "description" : "Version UUID",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns references of form :obj:`list` of :obj:`dict`",
            "examples" : {
              "application/json" : {
                "references" : [ {
                  "name" : "serialVin",
                  "label" : "Serial/VIN",
                  "type" : "RiskField",
                  "display" : "Risk Field",
                  "id" : "28cfd04b-09e1-499e-896b-d819c45126c0",
                  "meta" : {
                    "type" : "string",
                    "display" : "String"
                  }
                }, {
                  "name" : "creditScoreOfPrimaryNamedInsured",
                  "label" : "Insurance Score of Primary Policy Holder",
                  "type" : "RiskField",
                  "display" : "Risk Field",
                  "id" : "4eef27c8-be9c-4d32-8e0f-8946b923670b",
                  "meta" : {
                    "type" : "enum",
                    "display" : "Option Selection"
                  }
                }, {
                  "name" : "collisionBaseRate",
                  "label" : "Collision Base Rate",
                  "type" : "RateTable",
                  "display" : "Rate Table",
                  "id" : "accbc810-31cd-4176-8cec-e82c43bfad8d"
                }, {
                  "name" : "antiLockFactor",
                  "label" : "antiLockFactor",
                  "type" : "SharedCalculation",
                  "display" : "Shared Calculation",
                  "id" : "9a665cdd-d1de-4fd8-bb08-033a09d887cd"
                }, {
                  "name" : "decimal",
                  "label" : "decimal",
                  "type" : "Utility",
                  "display" : "Utility"
                }, {
                  "name" : "risk",
                  "label" : "risk",
                  "type" : "Utility",
                  "display" : "Utility",
                  "meta" : {
                    "utilities" : [ {
                      "name" : "number",
                      "label" : "number",
                      "type" : "Utility",
                      "display" : "Utility"
                    }, {
                      "name" : "children",
                      "label" : "children",
                      "type" : "Utility",
                      "display" : "Utility",
                      "meta" : {
                        "utilities" : [ {
                          "name" : "count",
                          "label" : "count",
                          "type" : "Utility",
                          "display" : "Utility"
                        }, {
                          "name" : "exists",
                          "label" : "exists",
                          "type" : "Utility",
                          "display" : "Utility"
                        } ]
                      }
                    } ]
                  }
                } ]
              }
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "options" : {
        "tags" : [ "CORS" ],
        "summary" : "CORS support",
        "description" : "Enable CORS by returning correct headers",
        "consumes" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Default response for CORS method",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      }
    },
    "/lines/products/{product_name}/risk-types/{risk_type_name}/risk-fields" : {
      "get" : {
        "tags" : [ "lines" ],
        "description" : "List all risk fields for the given Product and Risk Type.",
        "operationId" : "listProductRiskTypeRiskField",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "version_name",
          "in" : "query",
          "description" : "Version name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "risk_type_name",
          "in" : "path",
          "description" : "Risk Type Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "A page number within the paginated result set.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "product_name",
          "in" : "path",
          "description" : "Product Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version_id",
          "in" : "query",
          "description" : "Version UUID",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Risk Field list.",
            "schema" : {
              "$ref" : "#/definitions/RiskField"
            },
            "examples" : {
              "application/json" : {
                "count" : 1,
                "results" : [ {
                  "id" : "6feb51a2-d168-4ada-bf61-ceaba0d94651",
                  "name" : "vin",
                  "risk_type" : "705cff15-81ee-4c08-bc30-3a025b7f6a16",
                  "version" : "1190e6cc-42fb-40cf-ba25-277bdd78d8b4",
                  "label" : "VIN",
                  "type" : "string",
                  "default" : "Test",
                  "field_format" : "string.vehicle.vin",
                  "supplemental" : true,
                  "optional" : false,
                  "order" : 0,
                  "description" : "test",
                  "used_in_rating" : false,
                  "inheritance_status" : "new",
                  "validators" : [ {
                    "name" : "length_range",
                    "params" : {
                      "min_value" : "10",
                      "max_value" : "20"
                    }
                  } ]
                } ]
              }
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "lines" ],
        "description" : "Creates a risk field.",
        "operationId" : "createProductRiskTypeRiskField",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "risk_field_name",
          "in" : "path",
          "description" : "Risk Field Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version_name",
          "in" : "query",
          "description" : "Version name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "risk_type_name",
          "in" : "path",
          "description" : "Risk Type Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "product_name",
          "in" : "path",
          "description" : "Product Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version_id",
          "in" : "query",
          "description" : "Version UUID",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "RiskField",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RiskField"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Risk field created successfully.",
            "schema" : {
              "$ref" : "#/definitions/RiskField"
            },
            "examples" : {
              "application/json" : {
                "id" : "6feb51a2-d168-4ada-bf61-ceaba0d94651",
                "name" : "vin",
                "risk_type" : "705cff15-81ee-4c08-bc30-3a025b7f6a16",
                "version" : "1190e6cc-42fb-40cf-ba25-277bdd78d8b4",
                "label" : "VIN",
                "type" : "string",
                "default" : "Test",
                "field_format" : "string.vehicle.vin",
                "supplemental" : true,
                "optional" : false,
                "order" : 0,
                "description" : "test",
                "used_in_rating" : false,
                "inheritance_status" : "new",
                "validators" : [ {
                  "name" : "length_range",
                  "params" : {
                    "min_value" : "10",
                    "max_value" : "20"
                  }
                } ]
              }
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "options" : {
        "tags" : [ "CORS" ],
        "summary" : "CORS support",
        "description" : "Enable CORS by returning correct headers",
        "consumes" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Default response for CORS method",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      }
    },
    "/lines/products/{product_name}/risk-types/{risk_type_name}/risk-fields/{risk_field_name}" : {
      "get" : {
        "tags" : [ "lines" ],
        "description" : "Get details of a field.",
        "operationId" : "readProductRiskTypeRiskField",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "risk_field_name",
          "in" : "path",
          "description" : "Risk Field Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version_name",
          "in" : "query",
          "description" : "Version name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "risk_type_name",
          "in" : "path",
          "description" : "Risk Type Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "product_name",
          "in" : "path",
          "description" : "Product Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version_id",
          "in" : "query",
          "description" : "Version UUID",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Risk field details.",
            "schema" : {
              "$ref" : "#/definitions/RiskField"
            },
            "examples" : {
              "application/json" : {
                "id" : "6feb51a2-d168-4ada-bf61-ceaba0d94651",
                "name" : "vin",
                "risk_type" : "705cff15-81ee-4c08-bc30-3a025b7f6a16",
                "version" : "1190e6cc-42fb-40cf-ba25-277bdd78d8b4",
                "label" : "VIN",
                "type" : "string",
                "default" : "Test",
                "field_format" : "string.vehicle.vin",
                "supplemental" : true,
                "optional" : false,
                "order" : 0,
                "description" : "test",
                "used_in_rating" : false,
                "inheritance_status" : "new",
                "validators" : [ {
                  "name" : "length_range",
                  "params" : {
                    "min_value" : "10",
                    "max_value" : "20"
                  }
                } ]
              }
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "lines" ],
        "description" : "Updates a risk field.",
        "operationId" : "updateProductRiskTypeRiskField",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "risk_field_name",
          "in" : "path",
          "description" : "Risk Field Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version_name",
          "in" : "query",
          "description" : "Version name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "risk_type_name",
          "in" : "path",
          "description" : "Risk Type Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "product_name",
          "in" : "path",
          "description" : "Product Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version_id",
          "in" : "query",
          "description" : "Version UUID",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "RiskField",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RiskField"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Risk field updated successfully.",
            "schema" : {
              "$ref" : "#/definitions/RiskField"
            },
            "examples" : {
              "application/json" : {
                "id" : "6feb51a2-d168-4ada-bf61-ceaba0d94651",
                "name" : "vin",
                "risk_type" : "705cff15-81ee-4c08-bc30-3a025b7f6a16",
                "version" : "1190e6cc-42fb-40cf-ba25-277bdd78d8b4",
                "label" : "VIN",
                "type" : "string",
                "default" : "Test",
                "field_format" : "string.vehicle.vin",
                "supplemental" : true,
                "optional" : false,
                "order" : 0,
                "description" : "test",
                "used_in_rating" : false,
                "inheritance_status" : "new",
                "validators" : [ {
                  "name" : "length_range",
                  "params" : {
                    "min_value" : "10",
                    "max_value" : "20"
                  }
                } ]
              }
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "lines" ],
        "description" : "Deletes a risk field.",
        "operationId" : "deleteProductRiskTypeRiskField",
        "parameters" : [ {
          "name" : "risk_field_name",
          "in" : "path",
          "description" : "Risk Field Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version_name",
          "in" : "query",
          "description" : "Version name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "risk_type_name",
          "in" : "path",
          "description" : "Risk Type Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "product_name",
          "in" : "path",
          "description" : "Product Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version_id",
          "in" : "query",
          "description" : "Version UUID",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "Risk field is successfully deleted.",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "options" : {
        "tags" : [ "CORS" ],
        "summary" : "CORS support",
        "description" : "Enable CORS by returning correct headers",
        "consumes" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Default response for CORS method",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "patch" : {
        "tags" : [ "lines" ],
        "description" : "Partially updates a risk field.",
        "operationId" : "partialUpdateProductRiskTypeRiskField",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "risk_field_name",
          "in" : "path",
          "description" : "Risk Field Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version_name",
          "in" : "query",
          "description" : "Version name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "risk_type_name",
          "in" : "path",
          "description" : "Risk Type Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "product_name",
          "in" : "path",
          "description" : "Product Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version_id",
          "in" : "query",
          "description" : "Version UUID",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "RiskField",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RiskField"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Risk field updated successfully.",
            "schema" : {
              "$ref" : "#/definitions/RiskField"
            },
            "examples" : {
              "application/json" : {
                "id" : "6feb51a2-d168-4ada-bf61-ceaba0d94651",
                "name" : "vin",
                "risk_type" : "705cff15-81ee-4c08-bc30-3a025b7f6a16",
                "version" : "1190e6cc-42fb-40cf-ba25-277bdd78d8b4",
                "label" : "VIN",
                "type" : "string",
                "default" : "Test",
                "field_format" : "string.vehicle.vin",
                "supplemental" : true,
                "optional" : false,
                "order" : 0,
                "description" : "test",
                "used_in_rating" : false,
                "inheritance_status" : "new",
                "validators" : [ {
                  "name" : "length_range",
                  "params" : {
                    "min_value" : "10",
                    "max_value" : "20"
                  }
                } ]
              }
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      }
    },
    "/lines/products/{product_name}/risk-types/{risk_type_name}/risk-fields/{risk_field_name}/reorder" : {
      "options" : {
        "tags" : [ "CORS" ],
        "summary" : "CORS support",
        "description" : "Enable CORS by returning correct headers",
        "consumes" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Default response for CORS method",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "patch" : {
        "tags" : [ "lines" ],
        "description" : "Reorders a Risk Field.",
        "operationId" : "reorderProductRiskTypeRiskField",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "risk_field_name",
          "in" : "path",
          "description" : "Risk Field Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version_name",
          "in" : "query",
          "description" : "Version name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "risk_type_name",
          "in" : "path",
          "description" : "Risk Type Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "product_name",
          "in" : "path",
          "description" : "Product Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version_id",
          "in" : "query",
          "description" : "Version UUID",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "RiskFieldReorder",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RiskFieldReorder"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Risk Field reordered successfully.",
            "schema" : {
              "$ref" : "#/definitions/RiskFieldReorder"
            },
            "examples" : {
              "application/json" : {
                "order" : 42
              }
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      }
    },
    "/lines/products/{product_name}/risk-types/{risk_type_name}/risk-fields/{risk_field_name}/restore" : {
      "post" : {
        "tags" : [ "lines" ],
        "description" : "Restore an overridden Risk Field back to inherited status.",
        "operationId" : "restoreProductRiskTypeRiskField",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "risk_field_name",
          "in" : "path",
          "description" : "Risk Field Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version_name",
          "in" : "query",
          "description" : "Version name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "risk_type_name",
          "in" : "path",
          "description" : "Risk Type Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "product_name",
          "in" : "path",
          "description" : "Product Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version_id",
          "in" : "query",
          "description" : "Version UUID",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "RiskFieldRestore",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RiskFieldRestore"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Risk Field restored successfully.",
            "schema" : {
              "$ref" : "#/definitions/RiskFieldRestore"
            },
            "examples" : {
              "application/json" : {
                "id" : "6feb51a2-d168-4ada-bf61-ceaba0d94651",
                "name" : "vin",
                "risk_type" : "705cff15-81ee-4c08-bc30-3a025b7f6a16",
                "version" : "1190e6cc-42fb-40cf-ba25-277bdd78d8b4",
                "label" : "VIN",
                "type" : "string",
                "default" : "Test",
                "field_format" : "string.vehicle.vin",
                "supplemental" : true,
                "optional" : false,
                "order" : 0,
                "description" : "test",
                "used_in_rating" : false,
                "inheritance_status" : "inherited",
                "inheritance_relationships" : [ {
                  "relationship_type" : "inherited_from",
                  "product" : {
                    "name" : "generalAutoCW",
                    "label" : "General Auto - Countrywide"
                  }
                } ]
              }
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "options" : {
        "tags" : [ "CORS" ],
        "summary" : "CORS support",
        "description" : "Enable CORS by returning correct headers",
        "consumes" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Default response for CORS method",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      }
    },
    "/lines/products/{product_name}/risk-types/{risk_type_name}/risk-items" : {
      "get" : {
        "tags" : [ "lines" ],
        "description" : "List all risk items for the given Product and Risk Type.",
        "operationId" : "listProductRiskTypeRiskItem",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "version_name",
          "in" : "query",
          "description" : "Version name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "risk_type_name",
          "in" : "path",
          "description" : "Risk Type Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "A page number within the paginated result set.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "product_name",
          "in" : "path",
          "description" : "Product Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version_id",
          "in" : "query",
          "description" : "Version UUID",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Risk Item list.",
            "schema" : {
              "$ref" : "#/definitions/RiskItemListRetrieve"
            },
            "examples" : {
              "application/json" : {
                "count" : 2,
                "results" : [ {
                  "id" : "d0c724ae-1d3a-48bd-9d38-2d2157513e74",
                  "label" : "Example Risk Item 1",
                  "name" : "riskItem1",
                  "presence" : "mandatory",
                  "order" : 0,
                  "inheritance_status" : "new"
                }, {
                  "id" : "55aecd7d-0257-4cf3-9275-93589a75f5ef",
                  "label" : "Example Risk Item 2",
                  "name" : "riskItem2",
                  "presence" : "mandatory",
                  "order" : 1,
                  "inheritance_status" : "new"
                } ]
              }
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "lines" ],
        "description" : "Creates a Risk Item.",
        "operationId" : "createProductRiskTypeRiskItem",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "version_name",
          "in" : "query",
          "description" : "Version name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "risk_type_name",
          "in" : "path",
          "description" : "Risk Type Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "product_name",
          "in" : "path",
          "description" : "Product Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version_id",
          "in" : "query",
          "description" : "Version UUID",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "RiskItemCreate",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RiskItemCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Risk Item created successfully.",
            "schema" : {
              "$ref" : "#/definitions/RiskItemCreate"
            },
            "examples" : {
              "application/json" : {
                "id" : "4f716411-a0c6-4390-9807-3b6b08939793",
                "order" : 0,
                "risk_type" : "a730606d-e99c-437f-85db-4d4337816b0c",
                "label" : "Example label",
                "name" : "exampleName",
                "presence" : "mandatory",
                "type" : "coverage",
                "inheritance_status" : "new"
              }
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "options" : {
        "tags" : [ "CORS" ],
        "summary" : "CORS support",
        "description" : "Enable CORS by returning correct headers",
        "consumes" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Default response for CORS method",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      }
    },
    "/lines/products/{product_name}/risk-types/{risk_type_name}/risk-items/{risk_item_name}" : {
      "get" : {
        "tags" : [ "lines" ],
        "description" : "Get details of a Risk Item.",
        "operationId" : "readProductRiskTypeRiskItem",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "version_name",
          "in" : "query",
          "description" : "Version name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "risk_type_name",
          "in" : "path",
          "description" : "Risk Type Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "product_name",
          "in" : "path",
          "description" : "Product Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "risk_item_name",
          "in" : "path",
          "description" : "Risk Item Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version_id",
          "in" : "query",
          "description" : "Version UUID",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Risk Item details.",
            "schema" : {
              "$ref" : "#/definitions/RiskItemListRetrieve"
            },
            "examples" : {
              "application/json" : {
                "id" : "19c0f823-b7c9-4b10-b720-5a9e342f4612",
                "label" : "Example Risk Item",
                "name" : "exampleName",
                "presence" : "mandatory",
                "order" : 0,
                "related_documents" : [ {
                  "id" : "2a17b803-1b2c-427a-93f2-5be5dd2b77e5",
                  "label" : "Example Related Document",
                  "description" : "This is an example Related Document",
                  "template_id" : "bafa6b69-2107-4f3d-95ad-e21f6c6ee6e1",
                  "risk_item" : "19c0f823-b7c9-4b10-b720-5a9e342f4612"
                } ],
                "limits" : [ {
                  "id" : "b1a80290-0fe9-403c-b59c-883fed5a922e",
                  "name" : "exampleLimit",
                  "label" : "Example Limit",
                  "type" : "per_risk_limit",
                  "calculation" : {
                    "id" : "4f1a2417-7181-4388-85b9-4894fb1c18ea",
                    "name" : "exampleLimitCalculation",
                    "type" : "limit",
                    "calculation" : "2",
                    "compiled_code" : "gANjZGlsbC5kaWxsCl9sb2FkX3R5cGUKcQBYCAAAAENvZGVUeXBlcQGFcQJScQMoSwBLAEsASwNLQEMOZQBlAWQAgwJkAYMBUwBxBFgHAAAARGVjaW1hbHEFWAEAAAAycQaGcQdYCQAAAF9nZXRhdHRyX3EIWAcAAABkZWNpbWFscQmGcQopWAgAAAA8c3RyaW5nPnELWAgAAAA8bW9kdWxlPnEMSwFDAHENKSl0cQ5ScQ8u",
                    "order" : 0
                  }
                } ],
                "inheritance_status" : "new"
              }
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "lines" ],
        "description" : "Updates a Risk Item.",
        "operationId" : "updateProductRiskTypeRiskItem",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "version_name",
          "in" : "query",
          "description" : "Version name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "risk_type_name",
          "in" : "path",
          "description" : "Risk Type Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "product_name",
          "in" : "path",
          "description" : "Product Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "risk_item_name",
          "in" : "path",
          "description" : "Risk Item Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version_id",
          "in" : "query",
          "description" : "Version UUID",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "RiskItemUpdate",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RiskItemUpdate"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Risk Item updated successfully.",
            "schema" : {
              "$ref" : "#/definitions/RiskItemUpdate"
            },
            "examples" : {
              "application/json" : {
                "id" : "4f716411-a0c6-4390-9807-3b6b08939793",
                "order" : 0,
                "risk_type" : "a730606d-e99c-437f-85db-4d4337816b0c",
                "label" : "Example label",
                "name" : "exampleName",
                "presence" : "mandatory",
                "type" : "coverage",
                "inheritance_status" : "new"
              }
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "lines" ],
        "description" : "Deletes a RiskItem.",
        "operationId" : "deleteProductRiskTypeRiskItem",
        "parameters" : [ {
          "name" : "version_name",
          "in" : "query",
          "description" : "Version name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "risk_type_name",
          "in" : "path",
          "description" : "Risk Type Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "product_name",
          "in" : "path",
          "description" : "Product Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "risk_item_name",
          "in" : "path",
          "description" : "Risk Item Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version_id",
          "in" : "query",
          "description" : "Version UUID",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "RiskItem is successfully deleted.",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "options" : {
        "tags" : [ "CORS" ],
        "summary" : "CORS support",
        "description" : "Enable CORS by returning correct headers",
        "consumes" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Default response for CORS method",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "patch" : {
        "tags" : [ "lines" ],
        "description" : "Partially updates a Risk Item.",
        "operationId" : "partialUpdateProductRiskTypeRiskItem",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "version_name",
          "in" : "query",
          "description" : "Version name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "risk_type_name",
          "in" : "path",
          "description" : "Risk Type Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "product_name",
          "in" : "path",
          "description" : "Product Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "risk_item_name",
          "in" : "path",
          "description" : "Risk Item Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version_id",
          "in" : "query",
          "description" : "Version UUID",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "RiskItemPartialUpdate",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RiskItemPartialUpdate"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Risk Item updated successfully.",
            "schema" : {
              "$ref" : "#/definitions/RiskItemPartialUpdate"
            },
            "examples" : {
              "application/json" : {
                "id" : "4f716411-a0c6-4390-9807-3b6b08939793",
                "order" : 0,
                "risk_type" : "a730606d-e99c-437f-85db-4d4337816b0c",
                "label" : "Example label",
                "name" : "exampleName",
                "presence" : "mandatory",
                "type" : "coverage",
                "inheritance_status" : "new"
              }
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      }
    },
    "/lines/products/{product_name}/risk-types/{risk_type_name}/risk-items/{risk_item_name}/calculations" : {
      "get" : {
        "tags" : [ "lines" ],
        "description" : "List all item calculations for the given Item, Product and Risk Type.",
        "operationId" : "listProductRiskTypeRiskItemCalculation",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "version_name",
          "in" : "query",
          "description" : "Version name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "risk_type_name",
          "in" : "path",
          "description" : "Risk Type Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "A page number within the paginated result set.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "product_name",
          "in" : "path",
          "description" : "Product Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "risk_item_name",
          "in" : "path",
          "description" : "Risk Item Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version_id",
          "in" : "query",
          "description" : "Version UUID",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Item Calculations list.",
            "schema" : {
              "$ref" : "#/definitions/CalculationListRetrieve"
            },
            "examples" : {
              "application/json" : {
                "count" : 1,
                "results" : [ {
                  "id" : "2a17b803-1b2c-427a-93f2-5be5dd2b99e4",
                  "name" : "premium",
                  "type" : "premium",
                  "calculation" : "1.0",
                  "compiled_code" : "gANjZGlsbC5kaWxsCl9sb2FkX3R5cGUKcQBYCAAAAENvZGVUeXBlcQGFcQJScQMoSwBLAEsASwNLQEMOZQBlAWQAgwJkAYMBUwBxBFgHAAAARGVjaW1hbHEFWAMAAAAxLjBxBoZxB1gJAAAAX2dldGF0dHJfcQhYBwAAAGRlY2ltYWxxCYZxCilYCAAAADxzdHJpbmc+cQtYCAAAADxtb2R1bGU+cQxLAUMAcQ0pKXRxDlJxDy4=",
                  "order" : 0,
                  "inheritance_status" : "new"
                } ]
              }
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "lines" ],
        "description" : "Creates an item calculation.",
        "operationId" : "createProductRiskTypeRiskItemCalculation",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "version_name",
          "in" : "query",
          "description" : "Version name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "risk_type_name",
          "in" : "path",
          "description" : "Risk Type Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "product_name",
          "in" : "path",
          "description" : "Product Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "risk_item_name",
          "in" : "path",
          "description" : "Risk Item Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version_id",
          "in" : "query",
          "description" : "Version UUID",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "CalculationCreate",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CalculationCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Item Calculation created successfully.",
            "schema" : {
              "$ref" : "#/definitions/CalculationCreate"
            },
            "examples" : {
              "application/json" : {
                "id" : "7dd3245a-765f-413a-9e1f-586864cebf5a",
                "risk_type" : "294cee37-041e-4aae-ae5d-87d8cc566703",
                "version" : "b2a81cbf-cfcf-4f6b-8be7-bbd0d67edbf0",
                "name" : "exampleCalculation",
                "type" : "variable",
                "referenced_names" : "{'current': [], 'descendant': []}",
                "calculation" : "1.0",
                "compiled_code" : "gANjZGlsbC5kaWxsCl9sb2FkX3R5cGUKcQBYCAAAAENvZGVUeXBlcQGFcQJScQMoSwBLAEsASwNLQEMOZQBlAWQAgwJkAYMBUwBxBFgHAAAARGVjaW1hbHEFWAMAAAAxLjBxBoZxB1gJAAAAX2dldGF0dHJfcQhYBwAAAGRlY2ltYWxxCYZxCilYCAAAADxzdHJpbmc+cQtYCAAAADxtb2R1bGU+cQxLAUMAcQ0pKXRxDlJxDy4=",
                "order" : 0,
                "inheritance_status" : "new"
              }
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "options" : {
        "tags" : [ "CORS" ],
        "summary" : "CORS support",
        "description" : "Enable CORS by returning correct headers",
        "consumes" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Default response for CORS method",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      }
    },
    "/lines/products/{product_name}/risk-types/{risk_type_name}/risk-items/{risk_item_name}/calculations/{calculation_name}" : {
      "get" : {
        "tags" : [ "lines" ],
        "description" : "Get details of an item calculation.",
        "operationId" : "readProductRiskTypeRiskItemCalculation",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "version_name",
          "in" : "query",
          "description" : "Version name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "risk_type_name",
          "in" : "path",
          "description" : "Risk Type Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "calculation_name",
          "in" : "path",
          "description" : "Calculation Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "product_name",
          "in" : "path",
          "description" : "Product Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "risk_item_name",
          "in" : "path",
          "description" : "Risk Item Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version_id",
          "in" : "query",
          "description" : "Version UUID",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Item Calculation details.",
            "schema" : {
              "$ref" : "#/definitions/CalculationListRetrieve"
            },
            "examples" : {
              "application/json" : {
                "id" : "ac78260c-afdf-42bd-8832-8c8bd3d9d663",
                "name" : "premium",
                "type" : "premium",
                "calculation" : "1.0",
                "compiled_code" : "gANjZGlsbC5kaWxsCl9sb2FkX3R5cGUKcQBYCAAAAENvZGVUeXBlcQGFcQJScQMoSwBLAEsASwNLQEMOZQBlAWQAgwJkAYMBUwBxBFgHAAAARGVjaW1hbHEFWAMAAAAxLjBxBoZxB1gJAAAAX2dldGF0dHJfcQhYBwAAAGRlY2ltYWxxCYZxCilYCAAAADxzdHJpbmc+cQtYCAAAADxtb2R1bGU+cQxLAUMAcQ0pKXRxDlJxDy4=",
                "order" : 0,
                "inheritance_status" : "new"
              }
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "lines" ],
        "description" : "Updates an item calculation.",
        "operationId" : "updateProductRiskTypeRiskItemCalculation",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "version_name",
          "in" : "query",
          "description" : "Version name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "risk_type_name",
          "in" : "path",
          "description" : "Risk Type Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "calculation_name",
          "in" : "path",
          "description" : "Calculation Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "product_name",
          "in" : "path",
          "description" : "Product Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "risk_item_name",
          "in" : "path",
          "description" : "Risk Item Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version_id",
          "in" : "query",
          "description" : "Version UUID",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "CalculationUpdate",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CalculationUpdate"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Item Calculation updated successfully.",
            "schema" : {
              "$ref" : "#/definitions/CalculationUpdate"
            },
            "examples" : {
              "application/json" : {
                "id" : "7dd3245a-765f-413a-9e1f-586864cebf5a",
                "risk_type" : "294cee37-041e-4aae-ae5d-87d8cc566703",
                "version" : "b2a81cbf-cfcf-4f6b-8be7-bbd0d67edbf0",
                "name" : "exampleCalculation",
                "type" : "variable",
                "referenced_names" : "{'current': [], 'descendant': []}",
                "calculation" : "1.0",
                "compiled_code" : "gANjZGlsbC5kaWxsCl9sb2FkX3R5cGUKcQBYCAAAAENvZGVUeXBlcQGFcQJScQMoSwBLAEsASwNLQEMOZQBlAWQAgwJkAYMBUwBxBFgHAAAARGVjaW1hbHEFWAMAAAAxLjBxBoZxB1gJAAAAX2dldGF0dHJfcQhYBwAAAGRlY2ltYWxxCYZxCilYCAAAADxzdHJpbmc+cQtYCAAAADxtb2R1bGU+cQxLAUMAcQ0pKXRxDlJxDy4=",
                "order" : 0,
                "inheritance_status" : "new"
              }
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "lines" ],
        "description" : "Deletes an item calculation.",
        "operationId" : "deleteProductRiskTypeRiskItemCalculation",
        "parameters" : [ {
          "name" : "version_name",
          "in" : "query",
          "description" : "Version name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "risk_type_name",
          "in" : "path",
          "description" : "Risk Type Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "calculation_name",
          "in" : "path",
          "description" : "Calculation Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "product_name",
          "in" : "path",
          "description" : "Product Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "risk_item_name",
          "in" : "path",
          "description" : "Risk Item Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version_id",
          "in" : "query",
          "description" : "Version UUID",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "Item calculation is successfully deleted.",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "options" : {
        "tags" : [ "CORS" ],
        "summary" : "CORS support",
        "description" : "Enable CORS by returning correct headers",
        "consumes" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Default response for CORS method",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "patch" : {
        "tags" : [ "lines" ],
        "description" : "Partially updates an item calculation.",
        "operationId" : "partialUpdateProductRiskTypeRiskItemCalculation",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "version_name",
          "in" : "query",
          "description" : "Version name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "risk_type_name",
          "in" : "path",
          "description" : "Risk Type Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "calculation_name",
          "in" : "path",
          "description" : "Calculation Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "product_name",
          "in" : "path",
          "description" : "Product Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "risk_item_name",
          "in" : "path",
          "description" : "Risk Item Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version_id",
          "in" : "query",
          "description" : "Version UUID",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "CalculationPartialUpdate",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CalculationPartialUpdate"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Item Calculation updated successfully.",
            "schema" : {
              "$ref" : "#/definitions/CalculationPartialUpdate"
            },
            "examples" : {
              "application/json" : {
                "id" : "7dd3245a-765f-413a-9e1f-586864cebf5a",
                "risk_type" : "294cee37-041e-4aae-ae5d-87d8cc566703",
                "version" : "b2a81cbf-cfcf-4f6b-8be7-bbd0d67edbf0",
                "name" : "exampleCalculation",
                "type" : "variable",
                "referenced_names" : "{'current': [], 'descendant': []}",
                "calculation" : "1.0",
                "compiled_code" : "gANjZGlsbC5kaWxsCl9sb2FkX3R5cGUKcQBYCAAAAENvZGVUeXBlcQGFcQJScQMoSwBLAEsASwNLQEMOZQBlAWQAgwJkAYMBUwBxBFgHAAAARGVjaW1hbHEFWAMAAAAxLjBxBoZxB1gJAAAAX2dldGF0dHJfcQhYBwAAAGRlY2ltYWxxCYZxCilYCAAAADxzdHJpbmc+cQtYCAAAADxtb2R1bGU+cQxLAUMAcQ0pKXRxDlJxDy4=",
                "order" : 0,
                "inheritance_status" : "new"
              }
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      }
    },
    "/lines/products/{product_name}/risk-types/{risk_type_name}/risk-items/{risk_item_name}/calculations/{calculation_name}/reorder" : {
      "options" : {
        "tags" : [ "CORS" ],
        "summary" : "CORS support",
        "description" : "Enable CORS by returning correct headers",
        "consumes" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Default response for CORS method",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "patch" : {
        "tags" : [ "lines" ],
        "description" : "Reorders an Item Calculation.",
        "operationId" : "reorderProductRiskTypeRiskItemCalculation",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "version_name",
          "in" : "query",
          "description" : "Version name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "risk_type_name",
          "in" : "path",
          "description" : "Risk Type Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "calculation_name",
          "in" : "path",
          "description" : "Calculation Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "product_name",
          "in" : "path",
          "description" : "Product Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "risk_item_name",
          "in" : "path",
          "description" : "Risk Item Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version_id",
          "in" : "query",
          "description" : "Version UUID",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "CalculationReorder",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CalculationReorder"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Item Calculation reordered successfully.",
            "schema" : {
              "$ref" : "#/definitions/CalculationReorder"
            },
            "examples" : {
              "application/json" : {
                "order" : 42
              }
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      }
    },
    "/lines/products/{product_name}/risk-types/{risk_type_name}/risk-items/{risk_item_name}/calculations/{calculation_name}/restore" : {
      "post" : {
        "tags" : [ "lines" ],
        "description" : "Restores an overridden Item Calculation back to inherited status.",
        "operationId" : "restoreProductRiskTypeRiskItemCalculation",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "version_name",
          "in" : "query",
          "description" : "Version name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "risk_type_name",
          "in" : "path",
          "description" : "Risk Type Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "calculation_name",
          "in" : "path",
          "description" : "Calculation Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "product_name",
          "in" : "path",
          "description" : "Product Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "risk_item_name",
          "in" : "path",
          "description" : "Risk Item Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version_id",
          "in" : "query",
          "description" : "Version UUID",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "CalculationRestore",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CalculationRestore"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Calculation restored successfully.",
            "schema" : {
              "$ref" : "#/definitions/CalculationRestore"
            },
            "examples" : {
              "application/json" : {
                "id" : "53afa4b1-a48b-4059-b77f-5d6b78ce2a6e",
                "inheritance_status" : "inherited",
                "inheritance_relationships" : [ {
                  "relationship_type" : "inherited_from",
                  "product" : {
                    "name" : "generalAutoCW",
                    "label" : "General Auto - Countrywide"
                  }
                } ],
                "name" : "driverFactor",
                "type" : "variable",
                "calculation" : "1.0",
                "compiled_code" : "gANjZGlsbC5kaWxsCl9sb2FkX3R5cGUKcQBYCAAAAENvZGVUeXBlcQGFcQJScQMoSwBLAEsASwNLQEMOZQBlAWQAgwJkAYMBUwBxBFgHAAAARGVjaW1hbHEFWAMAAAAxLjBxBoZxB1gJAAAAX2dldGF0dHJfcQhYBwAAAGRlY2ltYWxxCYZxCilYCAAAADxzdHJpbmc+cQtYCAAAADxtb2R1bGU+cQxLAUMAcQ0pKXRxDlJxDy4=",
                "order" : 0
              }
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "options" : {
        "tags" : [ "CORS" ],
        "summary" : "CORS support",
        "description" : "Enable CORS by returning correct headers",
        "consumes" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Default response for CORS method",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      }
    },
    "/lines/products/{product_name}/risk-types/{risk_type_name}/risk-items/{risk_item_name}/limits" : {
      "get" : {
        "tags" : [ "lines" ],
        "description" : "List all limits for the given Product, Risk Type and Risk Item.",
        "operationId" : "listProductRiskTypeRiskItemLimit",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "version_name",
          "in" : "query",
          "description" : "Version name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "risk_type_name",
          "in" : "path",
          "description" : "Risk Type Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "A page number within the paginated result set.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "product_name",
          "in" : "path",
          "description" : "Product Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "risk_item_name",
          "in" : "path",
          "description" : "Risk Item Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version_id",
          "in" : "query",
          "description" : "Version UUID",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Limit list.",
            "schema" : {
              "$ref" : "#/definitions/LimitListRetrieve"
            },
            "examples" : {
              "application/json" : {
                "count" : 1,
                "results" : [ {
                  "id" : "6431a254-f814-411a-8bd3-b56b3f9634e3",
                  "label" : "My New Limit",
                  "name" : "my_new_limit",
                  "type" : "per_risk_limit",
                  "risk_type" : "705cff15-81ee-4c08-bc30-3a025b7f6a16",
                  "version" : "e5cda83b-570c-480d-af14-ff69a1e189b9",
                  "inheritance_status" : "new"
                } ]
              }
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "lines" ],
        "description" : "Creates a limit.",
        "operationId" : "createProductRiskTypeRiskItemLimit",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "version_name",
          "in" : "query",
          "description" : "Version name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "risk_type_name",
          "in" : "path",
          "description" : "Risk Type Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "product_name",
          "in" : "path",
          "description" : "Product Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "risk_item_name",
          "in" : "path",
          "description" : "Risk Item Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version_id",
          "in" : "query",
          "description" : "Version UUID",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "LimitCreate",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/LimitCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Limit created successfully.",
            "schema" : {
              "$ref" : "#/definitions/LimitCreate"
            },
            "examples" : {
              "application/json" : {
                "id" : "6431a254-f814-411a-8bd3-b56b3f9634e3",
                "label" : "My New Limit",
                "name" : "my_new_limit",
                "type" : "per_risk_limit",
                "risk_type" : "705cff15-81ee-4c08-bc30-3a025b7f6a16",
                "version" : "e5cda83b-570c-480d-af14-ff69a1e189b9",
                "inheritance_status" : "new"
              }
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "options" : {
        "tags" : [ "CORS" ],
        "summary" : "CORS support",
        "description" : "Enable CORS by returning correct headers",
        "consumes" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Default response for CORS method",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      }
    },
    "/lines/products/{product_name}/risk-types/{risk_type_name}/risk-items/{risk_item_name}/limits/{limit_name}" : {
      "get" : {
        "tags" : [ "lines" ],
        "description" : "Get details of a limit.",
        "operationId" : "readProductRiskTypeRiskItemLimit",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "version_name",
          "in" : "query",
          "description" : "Version name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "risk_type_name",
          "in" : "path",
          "description" : "Risk Type Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "product_name",
          "in" : "path",
          "description" : "Product Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "risk_item_name",
          "in" : "path",
          "description" : "Risk Item Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version_id",
          "in" : "query",
          "description" : "Version UUID",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "limit_name",
          "in" : "path",
          "description" : "Limit Reference Name.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Limit details.",
            "schema" : {
              "$ref" : "#/definitions/LimitListRetrieve"
            },
            "examples" : {
              "application/json" : {
                "id" : "6431a254-f814-411a-8bd3-b56b3f9634e3",
                "label" : "My New Limit",
                "name" : "my_new_limit",
                "type" : "per_risk_limit",
                "risk_type" : "705cff15-81ee-4c08-bc30-3a025b7f6a16",
                "version" : "e5cda83b-570c-480d-af14-ff69a1e189b9",
                "inheritance_status" : "new"
              }
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "lines" ],
        "description" : "Updates a limit.",
        "operationId" : "updateProductRiskTypeRiskItemLimit",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "version_name",
          "in" : "query",
          "description" : "Version name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "risk_type_name",
          "in" : "path",
          "description" : "Risk Type Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "product_name",
          "in" : "path",
          "description" : "Product Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "risk_item_name",
          "in" : "path",
          "description" : "Risk Item Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version_id",
          "in" : "query",
          "description" : "Version UUID",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "limit_name",
          "in" : "path",
          "description" : "Limit Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "LimitUpdate",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/LimitUpdate"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Limit updated successfully.",
            "schema" : {
              "$ref" : "#/definitions/LimitUpdate"
            },
            "examples" : {
              "application/json" : {
                "id" : "6431a254-f814-411a-8bd3-b56b3f9634e3",
                "label" : "My New Limit 2",
                "name" : "my_new_limit",
                "type" : "per_occurrence_limit",
                "risk_type" : "705cff15-81ee-4c08-bc30-3a025b7f6a16",
                "version" : "e5cda83b-570c-480d-af14-ff69a1e189b9",
                "inheritance_status" : "new"
              }
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "lines" ],
        "description" : "Deletes a limit.",
        "operationId" : "deleteProductRiskTypeRiskItemLimit",
        "parameters" : [ {
          "name" : "version_name",
          "in" : "query",
          "description" : "Version name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "risk_type_name",
          "in" : "path",
          "description" : "Risk Type Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "product_name",
          "in" : "path",
          "description" : "Product Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "risk_item_name",
          "in" : "path",
          "description" : "Risk Item Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version_id",
          "in" : "query",
          "description" : "Version UUID",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "limit_name",
          "in" : "path",
          "description" : "Limit Reference Name.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "Limit is successfully deleted.",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "options" : {
        "tags" : [ "CORS" ],
        "summary" : "CORS support",
        "description" : "Enable CORS by returning correct headers",
        "consumes" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Default response for CORS method",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "patch" : {
        "tags" : [ "lines" ],
        "description" : "Partially updates a limit.",
        "operationId" : "partialUpdateProductRiskTypeRiskItemLimit",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "version_name",
          "in" : "query",
          "description" : "Version name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "risk_type_name",
          "in" : "path",
          "description" : "Risk Type Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "product_name",
          "in" : "path",
          "description" : "Product Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "risk_item_name",
          "in" : "path",
          "description" : "Risk Item Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version_id",
          "in" : "query",
          "description" : "Version UUID",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "limit_name",
          "in" : "path",
          "description" : "Limit Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "LimitPartialUpdate",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/LimitPartialUpdate"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Limit updated successfully.",
            "schema" : {
              "$ref" : "#/definitions/LimitPartialUpdate"
            },
            "examples" : {
              "application/json" : {
                "id" : "6431a254-f814-411a-8bd3-b56b3f9634e3",
                "label" : "My New Limit 2",
                "name" : "my_new_limit",
                "type" : "per_occurrence_limit",
                "risk_type" : "705cff15-81ee-4c08-bc30-3a025b7f6a16",
                "version" : "e5cda83b-570c-480d-af14-ff69a1e189b9",
                "inheritance_status" : "new"
              }
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      }
    },
    "/lines/products/{product_name}/risk-types/{risk_type_name}/risk-items/{risk_item_name}/reorder" : {
      "options" : {
        "tags" : [ "CORS" ],
        "summary" : "CORS support",
        "description" : "Enable CORS by returning correct headers",
        "consumes" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Default response for CORS method",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "patch" : {
        "tags" : [ "lines" ],
        "description" : "Reorders a Risk Item.",
        "operationId" : "reorderProductRiskTypeRiskItem",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "version_name",
          "in" : "query",
          "description" : "Version name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "risk_type_name",
          "in" : "path",
          "description" : "Risk Type Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "product_name",
          "in" : "path",
          "description" : "Product Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "risk_item_name",
          "in" : "path",
          "description" : "Risk Item Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version_id",
          "in" : "query",
          "description" : "Version UUID",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "RiskItemReorder",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RiskItemReorder"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Risk Item reordered successfully.",
            "schema" : {
              "$ref" : "#/definitions/RiskItemReorder"
            },
            "examples" : {
              "application/json" : {
                "order" : 42
              }
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      }
    },
    "/lines/products/{product_name}/risk-types/{risk_type_name}/risk-items/{risk_item_name}/restore" : {
      "post" : {
        "tags" : [ "lines" ],
        "description" : "Restore an overridden Risk Item back to inherited status.",
        "operationId" : "restoreProductRiskTypeRiskItem",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "risk_field_name",
          "in" : "path",
          "description" : "Risk Field Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version_name",
          "in" : "query",
          "description" : "Version name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "risk_type_name",
          "in" : "path",
          "description" : "Risk Type Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "product_name",
          "in" : "path",
          "description" : "Product Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version_id",
          "in" : "query",
          "description" : "Version UUID",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "RiskItemRestore",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RiskItemRestore"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Risk Item restored successfully.",
            "schema" : {
              "$ref" : "#/definitions/RiskItemRestore"
            },
            "examples" : {
              "application/json" : {
                "id" : "4f716411-a0c6-4390-9807-3b6b08939793",
                "order" : 0,
                "risk_type" : "a730606d-e99c-437f-85db-4d4337816b0c",
                "version" : "25399ee9-0f51-4b72-add4-ed938ea74e3e",
                "inheritance_status" : "inherited",
                "inheritance_relationships" : [ {
                  "relationship_type" : "inherited_from",
                  "product" : {
                    "name" : "generalAutoCW",
                    "label" : "General Auto - Countrywide"
                  }
                } ],
                "label" : "Example label",
                "name" : "exampleName",
                "presence" : "mandatory",
                "type" : "coverage"
              }
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "options" : {
        "tags" : [ "CORS" ],
        "summary" : "CORS support",
        "description" : "Enable CORS by returning correct headers",
        "consumes" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Default response for CORS method",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      }
    },
    "/lines/products/{product_name}/risk-types/{risk_type_name}/risk-name-template-references" : {
      "get" : {
        "tags" : [ "lines" ],
        "description" : "Returns all references that can be used in risk name template.",
        "operationId" : "riskNameTemplateReferences",
        "parameters" : [ {
          "name" : "version_name",
          "in" : "query",
          "description" : "Version name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "risk_type_name",
          "in" : "path",
          "description" : "Risk Type Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "product_name",
          "in" : "path",
          "description" : "Product Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version_id",
          "in" : "query",
          "description" : "Version UUID",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns references of form :obj:`list` of :obj:`dict`",
            "examples" : {
              "application/json" : {
                "references" : [ {
                  "name" : "vin",
                  "label" : "VIN",
                  "type" : "RiskField",
                  "display" : "Risk Field",
                  "id" : "6feb51a2-d168-4ada-bf61-ceaba0d94651",
                  "meta" : {
                    "type" : "string",
                    "display" : "String"
                  }
                }, {
                  "name" : "chosenDriver",
                  "label" : "Principal Driver",
                  "type" : "RiskField",
                  "display" : "Risk Field",
                  "id" : "16cc5c25-a500-4f08-8d14-ec8e465371d8",
                  "meta" : {
                    "type" : "enum",
                    "display" : "Option Selection",
                    "source" : {
                      "source_type" : "risk_types",
                      "source_entity" : "e54b811d-ec05-46bf-b0cc-417a2279d5b0",
                      "source_entity_name" : "drivers",
                      "source_label_template" : "{{ driverName }}"
                    }
                  }
                }, {
                  "name" : "driverName",
                  "label" : "Name",
                  "type" : "RiskField",
                  "display" : "Risk Field",
                  "id" : "de3d87bc-fa3d-470c-864f-566f65bae40b",
                  "meta" : {
                    "type" : "string",
                    "display" : "String",
                    "parent" : {
                      "name" : "chosenDriver",
                      "label" : "Principal Driver",
                      "type" : "RiskField",
                      "display" : "Risk Field",
                      "id" : "16cc5c25-a500-4f08-8d14-ec8e465371d8",
                      "meta" : {
                        "type" : "enum",
                        "display" : "Option Selection",
                        "source" : {
                          "source_type" : "risk_types",
                          "source_entity" : "e54b811d-ec05-46bf-b0cc-417a2279d5b0",
                          "source_entity_name" : "drivers",
                          "source_label_template" : "{{ driverName }}"
                        }
                      }
                    }
                  }
                }, {
                  "name" : "dob",
                  "label" : "Date of Birth",
                  "type" : "RiskField",
                  "display" : "Risk Field",
                  "id" : "134e6ed6-2517-4742-b3e9-e7607505b443",
                  "meta" : {
                    "type" : "date",
                    "display" : "Date",
                    "parent" : {
                      "name" : "chosenDriver",
                      "label" : "Principal Driver",
                      "type" : "RiskField",
                      "display" : "Risk Field",
                      "id" : "16cc5c25-a500-4f08-8d14-ec8e465371d8",
                      "meta" : {
                        "type" : "enum",
                        "display" : "Option Selection",
                        "source" : {
                          "source_type" : "risk_types",
                          "source_entity" : "e54b811d-ec05-46bf-b0cc-417a2279d5b0",
                          "source_entity_name" : "drivers",
                          "source_label_template" : "{{ driverName }}"
                        }
                      }
                    }
                  }
                }, {
                  "name" : "gender",
                  "label" : "Gender",
                  "type" : "RiskField",
                  "display" : "Risk Field",
                  "id" : "1e71c890-eb25-43bd-bcc7-f6d91219cb7b",
                  "meta" : {
                    "type" : "enum",
                    "display" : "Option Selection",
                    "parent" : {
                      "name" : "chosenDriver",
                      "label" : "Principal Driver",
                      "type" : "RiskField",
                      "display" : "Risk Field",
                      "id" : "16cc5c25-a500-4f08-8d14-ec8e465371d8",
                      "meta" : {
                        "type" : "enum",
                        "display" : "Option Selection",
                        "source" : {
                          "source_type" : "risk_types",
                          "source_entity" : "e54b811d-ec05-46bf-b0cc-417a2279d5b0",
                          "source_entity_name" : "drivers",
                          "source_label_template" : "{{ driverName }}"
                        }
                      }
                    }
                  }
                }, {
                  "name" : "maritalStatus",
                  "label" : "Maritial Status",
                  "type" : "RiskField",
                  "display" : "Risk Field",
                  "id" : "8f380410-823b-4fe9-b66e-910c721c37d4",
                  "meta" : {
                    "type" : "enum",
                    "display" : "Option Selection",
                    "parent" : {
                      "name" : "chosenDriver",
                      "label" : "Principal Driver",
                      "type" : "RiskField",
                      "display" : "Risk Field",
                      "id" : "16cc5c25-a500-4f08-8d14-ec8e465371d8",
                      "meta" : {
                        "type" : "enum",
                        "display" : "Option Selection",
                        "source" : {
                          "source_type" : "risk_types",
                          "source_entity" : "e54b811d-ec05-46bf-b0cc-417a2279d5b0",
                          "source_entity_name" : "drivers",
                          "source_label_template" : "{{ driverName }}"
                        }
                      }
                    }
                  }
                }, {
                  "name" : "driversLicenseNumber",
                  "label" : "Drivers License Number",
                  "type" : "RiskField",
                  "display" : "Risk Field",
                  "id" : "9e10dce4-e0d3-4330-b87b-6eb10a8eb33f",
                  "meta" : {
                    "type" : "string",
                    "display" : "String",
                    "parent" : {
                      "name" : "chosenDriver",
                      "label" : "Principal Driver",
                      "type" : "RiskField",
                      "display" : "Risk Field",
                      "id" : "16cc5c25-a500-4f08-8d14-ec8e465371d8",
                      "meta" : {
                        "type" : "enum",
                        "display" : "Option Selection",
                        "source" : {
                          "source_type" : "risk_types",
                          "source_entity" : "e54b811d-ec05-46bf-b0cc-417a2279d5b0",
                          "source_entity_name" : "drivers",
                          "source_label_template" : "{{ driverName }}"
                        }
                      }
                    }
                  }
                }, {
                  "name" : "goodStudent",
                  "label" : "Good Student",
                  "type" : "RiskField",
                  "display" : "Risk Field",
                  "id" : "a989561c-dacb-46c6-a6d5-c2363f426906",
                  "meta" : {
                    "type" : "boolean",
                    "display" : "Boolean",
                    "parent" : {
                      "name" : "chosenDriver",
                      "label" : "Principal Driver",
                      "type" : "RiskField",
                      "display" : "Risk Field",
                      "id" : "16cc5c25-a500-4f08-8d14-ec8e465371d8",
                      "meta" : {
                        "type" : "enum",
                        "display" : "Option Selection",
                        "source" : {
                          "source_type" : "risk_types",
                          "source_entity" : "e54b811d-ec05-46bf-b0cc-417a2279d5b0",
                          "source_entity_name" : "drivers",
                          "source_label_template" : "{{ driverName }}"
                        }
                      }
                    }
                  }
                }, {
                  "name" : "driverTraining",
                  "label" : "Driver Training",
                  "type" : "RiskField",
                  "display" : "Risk Field",
                  "id" : "8e8fbc9c-f409-4199-bac3-e6e346d6e8de",
                  "meta" : {
                    "type" : "boolean",
                    "display" : "Boolean",
                    "parent" : {
                      "name" : "chosenDriver",
                      "label" : "Principal Driver",
                      "type" : "RiskField",
                      "display" : "Risk Field",
                      "id" : "16cc5c25-a500-4f08-8d14-ec8e465371d8",
                      "meta" : {
                        "type" : "enum",
                        "display" : "Option Selection",
                        "source" : {
                          "source_type" : "risk_types",
                          "source_entity" : "e54b811d-ec05-46bf-b0cc-417a2279d5b0",
                          "source_entity_name" : "drivers",
                          "source_label_template" : "{{ driverName }}"
                        }
                      }
                    }
                  }
                }, {
                  "name" : "includeSeniorDiscount",
                  "label" : "Senior Driver Discount",
                  "type" : "RiskField",
                  "display" : "Risk Field",
                  "id" : "02d6d9cd-4190-4739-a517-867ebc41d97e",
                  "meta" : {
                    "type" : "boolean",
                    "display" : "Boolean",
                    "parent" : {
                      "name" : "chosenDriver",
                      "label" : "Principal Driver",
                      "type" : "RiskField",
                      "display" : "Risk Field",
                      "id" : "16cc5c25-a500-4f08-8d14-ec8e465371d8",
                      "meta" : {
                        "type" : "enum",
                        "display" : "Option Selection",
                        "source" : {
                          "source_type" : "risk_types",
                          "source_entity" : "e54b811d-ec05-46bf-b0cc-417a2279d5b0",
                          "source_entity_name" : "drivers",
                          "source_label_template" : "{{ driverName }}"
                        }
                      }
                    }
                  }
                }, {
                  "name" : "ratingTier",
                  "label" : "Rating Tier",
                  "type" : "RiskField",
                  "display" : "Risk Field",
                  "id" : "0643506c-8b75-4c79-b2ab-196d8020e49f",
                  "meta" : {
                    "type" : "enum",
                    "display" : "Option Selection"
                  }
                }, {
                  "name" : "territory",
                  "label" : "Territory",
                  "type" : "RiskField",
                  "display" : "Risk Field",
                  "id" : "537030c5-50c1-4780-9e6e-de6a0e7382e6",
                  "meta" : {
                    "type" : "enum",
                    "display" : "Option Selection"
                  }
                }, {
                  "name" : "bodilyInjuryLimit",
                  "label" : "Bodily Injury",
                  "type" : "RiskField",
                  "display" : "Risk Field",
                  "id" : "bae04019-8985-4213-b8a0-318cd0bdf7db",
                  "meta" : {
                    "type" : "enum",
                    "display" : "Option Selection"
                  }
                }, {
                  "name" : "includeAntiLockBrakes",
                  "label" : "Anti-lock Brakes",
                  "type" : "RiskField",
                  "display" : "Risk Field",
                  "id" : "4bd89741-ace9-4a37-9c6d-49ed425f2fd8",
                  "meta" : {
                    "type" : "boolean",
                    "display" : "Boolean"
                  }
                }, {
                  "name" : "riskType",
                  "label" : "Risk Type",
                  "type" : "RiskType",
                  "display" : "Risk Type",
                  "id" : "705cff15-81ee-4c08-bc30-3a025b7f6a16",
                  "meta" : {
                    "attributes" : [ {
                      "name" : "name",
                      "label" : "name",
                      "type" : "RiskTypeAttribute",
                      "display" : "Risk Type Attribute"
                    }, {
                      "name" : "label",
                      "label" : "label",
                      "type" : "RiskTypeAttribute",
                      "display" : "Risk Type Attribute"
                    } ]
                  }
                }, {
                  "name" : "number",
                  "label" : "number",
                  "type" : "RiskAttribute",
                  "display" : "Risk Attribute"
                } ]
              }
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "options" : {
        "tags" : [ "CORS" ],
        "summary" : "CORS support",
        "description" : "Enable CORS by returning correct headers",
        "consumes" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Default response for CORS method",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      }
    },
    "/lines/products/{product_name}/risk-types/{risk_type_name}/state" : {
      "get" : {
        "tags" : [ "lines" ],
        "description" : "Retrieves Risk Type State. Supports Gzip encoding via the Accept-Encoding header.",
        "operationId" : "stateProductRiskType",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "version_name",
          "in" : "query",
          "description" : "Version name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "risk_type_name",
          "in" : "path",
          "description" : "Risk Type Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "product_name",
          "in" : "path",
          "description" : "Product Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Accept-Encoding",
          "in" : "header",
          "description" : "Return response as a Gzip compressed binary",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "type",
          "in" : "query",
          "description" : "The variant of risk type state which is to be returned.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "version_id",
          "in" : "query",
          "description" : "Version UUID",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Risk Type State based on the `type` query parameter. Defaults to `full`. `minimal` Risk Type States do not have `calculations` and `rate_tables` values.",
            "schema" : {
              "$ref" : "#/definitions/RiskTypeState"
            },
            "examples" : {
              "application/json" : {
                "id" : "36b5c830-343a-4ece-b26d-1fdfe3ca43d5",
                "label" : "Vehicle",
                "name" : "vehicles",
                "version" : "d5846981-eaae-4167-a878-e56726d52d82",
                "line" : {
                  "id" : "ece606bf-ca47-462b-8b8d-14959131abe9",
                  "label" : "General Auto",
                  "name" : "generalAuto",
                  "description" : "General Auto Description"
                },
                "fields" : [ {
                  "id" : "d8e36ab4-bbf3-46dc-8af9-a8edfe130094",
                  "risk_type" : "36b5c830-343a-4ece-b26d-1fdfe3ca43d5",
                  "version" : "d5846981-eaae-4167-a878-e56726d52d82",
                  "order" : 8,
                  "options" : [ {
                    "value" : "50000-100000",
                    "label" : "50000-100000",
                    "display_label" : "50000-100000",
                    "name" : "bodilyInjuryLimit_50000100000"
                  }, {
                    "value" : "100000-300000",
                    "label" : "100000-300000",
                    "display_label" : "100000-300000",
                    "name" : "bodilyInjuryLimit_100000300000"
                  }, {
                    "value" : "250000-500000",
                    "label" : "250000-500000",
                    "display_label" : "250000-500000",
                    "name" : "bodilyInjuryLimit_250000500000"
                  } ],
                  "name" : "bodilyInjuryLimit",
                  "label" : "Bodily Injury",
                  "type" : "enum",
                  "default" : "50000-100000",
                  "supplemental" : false,
                  "optional" : false
                } ],
                "items" : [ {
                  "id" : "e87f6fe9-dd97-4b18-b8db-11b1c04e6cd0",
                  "label" : "Uninsured/Underinsured Motorist",
                  "name" : "uninsuredMotorist",
                  "presence" : "mandatory",
                  "order" : 2,
                  "fields" : {
                    "uninsuredMotoristBodilyInjury" : {
                      "optional" : false
                    },
                    "uninsuredMotoristPropertyDamage" : {
                      "optional" : false
                    }
                  },
                  "calculations" : [ {
                    "id" : "66ae58d4-1da7-4a9f-ade3-c412dd01be5d",
                    "name" : "baseRate",
                    "type" : "variable",
                    "calculation" : "35.0",
                    "compiled_code" : "gANjZGlsbC5kaWxsCl9sb2FkX3R5cGUKcQBYCAAAAENvZGVUeXBlcQGFcQJScQMoSwBLAEsASwNLQEMOZQBlAWQAgwJkAYMBUwBxBFgHAAAARGVjaW1hbHEFWAQAAAAzNS4wcQaGcQdYCQAAAF9nZXRhdHRyX3EIWAcAAABkZWNpbWFscQmGcQopWAgAAAA8c3RyaW5nPnELWAgAAAA8bW9kdWxlPnEMSwFDAHENKSl0cQ5ScQ8u",
                    "order" : 0
                  } ]
                } ],
                "calculations" : [ {
                  "id" : "0076d7d9-2955-4957-b023-472fc3cb1727",
                  "name" : "driverFactor",
                  "type" : "variable",
                  "calculation" : "1.0",
                  "compiled_code" : "gANjZGlsbC5kaWxsCl9sb2FkX3R5cGUKcQBYCAAAAENvZGVUeXBlcQGFcQJScQMoSwBLAEsASwNLQEMOZQBlAWQAgwJkAYMBUwBxBFgHAAAARGVjaW1hbHEFWAMAAAAxLjBxBoZxB1gJAAAAX2dldGF0dHJfcQhYBwAAAGRlY2ltYWxxCYZxCilYCAAAADxzdHJpbmc+cQtYCAAAADxtb2R1bGU+cQxLAUMAcQ0pKXRxDlJxDy4="
                } ],
                "rate_tables" : [ {
                  "id" : "2e53b642-cc88-4c1e-9b24-9f89f7e2e3e7",
                  "risk_type" : "36b5c830-343a-4ece-b26d-1fdfe3ca43d5",
                  "version" : "d5846981-eaae-4167-a878-e56726d52d82",
                  "sources" : [ {
                    "id" : "7c0cfbc3-b355-4f6c-86e6-28fa1ce6f88d",
                    "column_index" : 0,
                    "source_name" : "bodilyInjuryLimit",
                    "resolution" : "map",
                    "validity_state" : "valid",
                    "source_field" : "566ca232-896b-42bf-a8c5-17066a3e8c1f"
                  } ],
                  "name" : "bodilyInjuryLimitFactorTable",
                  "label" : "BI Limit Factors",
                  "default" : 0,
                  "data" : [ [ "bodilyInjuryLimit", "factor" ], [ "50000-100000", 1.22 ], [ "100000-300000", 1.47 ], [ "250000-500000", 1.61 ] ],
                  "validity_state" : "valid"
                } ]
              }
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "options" : {
        "tags" : [ "CORS" ],
        "summary" : "CORS support",
        "description" : "Enable CORS by returning correct headers",
        "consumes" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Default response for CORS method",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      }
    },
    "/lines/products/{product_name}/scenarios" : {
      "get" : {
        "tags" : [ "lines" ],
        "description" : "List Scenarios.",
        "operationId" : "listProductScenario",
        "parameters" : [ {
          "name" : "version_name",
          "in" : "query",
          "description" : "Version name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "A page number within the paginated result set.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "product_name",
          "in" : "path",
          "description" : "Product Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version_id",
          "in" : "query",
          "description" : "Version UUID",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "The Scenario list is returned.",
            "examples" : {
              "application/json" : {
                "results" : [ {
                  "id" : "0da3666b-e85d-4a22-96d7-7229c0266074",
                  "name" : "Example Name",
                  "unified_risk_state" : {
                    "id" : "edf35cc2-4c1e-4218-8375-42f71f5e2364",
                    "risk" : {
                      "name" : "Policy 1",
                      "number" : 1,
                      "total_premium" : 0.0,
                      "type" : {
                        "id" : "2ffb12d4-274b-4573-ab53-cccdb1b0a9db",
                        "name" : "policy",
                        "label" : "Policy"
                      },
                      "id" : "b6e09825-8993-4351-bd81-8361a4883648"
                    }
                  }
                } ]
              }
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "lines" ],
        "description" : "Creates a new scenario.",
        "operationId" : "createProductScenario",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "name" : "version_name",
          "in" : "query",
          "description" : "Version name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "product_name",
          "in" : "path",
          "description" : "Product Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version_id",
          "in" : "query",
          "description" : "Version UUID",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "Scenario",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Scenario"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Returns the newly created scenario.",
            "examples" : {
              "application/json" : {
                "id" : "0da3666b-e85d-4a22-96d7-7229c0266074",
                "name" : "Example Name",
                "total_premium" : 0,
                "unified_risk_state" : {
                  "id" : "edf35cc2-4c1e-4218-8375-42f71f5e2364",
                  "name" : "Policy 1",
                  "number" : 1,
                  "total_premium" : 0.0,
                  "type" : {
                    "id" : "2ffb12d4-274b-4573-ab53-cccdb1b0a9db",
                    "name" : "policy",
                    "label" : "Policy"
                  }
                }
              }
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "options" : {
        "tags" : [ "CORS" ],
        "summary" : "CORS support",
        "description" : "Enable CORS by returning correct headers",
        "consumes" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Default response for CORS method",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      }
    },
    "/lines/products/{product_name}/scenarios/{scenario_id}" : {
      "get" : {
        "tags" : [ "lines" ],
        "description" : "Retrieves the scenario.",
        "operationId" : "readProductScenario",
        "parameters" : [ {
          "name" : "version_name",
          "in" : "query",
          "description" : "Version name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "scenario_id",
          "in" : "path",
          "description" : "Scenario UUID.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "product_name",
          "in" : "path",
          "description" : "Product Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version_id",
          "in" : "query",
          "description" : "Version UUID",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "The scenario is returned.",
            "examples" : {
              "application/json" : {
                "id" : "0da3666b-e85d-4a22-96d7-7229c0266074",
                "name" : "Example Name",
                "total_premium" : 0,
                "unified_risk_state" : {
                  "id" : "edf35cc2-4c1e-4218-8375-42f71f5e2364",
                  "name" : "Policy 1",
                  "number" : 1,
                  "total_premium" : 0.0,
                  "type" : {
                    "id" : "2ffb12d4-274b-4573-ab53-cccdb1b0a9db",
                    "name" : "policy",
                    "label" : "Policy"
                  }
                }
              }
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "lines" ],
        "description" : "Updates the scenario.",
        "operationId" : "updateProductScenario",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "name" : "version_name",
          "in" : "query",
          "description" : "Version name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "scenario_id",
          "in" : "path",
          "description" : "Scenario UUID.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "product_name",
          "in" : "path",
          "description" : "Product Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version_id",
          "in" : "query",
          "description" : "Version UUID",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "Scenario",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Scenario"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns scenario with updated information.",
            "examples" : {
              "application/json" : {
                "id" : "0da3666b-e85d-4a22-96d7-7229c0266074",
                "name" : "Example Name",
                "total_premium" : 0,
                "unified_risk_state" : {
                  "id" : "edf35cc2-4c1e-4218-8375-42f71f5e2364",
                  "name" : "Policy 1",
                  "number" : 1,
                  "total_premium" : 0.0,
                  "type" : {
                    "id" : "2ffb12d4-274b-4573-ab53-cccdb1b0a9db",
                    "name" : "policy",
                    "label" : "Policy"
                  }
                }
              }
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "lines" ],
        "description" : "Deletes the scenario.",
        "operationId" : "deleteProductScenario",
        "parameters" : [ {
          "name" : "version_name",
          "in" : "query",
          "description" : "Version name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "scenario_id",
          "in" : "path",
          "description" : "Scenario UUID.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "product_name",
          "in" : "path",
          "description" : "Product Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version_id",
          "in" : "query",
          "description" : "Version UUID",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "Scenario is successfully deleted.",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "options" : {
        "tags" : [ "CORS" ],
        "summary" : "CORS support",
        "description" : "Enable CORS by returning correct headers",
        "consumes" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Default response for CORS method",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      }
    },
    "/lines/products/{product_name}/scenarios/{scenario_id}/copy" : {
      "post" : {
        "tags" : [ "lines" ],
        "description" : "Copy scenario.",
        "operationId" : "copyProductScenario",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "name" : "version_name",
          "in" : "query",
          "description" : "Version name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "scenario_id",
          "in" : "path",
          "description" : "Scenario UUID.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "product_name",
          "in" : "path",
          "description" : "Product Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version_id",
          "in" : "query",
          "description" : "Version UUID",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "Scenario",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Scenario"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Copied scenario is returned.",
            "examples" : {
              "application/json" : {
                "id" : "0da3666b-e85d-4a22-96d7-7229c0266074",
                "name" : "Example Name",
                "total_premium" : 0,
                "unified_risk_state" : {
                  "id" : "edf35cc2-4c1e-4218-8375-42f71f5e2364",
                  "name" : "Policy 1",
                  "number" : 1,
                  "total_premium" : 0.0,
                  "type" : {
                    "id" : "2ffb12d4-274b-4573-ab53-cccdb1b0a9db",
                    "name" : "policy",
                    "label" : "Policy"
                  }
                }
              }
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "options" : {
        "tags" : [ "CORS" ],
        "summary" : "CORS support",
        "description" : "Enable CORS by returning correct headers",
        "consumes" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Default response for CORS method",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      }
    },
    "/lines/products/{product_name}/scenarios/{scenario_id}/rate" : {
      "post" : {
        "tags" : [ "lines" ],
        "description" : "Rate Scenario matching the scenario_id.",
        "operationId" : "rateProductScenario",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "name" : "version_name",
          "in" : "query",
          "description" : "Version name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "scenario_id",
          "in" : "path",
          "description" : "Scenario UUID.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "product_name",
          "in" : "path",
          "description" : "Product Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version_id",
          "in" : "query",
          "description" : "Version UUID",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "Scenario",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Scenario"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Rated unified_risk_state is returned.",
            "examples" : {
              "application/json" : {
                "id" : "0da3666b-e85d-4a22-96d7-7229c0266074",
                "name" : "Example Name",
                "total_premium" : 0,
                "unified_risk_state" : {
                  "id" : "edf35cc2-4c1e-4218-8375-42f71f5e2364",
                  "name" : "Policy 1",
                  "number" : 1,
                  "total_premium" : 0.0,
                  "type" : {
                    "id" : "2ffb12d4-274b-4573-ab53-cccdb1b0a9db",
                    "name" : "policy",
                    "label" : "Policy"
                  }
                }
              }
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "options" : {
        "tags" : [ "CORS" ],
        "summary" : "CORS support",
        "description" : "Enable CORS by returning correct headers",
        "consumes" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Default response for CORS method",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      }
    },
    "/lines/products/{product_name}/scenarios/{scenario_id}/reset" : {
      "post" : {
        "tags" : [ "lines" ],
        "description" : "Reset scenario.",
        "operationId" : "resetProductScenario",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "name" : "version_name",
          "in" : "query",
          "description" : "Version name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "scenario_id",
          "in" : "path",
          "description" : "Scenario UUID.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "product_name",
          "in" : "path",
          "description" : "Product Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version_id",
          "in" : "query",
          "description" : "Version UUID",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "Scenario",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Scenario"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "New unified_risk_state is returned.",
            "examples" : {
              "application/json" : {
                "id" : "0da3666b-e85d-4a22-96d7-7229c0266074",
                "name" : "Example Name",
                "total_premium" : 0,
                "unified_risk_state" : {
                  "id" : "edf35cc2-4c1e-4218-8375-42f71f5e2364",
                  "name" : "Policy 1",
                  "number" : 1,
                  "total_premium" : 0.0,
                  "type" : {
                    "id" : "2ffb12d4-274b-4573-ab53-cccdb1b0a9db",
                    "name" : "policy",
                    "label" : "Policy"
                  }
                }
              }
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "options" : {
        "tags" : [ "CORS" ],
        "summary" : "CORS support",
        "description" : "Enable CORS by returning correct headers",
        "consumes" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Default response for CORS method",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      }
    },
    "/lines/products/{product_name}/scenarios/{scenario_id}/risks" : {
      "post" : {
        "tags" : [ "lines" ],
        "description" : "Creates a new risk within a scenario.",
        "operationId" : "createProductScenarioRisk",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "name" : "version_name",
          "in" : "query",
          "description" : "Version name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "scenario_id",
          "in" : "path",
          "description" : "Scenario UUID.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "product_name",
          "in" : "path",
          "description" : "Product Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version_id",
          "in" : "query",
          "description" : "Version UUID",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "CreateRisk",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CreateRisk"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Returns the newly created risk.",
            "examples" : {
              "application/json" : {
                "risk_state" : {
                  "name" : "Vehicle 1",
                  "number" : 1,
                  "total_premium" : 0.0,
                  "type" : {
                    "id" : "705cff15-81ee-4c08-bc30-3a025b7f6a16",
                    "name" : "vehicles",
                    "label" : "Vehicle"
                  },
                  "items" : {
                    "bodilyInjury" : {
                      "premium" : 0.0
                    }
                  },
                  "field_answers" : {
                    "bodilyInjuryLimit" : "bodilyInjuryLimit_50000100000",
                    "includeAntiLockBrakes" : true
                  },
                  "id" : "1fb9b380-6bd1-4f2d-9dff-123f4759742b"
                }
              }
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "options" : {
        "tags" : [ "CORS" ],
        "summary" : "CORS support",
        "description" : "Enable CORS by returning correct headers",
        "consumes" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Default response for CORS method",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      }
    },
    "/lines/products/{product_name}/scenarios/{scenario_id}/risks/{risk_id}" : {
      "get" : {
        "tags" : [ "lines" ],
        "description" : "Returns Risk matching the risk_id.",
        "operationId" : "readProductScenarioRisk",
        "parameters" : [ {
          "name" : "risk_id",
          "in" : "path",
          "description" : "Risk UUID.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version_name",
          "in" : "query",
          "description" : "Version name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "scenario_id",
          "in" : "path",
          "description" : "Scenario UUID.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "product_name",
          "in" : "path",
          "description" : "Product Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version_id",
          "in" : "query",
          "description" : "Version UUID",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "The risk is returned.",
            "examples" : {
              "application/json" : {
                "risk_state" : {
                  "name" : "Vehicle 1",
                  "number" : 1,
                  "total_premium" : 0.0,
                  "type" : {
                    "id" : "705cff15-81ee-4c08-bc30-3a025b7f6a16",
                    "name" : "vehicles",
                    "label" : "Vehicle"
                  },
                  "items" : {
                    "bodilyInjury" : {
                      "premium" : 0.0
                    }
                  },
                  "field_answers" : {
                    "bodilyInjuryLimit" : "bodilyInjuryLimit_50000100000",
                    "includeAntiLockBrakes" : true
                  },
                  "id" : "1fb9b380-6bd1-4f2d-9dff-123f4759742b"
                }
              }
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "lines" ],
        "description" : "Updates the risk.",
        "operationId" : "updateProductScenarioRisk",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "name" : "risk_id",
          "in" : "path",
          "description" : "Risk UUID.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version_name",
          "in" : "query",
          "description" : "Version name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "scenario_id",
          "in" : "path",
          "description" : "Scenario UUID.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "product_name",
          "in" : "path",
          "description" : "Product Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version_id",
          "in" : "query",
          "description" : "Version UUID",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "UpdateRisk",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/UpdateRisk"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns updated risk_state.",
            "examples" : {
              "application/json" : {
                "risk_state" : {
                  "name" : "Vehicle 1",
                  "number" : 1,
                  "total_premium" : 0.0,
                  "type" : {
                    "id" : "705cff15-81ee-4c08-bc30-3a025b7f6a16",
                    "name" : "vehicles",
                    "label" : "Vehicle"
                  },
                  "items" : {
                    "bodilyInjury" : {
                      "premium" : 0.0
                    }
                  },
                  "field_answers" : {
                    "bodilyInjuryLimit" : "bodilyInjuryLimit_50000100000",
                    "territory" : "territory_2",
                    "ratingTier" : "ratingTier_standard",
                    "includeAntiLockBrakes" : true,
                    "vin" : "testingvin"
                  },
                  "id" : "1fb9b380-6bd1-4f2d-9dff-123f4759742b"
                }
              }
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "lines" ],
        "description" : "Deletes the risk from the scenario.",
        "operationId" : "deleteProductScenarioRisk",
        "parameters" : [ {
          "name" : "risk_id",
          "in" : "path",
          "description" : "Risk UUID.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version_name",
          "in" : "query",
          "description" : "Version name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "scenario_id",
          "in" : "path",
          "description" : "Scenario UUID.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "product_name",
          "in" : "path",
          "description" : "Product Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version_id",
          "in" : "query",
          "description" : "Version UUID",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "Risk is successfully deleted.",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "options" : {
        "tags" : [ "CORS" ],
        "summary" : "CORS support",
        "description" : "Enable CORS by returning correct headers",
        "consumes" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Default response for CORS method",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      }
    },
    "/lines/products/{product_name}/scenarios/{scenario_id}/risks/{risk_id}/fields/{field_name}/validate-answer" : {
      "post" : {
        "tags" : [ "lines" ],
        "description" : "Validates a Field answer.",
        "operationId" : "validateAnswerProductScenarioRiskField",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "name" : "risk_id",
          "in" : "path",
          "description" : "Risk UUID.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version_name",
          "in" : "query",
          "description" : "Version name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "field_name",
          "in" : "path",
          "description" : "Field Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "scenario_id",
          "in" : "path",
          "description" : "Scenario UUID.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "product_name",
          "in" : "path",
          "description" : "Product Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version_id",
          "in" : "query",
          "description" : "Version UUID",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "RatePreviewRiskFieldAnswerValidator",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RatePreviewRiskFieldAnswerValidator"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "API call was successful. Check the valid attribute in the response to determine if the Field answer is valid or not.",
            "examples" : {
              "application/json" : {
                "valid" : true
              }
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "options" : {
        "tags" : [ "CORS" ],
        "summary" : "CORS support",
        "description" : "Enable CORS by returning correct headers",
        "consumes" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Default response for CORS method",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      }
    },
    "/lines/products/{product_name}/scenarios/{scenario_id}/risks/{risk_id}/items" : {
      "post" : {
        "tags" : [ "lines" ],
        "description" : "Adds an item to a risk.",
        "operationId" : "createProductScenarioRiskItem",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "name" : "risk_id",
          "in" : "path",
          "description" : "Risk UUID.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version_name",
          "in" : "query",
          "description" : "Version name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "scenario_id",
          "in" : "path",
          "description" : "Scenario UUID.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "product_name",
          "in" : "path",
          "description" : "Product Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version_id",
          "in" : "query",
          "description" : "Version UUID",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "RiskItem",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RiskItem"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Returns the risk_state with item added.",
            "examples" : {
              "application/json" : {
                "risk_state" : {
                  "name" : "Vehicle 1",
                  "number" : 1,
                  "total_premium" : 0.0,
                  "type" : {
                    "id" : "705cff15-81ee-4c08-bc30-3a025b7f6a16",
                    "name" : "vehicles",
                    "label" : "Vehicle"
                  },
                  "items" : {
                    "bodilyInjury" : {
                      "premium" : 0.0
                    }
                  },
                  "field_answers" : {
                    "bodilyInjuryLimit" : "bodilyInjuryLimit_50000100000",
                    "includeAntiLockBrakes" : true
                  },
                  "id" : "1fb9b380-6bd1-4f2d-9dff-123f4759742b"
                }
              }
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "options" : {
        "tags" : [ "CORS" ],
        "summary" : "CORS support",
        "description" : "Enable CORS by returning correct headers",
        "consumes" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Default response for CORS method",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      }
    },
    "/lines/products/{product_name}/scenarios/{scenario_id}/risks/{risk_id}/items/{item_name}" : {
      "delete" : {
        "tags" : [ "lines" ],
        "description" : "Removes the item from the risk.",
        "operationId" : "deleteProductScenarioRiskItem",
        "parameters" : [ {
          "name" : "risk_id",
          "in" : "path",
          "description" : "Risk UUID.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version_name",
          "in" : "query",
          "description" : "Version name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "scenario_id",
          "in" : "path",
          "description" : "Scenario UUID.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "product_name",
          "in" : "path",
          "description" : "Product Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "item_name",
          "in" : "path",
          "description" : "Item Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version_id",
          "in" : "query",
          "description" : "Version UUID",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "Item is successfully deleted.",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "options" : {
        "tags" : [ "CORS" ],
        "summary" : "CORS support",
        "description" : "Enable CORS by returning correct headers",
        "consumes" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Default response for CORS method",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      }
    },
    "/lines/products/{product_name}/scenarios/{scenario_id}/risks/{risk_id}/rate" : {
      "post" : {
        "tags" : [ "lines" ],
        "description" : "Rates a risk.",
        "operationId" : "rateProductScenarioRisk",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "name" : "risk_id",
          "in" : "path",
          "description" : "Risk UUID.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version_name",
          "in" : "query",
          "description" : "Version name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "scenario_id",
          "in" : "path",
          "description" : "Scenario UUID.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "product_name",
          "in" : "path",
          "description" : "Product Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version_id",
          "in" : "query",
          "description" : "Version UUID",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "Risk",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Risk"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Rated risk_state is returned.",
            "examples" : {
              "application/json" : {
                "risk_state" : {
                  "name" : "Vehicle 1",
                  "number" : 1,
                  "total_premium" : 272.365,
                  "type" : {
                    "id" : "705cff15-81ee-4c08-bc30-3a025b7f6a16",
                    "name" : "vehicles",
                    "label" : "Vehicle"
                  },
                  "items" : {
                    "bodilyInjury" : {
                      "premium" : 272.365,
                      "meta" : {
                        "resolved_refs" : [ {
                          "reference" : "tierBaseRate",
                          "value" : 235.0
                        }, {
                          "reference" : "bodilyInjuryBaseRateTable",
                          "value" : 235.0
                        }, {
                          "reference" : "bodilyInjuryBaseFactorTable",
                          "value" : 1.0
                        }, {
                          "reference" : "bodilyInjuryLimitFactorTable",
                          "value" : 1.22
                        }, {
                          "reference" : "driverFactor",
                          "value" : 1.0
                        }, {
                          "reference" : "seniorDiscount",
                          "value" : 1.0
                        }, {
                          "reference" : "antiLockBrakes",
                          "value" : 0.95
                        } ]
                      }
                    }
                  },
                  "field_answers" : {
                    "bodilyInjuryLimit" : "bodilyInjuryLimit_50000100000",
                    "territory" : "territory_2",
                    "ratingTier" : "ratingTier_standard",
                    "chosenDriver" : "d8e87b66-c1d1-434c-86e6-3b2a7ddad75d",
                    "includeAntiLockBrakes" : true,
                    "vin" : "testingvin"
                  },
                  "field_overrides" : {
                    "chosenDriver" : {
                      "options" : [ {
                        "value" : "d8e87b66-c1d1-434c-86e6-3b2a7ddad75d",
                        "label" : "John"
                      } ]
                    }
                  },
                  "id" : "1fb9b380-6bd1-4f2d-9dff-123f4759742b"
                }
              }
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "options" : {
        "tags" : [ "CORS" ],
        "summary" : "CORS support",
        "description" : "Enable CORS by returning correct headers",
        "consumes" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Default response for CORS method",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      }
    },
    "/lines/products/{product_name}/template" : {
      "get" : {
        "tags" : [ "lines" ],
        "description" : "Exports a Product Template.",
        "operationId" : "exportTemplateProduct",
        "parameters" : [ {
          "name" : "version_name",
          "in" : "query",
          "description" : "Version name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "product_name",
          "in" : "path",
          "description" : "Product Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version_id",
          "in" : "query",
          "description" : "Version UUID",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Product Template exported successfully.",
            "examples" : {
              "application/json" : {
                "url" : "https://bucket.s3.amazonaws.com/product.britelinestemplate",
                "date_generated" : "2019-06-10T13:34:01.489748"
              }
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "options" : {
        "tags" : [ "CORS" ],
        "summary" : "CORS support",
        "description" : "Enable CORS by returning correct headers",
        "consumes" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Default response for CORS method",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      }
    },
    "/lines/products/{product_name}/versions" : {
      "get" : {
        "tags" : [ "lines" ],
        "description" : "List all versions for the given Product.",
        "operationId" : "listProductVersion",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "product_name",
          "in" : "path",
          "description" : "Product Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "A page number within the paginated result set.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Version list.",
            "schema" : {
              "$ref" : "#/definitions/VersionListRetrieve"
            },
            "examples" : {
              "application/json" : {
                "count" : 1,
                "results" : [ {
                  "id" : "73e00082-10a2-44c9-a12c-6e039b6e32bf",
                  "name" : "New Version",
                  "effective_date" : "2020-01-01",
                  "status" : "draft",
                  "description" : "The first version of the product.",
                  "previous" : "4c302cbd-c06f-4b1b-9829-e861064d1ef2",
                  "date_added" : "2019-04-22",
                  "date_modified" : "2019-04-23"
                } ]
              }
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "lines" ],
        "description" : "Creates a Version for a given Product.",
        "operationId" : "createProductVersion",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "product_name",
          "in" : "path",
          "description" : "Product Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "VersionCreate",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/VersionCreate"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Version created successfully.",
            "schema" : {
              "$ref" : "#/definitions/VersionCreate"
            },
            "examples" : {
              "application/json" : {
                "id" : "73e00082-10a2-44c9-a12c-6e039b6e32bf",
                "name" : "New Version",
                "effective_date" : "2020-01-01",
                "status" : "draft",
                "description" : "The first version of the product.",
                "previous" : "4c302cbd-c06f-4b1b-9829-e861064d1ef2",
                "date_added" : "2019-04-22",
                "date_modified" : "2019-04-23"
              }
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "options" : {
        "tags" : [ "CORS" ],
        "summary" : "CORS support",
        "description" : "Enable CORS by returning correct headers",
        "consumes" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Default response for CORS method",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      }
    },
    "/lines/products/{product_name}/versions/{version_id}" : {
      "get" : {
        "tags" : [ "lines" ],
        "description" : "Get details of a Version.",
        "operationId" : "readProductVersion",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "product_name",
          "in" : "path",
          "description" : "Product Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version_id",
          "in" : "path",
          "description" : "Version UUID.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Version details.",
            "schema" : {
              "$ref" : "#/definitions/VersionListRetrieve"
            },
            "examples" : {
              "application/json" : {
                "id" : "73e00082-10a2-44c9-a12c-6e039b6e32bf",
                "name" : "New Version",
                "effective_date" : "2020-01-01",
                "status" : "draft",
                "description" : "The first version of the product.",
                "previous" : "4c302cbd-c06f-4b1b-9829-e861064d1ef2",
                "date_added" : "2019-04-22",
                "date_modified" : "2019-04-23"
              }
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "lines" ],
        "description" : "Updates a Version for a given Product.",
        "operationId" : "updateProductVersion",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "product_name",
          "in" : "path",
          "description" : "Product Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version_id",
          "in" : "path",
          "description" : "Version UUID.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "VersionUpdate",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/VersionUpdate"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Version updated successfully.",
            "schema" : {
              "$ref" : "#/definitions/VersionUpdate"
            },
            "examples" : {
              "application/json" : {
                "id" : "73e00082-10a2-44c9-a12c-6e039b6e32bf",
                "name" : "Test Version",
                "effective_date" : "2020-01-02",
                "status" : "draft",
                "description" : "The first version of the product.",
                "previous" : "4c302cbd-c06f-4b1b-9829-e861064d1ef2",
                "date_added" : "2019-04-22",
                "date_modified" : "2019-04-23"
              }
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "options" : {
        "tags" : [ "CORS" ],
        "summary" : "CORS support",
        "description" : "Enable CORS by returning correct headers",
        "consumes" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Default response for CORS method",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "patch" : {
        "tags" : [ "lines" ],
        "description" : "Partially updates a Version for a given Product.",
        "operationId" : "partialUpdateProductVersion",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "product_name",
          "in" : "path",
          "description" : "Product Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version_id",
          "in" : "path",
          "description" : "Version UUID.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "VersionPartialUpdate",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/VersionPartialUpdate"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Version updated successfully.",
            "schema" : {
              "$ref" : "#/definitions/VersionPartialUpdate"
            },
            "examples" : {
              "application/json" : {
                "id" : "73e00082-10a2-44c9-a12c-6e039b6e32bf",
                "name" : "New Version",
                "effective_date" : "2020-01-01",
                "status" : "published",
                "description" : "The first version of the product.",
                "previous" : "4c302cbd-c06f-4b1b-9829-e861064d1ef2",
                "date_added" : "2019-04-22",
                "date_modified" : "2019-04-23"
              }
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      }
    },
    "/lines/products/{product_name}/versions/{version_id}/status" : {
      "options" : {
        "tags" : [ "CORS" ],
        "summary" : "CORS support",
        "description" : "Enable CORS by returning correct headers",
        "consumes" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Default response for CORS method",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "patch" : {
        "tags" : [ "lines" ],
        "description" : "Change status of a version.",
        "operationId" : "statusProductVersion",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "product_name",
          "in" : "path",
          "description" : "Product Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version_id",
          "in" : "path",
          "description" : "Version UUID.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "VersionStatus",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/VersionStatus"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Version status changed successfully.",
            "schema" : {
              "$ref" : "#/definitions/VersionStatus"
            },
            "examples" : {
              "application/json" : {
                "id" : "73e00082-10a2-44c9-a12c-6e039b6e32bf",
                "name" : "New Version",
                "effective_date" : "2020-01-01",
                "status" : "published",
                "description" : "The first version of the product.",
                "previous" : "4c302cbd-c06f-4b1b-9829-e861064d1ef2",
                "date_added" : "2019-04-22",
                "date_modified" : "2019-04-23"
              }
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      }
    },
    "/lines/related-documents" : {
      "post" : {
        "tags" : [ "lines" ],
        "description" : "Creates a Related Document.",
        "operationId" : "createRelatedDocument",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "RelatedDocument",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RelatedDocument"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Related Document created successfully.",
            "schema" : {
              "$ref" : "#/definitions/RelatedDocument"
            },
            "examples" : {
              "application/json" : {
                "id" : "2a17b803-1b2c-427a-93f2-5be5dd2b77e5",
                "label" : "Example Related Document",
                "description" : "This is an example Related Document",
                "template_id" : "bafa6b69-2107-4f3d-95ad-e21f6c6ee6e1",
                "risk_item" : "6431a254-f814-411a-8bd3-b56b3f9634e3"
              }
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "options" : {
        "tags" : [ "CORS" ],
        "summary" : "CORS support",
        "description" : "Enable CORS by returning correct headers",
        "consumes" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Default response for CORS method",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      }
    },
    "/lines/related-documents/{related_document_id}" : {
      "put" : {
        "tags" : [ "lines" ],
        "description" : "Updates a Related Document.",
        "operationId" : "updateRelatedDocument",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "related_document_id",
          "in" : "path",
          "description" : "Related Document UUID.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "RelatedDocument",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RelatedDocument"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Related Document updated successfully.",
            "schema" : {
              "$ref" : "#/definitions/RelatedDocument"
            },
            "examples" : {
              "application/json" : {
                "id" : "2a17b803-1b2c-427a-93f2-5be5dd2b77e5",
                "label" : "Example Related Document",
                "description" : "Update example Related Document",
                "template_id" : "bafa6b69-2107-4f3d-95ad-e21f6c6ee6e1",
                "risk_item" : "6431a254-f814-411a-8bd3-b56b3f9634e3"
              }
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "lines" ],
        "description" : "Deletes a Related Document.",
        "operationId" : "deleteRelatedDocument",
        "parameters" : [ {
          "name" : "related_document_id",
          "in" : "path",
          "description" : "Related Document UUID.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "Related Document deleted successfully.",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "options" : {
        "tags" : [ "CORS" ],
        "summary" : "CORS support",
        "description" : "Enable CORS by returning correct headers",
        "consumes" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Default response for CORS method",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      }
    },
    "/notes" : {
      "get" : {
        "description" : "Lists all notes",
        "operationId" : "getNotes",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Notes successfully retrieved",
            "schema" : {
              "$ref" : "#/definitions/ArrayOfNote"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "notes" ],
        "summary" : "Adds a new note",
        "description" : "Adds a new note",
        "operationId" : "addNote",
        "responses" : {
          "201" : {
            "description" : "Note successfully created",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "options" : {
        "tags" : [ "CORS" ],
        "summary" : "CORS support",
        "description" : "Enable CORS by returning correct headers",
        "consumes" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Default response for CORS method",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      }
    },
    "/notes/types" : {
      "get" : {
        "tags" : [ "notes" ],
        "summary" : "List all note types",
        "operationId" : "getNoteTypes",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Note types successfully retrieved",
            "schema" : {
              "$ref" : "#/definitions/ArrayOfNoteType"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "notes" ],
        "summary" : "Adds a new note type",
        "description" : "Adds a new note type",
        "operationId" : "addNoteType",
        "responses" : {
          "201" : {
            "description" : "Note type successfully created",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "options" : {
        "tags" : [ "CORS" ],
        "summary" : "CORS support",
        "description" : "Enable CORS by returning correct headers",
        "consumes" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Default response for CORS method",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      }
    },
    "/notes/types/{id}" : {
      "get" : {
        "tags" : [ "notes" ],
        "summary" : "Gets a specific note type",
        "description" : "Gets a specific note type",
        "operationId" : "getNoteType",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Unique identifier for retrieving single object",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Note type successfully retrieved",
            "schema" : {
              "$ref" : "#/definitions/NoteType"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "notes" ],
        "summary" : "Deletes an existing note type",
        "description" : "Deletes an existing note type",
        "operationId" : "deleteNoteType",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Unique identifier",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "400" : {
            "description" : "When trying to delete a note type that is being used by a Note",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "204" : {
            "description" : "Note type successfully deleted",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "options" : {
        "tags" : [ "CORS" ],
        "summary" : "CORS support",
        "description" : "Enable CORS by returning correct headers",
        "consumes" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Default response for CORS method",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "patch" : {
        "tags" : [ "notes" ],
        "summary" : "Partially updates a note type",
        "description" : "Updates one or more fields of a note type",
        "operationId" : "partiallyUpdateNoteType",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Unique identifier",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Note type successfully updated",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      }
    },
    "/notes/{id}" : {
      "get" : {
        "tags" : [ "notes" ],
        "summary" : "Gets a specific note",
        "description" : "Gets a specific note",
        "operationId" : "getNote",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Unique identifier for retrieving single object",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Note successfully retrieved",
            "schema" : {
              "$ref" : "#/definitions/Note"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "notes" ],
        "summary" : "Deletes an existing note",
        "description" : "Deletes an existing note",
        "operationId" : "deleteNote",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Unique identifier",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "Note successfully deleted",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "options" : {
        "tags" : [ "CORS" ],
        "summary" : "CORS support",
        "description" : "Enable CORS by returning correct headers",
        "consumes" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Default response for CORS method",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "patch" : {
        "tags" : [ "notes" ],
        "summary" : "Partially updates a note",
        "description" : "Updates one or more fields of a note",
        "operationId" : "partiallyUpdateNote",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Unique identifier",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Note successfully updated",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      }
    },
    "/notes/{id}/history" : {
      "get" : {
        "tags" : [ "notes" ],
        "summary" : "Gets the modifications history of a note",
        "description" : "Gets a specific note's history",
        "operationId" : "getNoteHistory",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Unique note identifier",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Note history successfully retrieved",
            "schema" : {
              "$ref" : "#/definitions/ArrayOfNoteHistoryEvent"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "options" : {
        "tags" : [ "CORS" ],
        "summary" : "CORS support",
        "description" : "Enable CORS by returning correct headers",
        "consumes" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Default response for CORS method",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      }
    },
    "/policies/admin/{proxy+}" : {
      "options" : {
        "tags" : [ "CORS" ],
        "summary" : "CORS support",
        "description" : "Enable CORS by returning correct headers",
        "consumes" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Default response for CORS method",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "x-amazon-apigateway-any-method" : {
        "parameters" : [ {
          "name" : "proxy",
          "in" : "path",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      }
    },
    "/quote" : {
      "post" : {
        "tags" : [ "quote" ],
        "description" : "Creates a quote.",
        "operationId" : "createQuote",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Disable-Rating-Engine",
          "in" : "header",
          "description" : "Header to skip running Rating engine for this call.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Disable-Rules-Engine",
          "in" : "header",
          "description" : "Header to skip running BriteRules engine for this call.",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "CreateQuote",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CreateQuote"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Quote created successfully.",
            "schema" : {
              "$ref" : "#/definitions/Quote"
            },
            "examples" : {
              "application/json" : {
                "id" : "401215fa-e19e-4133-8886-6fff775a995f",
                "quote_number" : "Q-personalAutoCW-2019-6",
                "policy_state" : {
                  "policy" : {
                    "inception_date" : "2019-09-17"
                  },
                  "term" : {
                    "effective_date" : "2019-09-17",
                    "expiration_date" : "2020-09-16"
                  },
                  "revision" : {
                    "revision_date" : "2019-09-17",
                    "description" : "New Policy"
                  }
                },
                "root_risk_quote_id" : "c569f144-dfd6-4603-adbd-39ffce2bdd38",
                "product_name" : "personalAutoCW",
                "product_version" : "5530b524-cb54-4c10-87f7-0f768670ab94",
                "product_label" : "Personal Auto - Countrywide",
                "agency" : {
                  "id" : "40289a83-e59b-404c-9990-dbed5b6e0691"
                },
                "agents" : [ {
                  "id" : "27d0ad35-dfeb-437a-a8d8-859ec0e1a874"
                }, {
                  "id" : "71a54f50-f70c-4d6b-8f91-482bb1acc084"
                } ],
                "is_bound" : false
              }
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "options" : {
        "tags" : [ "CORS" ],
        "summary" : "CORS support",
        "description" : "Enable CORS by returning correct headers",
        "consumes" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Default response for CORS method",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      }
    },
    "/quote/admin/{proxy+}" : {
      "options" : {
        "tags" : [ "CORS" ],
        "summary" : "CORS support",
        "description" : "Enable CORS by returning correct headers",
        "consumes" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Default response for CORS method",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "x-amazon-apigateway-any-method" : {
        "parameters" : [ {
          "name" : "proxy",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      }
    },
    "/quote/flows" : {
      "get" : {
        "tags" : [ "quote" ],
        "description" : "List all quote flows.",
        "operationId" : "listFlow",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "description" : "A page number within the paginated result set.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Quote flow list.",
            "schema" : {
              "$ref" : "#/definitions/QuoteFlow"
            },
            "examples" : {
              "application/json" : {
                "count" : 1,
                "results" : [ {
                  "id" : "dc0fc9ad-9323-4fc5-b3fd-69336e4c7b2f",
                  "criteria" : {
                    "version" : "0.1",
                    "criteria" : {
                      "product" : [ "personalAutoCW" ]
                    }
                  },
                  "configuration" : {
                    "version" : "1.0",
                    "pageGroups" : [ {
                      "title" : "Setup",
                      "name" : "setup",
                      "pages" : [ {
                        "title" : "Policy Setup",
                        "name" : "policySetup",
                        "components" : [ {
                          "type" : "riskEdit",
                          "riskType" : "policy",
                          "fieldGroups" : [ {
                            "name" : "Name Group",
                            "title" : "Named Insured",
                            "displayType" : "el-card",
                            "fields" : [ {
                              "name" : "firstNameNI",
                              "label" : "First Name"
                            }, {
                              "name" : "middleInitialNI",
                              "optional" : true,
                              "widget" : {
                                "size" : "tn"
                              }
                            } ]
                          } ]
                        } ]
                      } ]
                    }, {
                      "title" : "Drivers",
                      "name" : "drivers",
                      "pages" : [ {
                        "title" : "Drivers",
                        "name" : "setup",
                        "layout" : {
                          "type" : "standard"
                        },
                        "components" : [ {
                          "type" : "riskTable",
                          "name" : "driverTable",
                          "riskTypes" : [ "drivers" ],
                          "riskLabel" : "Driver",
                          "columns" : [ {
                            "name" : "firstName",
                            "header" : "First Name"
                          } ],
                          "actions" : [ {
                            "trigger" : "rowClick",
                            "type" : "showModal",
                            "components" : [ {
                              "type" : "riskEdit",
                              "riskType" : "drivers",
                              "fieldGroups" : [ {
                                "title" : "Personal Information",
                                "name" : "Personal Info",
                                "displayType" : "el-card",
                                "fields" : [ {
                                  "name" : "firstName",
                                  "label" : "First Name"
                                } ]
                              } ]
                            } ]
                          } ]
                        } ]
                      } ]
                    } ]
                  }
                } ]
              }
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "quote" ],
        "description" : "Creates a quote flow.",
        "operationId" : "createFlow",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "QuoteFlow",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/QuoteFlow"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Quote flow created successfully.",
            "schema" : {
              "$ref" : "#/definitions/QuoteFlow"
            },
            "examples" : {
              "application/json" : {
                "id" : "45a2a6fb-4349-44e3-9feb-d2acbbe6828c",
                "configuration" : {
                  "version" : "1.0",
                  "pageGroups" : [ {
                    "title" : "Setup",
                    "name" : "setup",
                    "pages" : [ {
                      "title" : "Policy Setup",
                      "name" : "policySetup",
                      "continueButtonLabel" : "Continue to Drivers",
                      "components" : [ {
                        "type" : "riskEdit",
                        "riskType" : "policy",
                        "fieldGroups" : [ {
                          "title" : "Setup",
                          "name" : "Setup",
                          "fields" : [ {
                            "name" : "uninsuredMotoristBodilyInjury"
                          }, {
                            "name" : "uninsuredMotoristPropertyDamage"
                          } ]
                        } ]
                      }, {
                        "type" : "separator"
                      }, {
                        "type" : "block",
                        "text" : "A **block**, including a [link](https://britecore.com/)."
                      } ]
                    } ]
                  }, {
                    "title" : "Drivers",
                    "name" : "drivers",
                    "pages" : [ {
                      "title" : "Drivers",
                      "name" : "setup",
                      "continueButtonLabel" : "Continue to Vehicles",
                      "layout" : {
                        "type" : "standard"
                      },
                      "components" : [ {
                        "type" : "riskList",
                        "name" : "driverList",
                        "riskType" : "drivers",
                        "riskLabel" : "Driver",
                        "components" : [ {
                          "type" : "riskEdit",
                          "riskType" : "drivers",
                          "fieldGroups" : [ {
                            "title" : "Personal Information",
                            "name" : "Personal Info",
                            "displayType" : "el-card",
                            "fields" : [ {
                              "name" : "driversLicenseNumber"
                            }, {
                              "name" : "driverName",
                              "label" : "Driver Name"
                            }, {
                              "name" : "dob"
                            }, {
                              "name" : "gender",
                              "widget" : {
                                "type" : "button-selection",
                                "size" : "lg"
                              }
                            }, {
                              "name" : "maritalStatus",
                              "widget" : {
                                "type" : "button-selection",
                                "size" : "lg"
                              }
                            }, {
                              "name" : "goodStudent",
                              "tooltip" : {
                                "text" : "Good student discounts are available for student who have maintained a 3.5 GPA for the last two semesters of high school or college."
                              },
                              "widget" : {
                                "type" : "boolean-buttons"
                              }
                            }, {
                              "name" : "driverTraining",
                              "tooltip" : {
                                "text" : "Only enable if insured(s) have completed driver training within the last 36 months."
                              },
                              "widget" : {
                                "type" : "boolean-buttons"
                              }
                            }, {
                              "name" : "includeSeniorDiscount",
                              "widget" : {
                                "type" : "boolean-buttons"
                              }
                            } ]
                          } ]
                        } ]
                      } ]
                    } ]
                  }, {
                    "title" : "Review",
                    "name" : "review",
                    "pages" : [ {
                      "title" : "Review",
                      "name" : "reviewRisks",
                      "components" : [ {
                        "type" : "riskTable",
                        "name" : "driverTableReview",
                        "riskTypes" : [ "drivers" ],
                        "title" : "Drivers",
                        "columns" : [ {
                          "name" : "dob",
                          "header" : "Date of Birth"
                        }, {
                          "name" : "gender",
                          "header" : "Gender"
                        } ]
                      }, {
                        "type" : "riskTable",
                        "name" : "driverTableReview",
                        "riskTypes" : [ "vehicles" ],
                        "title" : "Vehicles",
                        "columns" : [ {
                          "name" : "vin",
                          "header" : "VIN"
                        }, {
                          "name" : "make",
                          "header" : "Make"
                        }, {
                          "name" : "model",
                          "header" : "Model"
                        } ]
                      }, {
                        "type" : "totalPremiumDisplay"
                      } ]
                    } ]
                  } ]
                },
                "criteria" : {
                  "version" : "0.1",
                  "criteria" : {
                    "product" : [ "generalAutoCW" ]
                  }
                }
              }
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "options" : {
        "tags" : [ "CORS" ],
        "summary" : "CORS support",
        "description" : "Enable CORS by returning correct headers",
        "consumes" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Default response for CORS method",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      }
    },
    "/quote/flows/{id}" : {
      "get" : {
        "tags" : [ "quote" ],
        "description" : "Read a quote flow.",
        "operationId" : "readFlow",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Quote Flow UUID.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Quote flow is returned.",
            "schema" : {
              "$ref" : "#/definitions/QuoteFlow"
            },
            "examples" : {
              "application/json" : {
                "id" : "45a2a6fb-4349-44e3-9feb-d2acbbe6828c",
                "configuration" : {
                  "version" : "1.0",
                  "pageGroups" : [ {
                    "title" : "Setup",
                    "name" : "setup",
                    "pages" : [ {
                      "title" : "Policy Setup",
                      "name" : "policySetup",
                      "continueButtonLabel" : "Continue to Drivers",
                      "components" : [ {
                        "type" : "riskEdit",
                        "riskType" : "policy",
                        "fieldGroups" : [ {
                          "title" : "Setup",
                          "name" : "Setup",
                          "fields" : [ {
                            "name" : "uninsuredMotoristBodilyInjury"
                          }, {
                            "name" : "uninsuredMotoristPropertyDamage"
                          } ]
                        } ]
                      }, {
                        "type" : "separator"
                      }, {
                        "type" : "block",
                        "text" : "A **block**, including a [link](https://britecore.com/)."
                      } ]
                    } ]
                  }, {
                    "title" : "Drivers",
                    "name" : "drivers",
                    "pages" : [ {
                      "title" : "Drivers",
                      "name" : "setup",
                      "continueButtonLabel" : "Continue to Vehicles",
                      "layout" : {
                        "type" : "standard"
                      },
                      "components" : [ {
                        "type" : "riskList",
                        "name" : "driverList",
                        "riskType" : "drivers",
                        "riskLabel" : "Driver",
                        "components" : [ {
                          "type" : "riskEdit",
                          "riskType" : "drivers",
                          "fieldGroups" : [ {
                            "title" : "Personal Information",
                            "name" : "Personal Info",
                            "displayType" : "el-card",
                            "fields" : [ {
                              "name" : "driversLicenseNumber"
                            }, {
                              "name" : "driverName",
                              "label" : "Driver Name"
                            }, {
                              "name" : "dob"
                            }, {
                              "name" : "gender",
                              "widget" : {
                                "type" : "button-selection",
                                "size" : "lg"
                              }
                            }, {
                              "name" : "maritalStatus",
                              "widget" : {
                                "type" : "button-selection",
                                "size" : "lg"
                              }
                            }, {
                              "name" : "goodStudent",
                              "tooltip" : {
                                "text" : "Good student discounts are available for student who have maintained a 3.5 GPA for the last two semesters of high school or college."
                              },
                              "widget" : {
                                "type" : "boolean-buttons"
                              }
                            }, {
                              "name" : "driverTraining",
                              "tooltip" : {
                                "text" : "Only enable if insured(s) have completed driver training within the last 36 months."
                              },
                              "widget" : {
                                "type" : "boolean-buttons"
                              }
                            }, {
                              "name" : "includeSeniorDiscount",
                              "widget" : {
                                "type" : "boolean-buttons"
                              }
                            } ]
                          } ]
                        } ]
                      } ]
                    } ]
                  }, {
                    "title" : "Review",
                    "name" : "review",
                    "pages" : [ {
                      "title" : "Review",
                      "name" : "reviewRisks",
                      "components" : [ {
                        "type" : "riskTable",
                        "name" : "driverTableReview",
                        "riskTypes" : [ "drivers" ],
                        "title" : "Drivers",
                        "columns" : [ {
                          "name" : "dob",
                          "header" : "Date of Birth"
                        }, {
                          "name" : "gender",
                          "header" : "Gender"
                        } ]
                      }, {
                        "type" : "riskTable",
                        "name" : "driverTableReview",
                        "riskTypes" : [ "vehicles" ],
                        "title" : "Vehicles",
                        "columns" : [ {
                          "name" : "vin",
                          "header" : "VIN"
                        }, {
                          "name" : "make",
                          "header" : "Make"
                        }, {
                          "name" : "model",
                          "header" : "Model"
                        } ]
                      }, {
                        "type" : "totalPremiumDisplay"
                      } ]
                    } ]
                  } ]
                },
                "criteria" : {
                  "version" : "0.1",
                  "criteria" : {
                    "product" : [ "generalAutoCW" ]
                  }
                }
              }
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "quote" ],
        "description" : "Updates a Quote Flow.",
        "operationId" : "updateFlow",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Quote Flow UUID.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "QuoteFlow",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/QuoteFlow"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Quote Flow updated successfully.",
            "schema" : {
              "$ref" : "#/definitions/QuoteFlow"
            },
            "examples" : {
              "application/json" : {
                "id" : "45a2a6fb-4349-44e3-9feb-d2acbbe6828c",
                "configuration" : {
                  "version" : "1.0",
                  "pageGroups" : [ {
                    "title" : "Setup",
                    "name" : "setup",
                    "pages" : [ {
                      "title" : "Policy Setup",
                      "name" : "policySetup",
                      "continueButtonLabel" : "Continue to Drivers",
                      "components" : [ {
                        "type" : "riskEdit",
                        "riskType" : "policy",
                        "fieldGroups" : [ {
                          "title" : "Setup",
                          "name" : "Setup",
                          "fields" : [ {
                            "name" : "uninsuredMotoristBodilyInjury"
                          }, {
                            "name" : "uninsuredMotoristPropertyDamage"
                          } ]
                        } ]
                      }, {
                        "type" : "separator"
                      }, {
                        "type" : "block",
                        "text" : "A **block**, including a [link](https://britecore.com/)."
                      } ]
                    } ]
                  }, {
                    "title" : "Drivers",
                    "name" : "drivers",
                    "pages" : [ {
                      "title" : "Drivers",
                      "name" : "setup",
                      "continueButtonLabel" : "Continue to Vehicles",
                      "layout" : {
                        "type" : "standard"
                      },
                      "components" : [ {
                        "type" : "riskList",
                        "name" : "driverList",
                        "riskType" : "drivers",
                        "riskLabel" : "Driver",
                        "components" : [ {
                          "type" : "riskEdit",
                          "riskType" : "drivers",
                          "fieldGroups" : [ {
                            "title" : "Personal Information",
                            "name" : "Personal Info",
                            "displayType" : "el-card",
                            "fields" : [ {
                              "name" : "driversLicenseNumber"
                            }, {
                              "name" : "driverName",
                              "label" : "Driver Name"
                            }, {
                              "name" : "dob"
                            }, {
                              "name" : "gender",
                              "widget" : {
                                "type" : "button-selection",
                                "size" : "lg"
                              }
                            }, {
                              "name" : "maritalStatus",
                              "widget" : {
                                "type" : "button-selection",
                                "size" : "lg"
                              }
                            }, {
                              "name" : "goodStudent",
                              "tooltip" : {
                                "text" : "Good student discounts are available for student who have maintained a 3.5 GPA for the last two semesters of high school or college."
                              },
                              "widget" : {
                                "type" : "boolean-buttons"
                              }
                            }, {
                              "name" : "driverTraining",
                              "tooltip" : {
                                "text" : "Only enable if insured(s) have completed driver training within the last 36 months."
                              },
                              "widget" : {
                                "type" : "boolean-buttons"
                              }
                            }, {
                              "name" : "includeSeniorDiscount",
                              "widget" : {
                                "type" : "boolean-buttons"
                              }
                            } ]
                          } ]
                        } ]
                      } ]
                    } ]
                  }, {
                    "title" : "Review",
                    "name" : "review",
                    "pages" : [ {
                      "title" : "Review",
                      "name" : "reviewRisks",
                      "components" : [ {
                        "type" : "riskTable",
                        "name" : "driverTableReview",
                        "riskTypes" : [ "drivers" ],
                        "title" : "Drivers",
                        "columns" : [ {
                          "name" : "dob",
                          "header" : "Date of Birth"
                        }, {
                          "name" : "gender",
                          "header" : "Gender"
                        } ]
                      }, {
                        "type" : "riskTable",
                        "name" : "driverTableReview",
                        "riskTypes" : [ "vehicles" ],
                        "title" : "Vehicles",
                        "columns" : [ {
                          "name" : "vin",
                          "header" : "VIN"
                        }, {
                          "name" : "make",
                          "header" : "Make"
                        }, {
                          "name" : "model",
                          "header" : "Model"
                        } ]
                      }, {
                        "type" : "totalPremiumDisplay"
                      } ]
                    } ]
                  } ]
                },
                "criteria" : {
                  "version" : "0.1",
                  "criteria" : {
                    "product" : [ "generalAutoCW" ]
                  }
                }
              }
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "quote" ],
        "description" : "Deletes a quote flow.",
        "operationId" : "deleteFlow",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Quote Flow UUID.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "Quote Flow is successfully deleted.",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "options" : {
        "tags" : [ "CORS" ],
        "summary" : "CORS support",
        "description" : "Enable CORS by returning correct headers",
        "consumes" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Default response for CORS method",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "patch" : {
        "tags" : [ "quote" ],
        "description" : "Partially update a quote flow.",
        "operationId" : "partialUpdateFlow",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Quote Flow UUID.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "QuoteFlow",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/QuoteFlow"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Quote flow is updated.",
            "schema" : {
              "$ref" : "#/definitions/QuoteFlowPartialUpdate"
            },
            "examples" : {
              "application/json" : {
                "id" : "45a2a6fb-4349-44e3-9feb-d2acbbe6828c",
                "configuration" : {
                  "version" : "1.0",
                  "pageGroups" : [ {
                    "title" : "Setup",
                    "name" : "setup",
                    "pages" : [ {
                      "title" : "Policy Setup",
                      "name" : "policySetup",
                      "continueButtonLabel" : "Continue to Drivers",
                      "components" : [ {
                        "type" : "riskEdit",
                        "riskType" : "policy",
                        "fieldGroups" : [ {
                          "title" : "Setup",
                          "name" : "Setup",
                          "fields" : [ {
                            "name" : "uninsuredMotoristBodilyInjury"
                          }, {
                            "name" : "uninsuredMotoristPropertyDamage"
                          } ]
                        } ]
                      }, {
                        "type" : "separator"
                      }, {
                        "type" : "block",
                        "text" : "A **block**, including a [link](https://britecore.com/)."
                      } ]
                    } ]
                  }, {
                    "title" : "Drivers",
                    "name" : "drivers",
                    "pages" : [ {
                      "title" : "Drivers",
                      "name" : "setup",
                      "continueButtonLabel" : "Continue to Vehicles",
                      "layout" : {
                        "type" : "standard"
                      },
                      "components" : [ {
                        "type" : "riskList",
                        "name" : "driverList",
                        "riskType" : "drivers",
                        "riskLabel" : "Driver",
                        "components" : [ {
                          "type" : "riskEdit",
                          "riskType" : "drivers",
                          "fieldGroups" : [ {
                            "title" : "Personal Information",
                            "name" : "Personal Info",
                            "displayType" : "el-card",
                            "fields" : [ {
                              "name" : "driversLicenseNumber"
                            }, {
                              "name" : "driverName",
                              "label" : "Driver Name"
                            }, {
                              "name" : "dob"
                            }, {
                              "name" : "gender",
                              "widget" : {
                                "type" : "button-selection",
                                "size" : "lg"
                              }
                            }, {
                              "name" : "maritalStatus",
                              "widget" : {
                                "type" : "button-selection",
                                "size" : "lg"
                              }
                            }, {
                              "name" : "goodStudent",
                              "tooltip" : {
                                "text" : "Good student discounts are available for student who have maintained a 3.5 GPA for the last two semesters of high school or college."
                              },
                              "widget" : {
                                "type" : "boolean-buttons"
                              }
                            }, {
                              "name" : "driverTraining",
                              "tooltip" : {
                                "text" : "Only enable if insured(s) have completed driver training within the last 36 months."
                              },
                              "widget" : {
                                "type" : "boolean-buttons"
                              }
                            }, {
                              "name" : "includeSeniorDiscount",
                              "widget" : {
                                "type" : "boolean-buttons"
                              }
                            } ]
                          } ]
                        } ]
                      } ]
                    } ]
                  }, {
                    "title" : "Review",
                    "name" : "review",
                    "pages" : [ {
                      "title" : "Review",
                      "name" : "reviewRisks",
                      "components" : [ {
                        "type" : "riskTable",
                        "name" : "driverTableReview",
                        "riskTypes" : [ "drivers" ],
                        "title" : "Drivers",
                        "columns" : [ {
                          "name" : "dob",
                          "header" : "Date of Birth"
                        }, {
                          "name" : "gender",
                          "header" : "Gender"
                        } ]
                      }, {
                        "type" : "riskTable",
                        "name" : "driverTableReview",
                        "riskTypes" : [ "vehicles" ],
                        "title" : "Vehicles",
                        "columns" : [ {
                          "name" : "vin",
                          "header" : "VIN"
                        }, {
                          "name" : "make",
                          "header" : "Make"
                        }, {
                          "name" : "model",
                          "header" : "Model"
                        } ]
                      }, {
                        "type" : "totalPremiumDisplay"
                      } ]
                    } ]
                  } ]
                },
                "criteria" : {
                  "version" : "0.1",
                  "criteria" : {
                    "product" : [ "generalAutoCW" ]
                  }
                }
              }
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      }
    },
    "/quote/items" : {
      "post" : {
        "tags" : [ "quote" ],
        "description" : "Adds an item to a risk quote.",
        "operationId" : "addRiskQuoteItem",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Disable-Rating-Engine",
          "in" : "header",
          "description" : "Header to skip running Rating engine for this call.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Disable-Rules-Engine",
          "in" : "header",
          "description" : "Header to skip running BriteRules engine for this call.",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "RiskQuoteItem",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RiskQuoteItem"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Risk quote item added successfully.",
            "schema" : {
              "$ref" : "#/definitions/RiskQuote"
            },
            "examples" : {
              "application/json" : {
                "id" : "d280ee2f-52b4-498d-a26c-40c0c8d23791",
                "number" : 5,
                "risk_state" : {
                  "id" : "d280ee2f-52b4-498d-a26c-40c0c8d23791",
                  "name" : "Golf Cart 5",
                  "number" : 5,
                  "total_premium" : 281,
                  "type" : {
                    "id" : "9c90d006-9ed1-4925-9973-36101254c6ed",
                    "name" : "golfCarts",
                    "label" : "Golf Cart"
                  },
                  "items" : {
                    "bodilyInjury" : {
                      "premium" : 126,
                      "limits" : {
                        "bodilyInjuryPerRiskLimit" : "$100,000/$300,000"
                      }
                    },
                    "propertyDamage" : {
                      "premium" : 79,
                      "limits" : {
                        "propertyDamagePerRiskLimit" : "$100,000"
                      }
                    }
                  },
                  "detached_items" : [ "medicalExpense" ],
                  "field_answers" : {
                    "zipCode5DigitsOnly" : "zipCode5DigitsOnly_20101",
                    "bodilyInjuryLimit" : "bodilyInjuryLimit_100000300000",
                    "propertyDamageLimit" : "propertyDamageLimit_100000",
                    "serialVin" : "12345678901234567",
                    "modelYear" : 2004,
                    "uninsuredMotoristFormRequired" : false,
                    "bodyStyle" : "GC"
                  },
                  "detached_answers" : {
                    "medicalExpenseLimit" : "medicalExpenseLimit_2000"
                  },
                  "calculations" : {
                    "cartFactor" : 0.5,
                    "primaryDriverFactor" : 1,
                    "secondaryDriverFactor" : 0,
                    "termFactor" : 1,
                    "otherAutoPolicy" : 0
                  },
                  "rate_tables" : {
                    "bodilyInjuryBaseRate" : 172,
                    "bodilyInjuryTierFactor" : 1,
                    "propertyDamageBaseRate" : 143,
                    "propertyDamageTierFactor" : 1,
                    "medicalExpenseBaseRate" : 49,
                    "medicalExpenseTierFactor" : 1
                  }
                },
                "risk_type_state" : {
                  "id" : "9c90d006-9ed1-4925-9973-36101254c6ed",
                  "label" : "Golf Cart",
                  "name" : "golfCarts",
                  "description" : "Golf Cart",
                  "version" : "d4606fb0-94e9-4d47-9330-ac06a1179c22",
                  "line" : {
                    "id" : "6e7b578e-4dde-4872-8544-eaf9faa6c1a1",
                    "label" : "Personal Auto",
                    "name" : "PA",
                    "description" : "AMIC Personal Auto"
                  },
                  "fields" : [ {
                    "id" : "3f21d46d-f97e-42d9-ad50-cb27c5c3e5a8",
                    "risk_type" : "9c90d006-9ed1-4925-9973-36101254c6ed",
                    "version" : "d4606fb0-94e9-4d47-9330-ac06a1179c22",
                    "order" : 0,
                    "name" : "vehicleNumber",
                    "label" : "Vehicle Number",
                    "type" : "string",
                    "supplemental" : false,
                    "optional" : false
                  }, {
                    "id" : "d42e4d4b-9f3d-4e63-b555-113c02e3b278",
                    "risk_type" : "9c90d006-9ed1-4925-9973-36101254c6ed",
                    "version" : "d4606fb0-94e9-4d47-9330-ac06a1179c22",
                    "order" : 1,
                    "name" : "serialVin",
                    "label" : "Serial/VIN",
                    "type" : "string",
                    "supplemental" : true,
                    "optional" : false
                  }, {
                    "id" : "ffc62fb4-5588-4b79-9465-7bdf8322efc1",
                    "risk_type" : "9c90d006-9ed1-4925-9973-36101254c6ed",
                    "version" : "d4606fb0-94e9-4d47-9330-ac06a1179c22",
                    "order" : 10,
                    "options" : [ {
                      "value" : "$25,000/$50,000",
                      "label" : "$25,000/$50,000",
                      "display_label" : "$25,000/$50,000",
                      "name" : "bodilyInjuryLimit_2500050000"
                    }, {
                      "value" : "$50,000/$100,000",
                      "label" : "$50,000/$100,000",
                      "display_label" : "$50,000/$100,000",
                      "name" : "bodilyInjuryLimit_50000100000"
                    }, {
                      "value" : "$100,000/$200,000",
                      "label" : "$100,000/$200,000",
                      "display_label" : "$100,000/$200,000",
                      "name" : "bodilyInjuryLimit_100000200000"
                    } ],
                    "name" : "bodilyInjuryLimit",
                    "label" : "Bodily Injury Limit",
                    "type" : "enum",
                    "default" : "bodilyInjuryLimit_100000300000",
                    "supplemental" : false,
                    "optional" : false
                  }, {
                    "id" : "fcaf0232-0ae4-495e-a773-9ebd57779d0e",
                    "risk_type" : "9c90d006-9ed1-4925-9973-36101254c6ed",
                    "version" : "d4606fb0-94e9-4d47-9330-ac06a1179c22",
                    "order" : 11,
                    "options" : [ {
                      "value" : "$20,000",
                      "label" : "$20,000",
                      "display_label" : "$20,000",
                      "name" : "propertyDamageLimit_20000"
                    }, {
                      "value" : "$25,000",
                      "label" : "$25,000",
                      "display_label" : "$25,000",
                      "name" : "propertyDamageLimit_25000"
                    }, {
                      "value" : "$50,000",
                      "label" : "$50,000",
                      "display_label" : "$50,000",
                      "name" : "propertyDamageLimit_50000"
                    } ],
                    "name" : "propertyDamageLimit",
                    "label" : "Property Damage Limit",
                    "type" : "enum",
                    "default" : "propertyDamageLimit_100000",
                    "supplemental" : false,
                    "optional" : false
                  }, {
                    "id" : "d62765f3-db79-4600-9a57-79c65026518a",
                    "risk_type" : "9c90d006-9ed1-4925-9973-36101254c6ed",
                    "version" : "d4606fb0-94e9-4d47-9330-ac06a1179c22",
                    "order" : 15,
                    "options" : [ {
                      "value" : "$1,000",
                      "label" : "$1,000",
                      "display_label" : "$1,000",
                      "name" : "medicalExpenseLimit_1000"
                    }, {
                      "value" : "$2,000",
                      "label" : "$2,000",
                      "display_label" : "$2,000",
                      "name" : "medicalExpenseLimit_2000"
                    } ],
                    "name" : "medicalExpenseLimit",
                    "label" : "Medical Expense Limit",
                    "type" : "enum",
                    "default" : "medicalExpenseLimit_2000",
                    "supplemental" : false,
                    "optional" : false
                  } ],
                  "items" : [ {
                    "id" : "96d6044f-6332-4aa5-9f06-957b61e30610",
                    "label" : "Bodily Injury",
                    "name" : "bodilyInjury",
                    "presence" : "mandatory",
                    "order" : 0,
                    "fields" : {
                      "zipCode5DigitsOnly" : {
                        "optional" : false
                      },
                      "bodilyInjuryLimit" : {
                        "optional" : false
                      }
                    },
                    "limits" : [ {
                      "id" : "f8c1dc9a-824d-437f-9bdf-072ea2e326f7",
                      "calculation" : {
                        "id" : "c44224c5-99b0-4df9-9d61-3956b0365cb0",
                        "name" : "bodilyInjuryPerRiskLimitCalculation",
                        "type" : "limit",
                        "calculation" : "bodilyInjuryLimit",
                        "compiled_code" : "gANjZGlsbC5kaWxsCl9sb2FkX3R5cGUKcQBYCAAAAENvZGVUeXBlcQGFcQJScQMoSwBLAEsASwFLQEMEZQBTAHEEKVgRAAAAYm9kaWx5SW5qdXJ5TGltaXRxBYVxBilYCAAAADxzdHJpbmc+cQdYCAAAADxtb2R1bGU+cQhLAUMAcQkpKXRxClJxCy4=",
                        "referenced_names" : {
                          "current" : [ "bodilyInjuryLimit" ]
                        }
                      },
                      "risk_type" : "9c90d006-9ed1-4925-9973-36101254c6ed",
                      "version" : "d4606fb0-94e9-4d47-9330-ac06a1179c22",
                      "name" : "bodilyInjuryPerRiskLimit",
                      "label" : "Bodily Injury Limit",
                      "type" : "per_risk_limit"
                    } ]
                  }, {
                    "id" : "3fa93a6e-5578-47b5-b9f8-de748a7b4f47",
                    "label" : "Property Damage",
                    "name" : "propertyDamage",
                    "presence" : "mandatory",
                    "order" : 1,
                    "fields" : {
                      "zipCode5DigitsOnly" : {
                        "optional" : false
                      },
                      "propertyDamageLimit" : {
                        "optional" : false
                      }
                    },
                    "limits" : [ {
                      "id" : "42bbbcdb-c8c1-405a-a381-b2a13100e071",
                      "calculation" : {
                        "id" : "df1a5fbc-866b-4a89-b876-e38260e75b14",
                        "name" : "propertyDamagePerRiskLimitCalculation",
                        "type" : "limit",
                        "calculation" : "propertyDamageLimit",
                        "compiled_code" : "gANjZGlsbC5kaWxsCl9sb2FkX3R5cGUKcQBYCAAAAENvZGVUeXBlcQGFcQJScQMoSwBLAEsASwFLQEMEZQBTAHEEKVgTAAAAcHJvcGVydHlEYW1hZ2VMaW1pdHEFhXEGKVgIAAAAPHN0cmluZz5xB1gIAAAAPG1vZHVsZT5xCEsBQwBxCSkpdHEKUnELLg==",
                        "referenced_names" : {
                          "current" : [ "propertyDamageLimit" ]
                        }
                      },
                      "risk_type" : "9c90d006-9ed1-4925-9973-36101254c6ed",
                      "version" : "d4606fb0-94e9-4d47-9330-ac06a1179c22",
                      "name" : "propertyDamagePerRiskLimit",
                      "label" : "Property Damage Limit",
                      "type" : "per_risk_limit"
                    } ]
                  } ]
                },
                "final_rate" : 0.0,
                "date_added" : "2019-08-19T23:24:57.138149+00:00",
                "date_modified" : "2019-08-19T23:25:23.159705+00:00"
              }
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "400" : {
            "description" : "Risk quote item contains validation errors.",
            "examples" : {
              "application/json" : {
                "errors" : {
                  "comprehensive" : [ {
                    "code" : "collision_requires_comprehensive",
                    "message" : "Collision requires Comprehensive coverage also",
                    "meta" : {
                      "risk" : "3068a405-3a6d-4ec1-bdc8-dc6f62e30351"
                    }
                  } ]
                }
              }
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "options" : {
        "tags" : [ "CORS" ],
        "summary" : "CORS support",
        "description" : "Enable CORS by returning correct headers",
        "consumes" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Default response for CORS method",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      }
    },
    "/quote/items/{risk_item_name}" : {
      "delete" : {
        "tags" : [ "quote" ],
        "description" : "Removes an item from a risk quote.",
        "operationId" : "removeRiskQuoteItem",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Disable-Rating-Engine",
          "in" : "header",
          "description" : "Header to skip running Rating engine for this call.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "risk_item_name",
          "in" : "path",
          "description" : "Risk Item Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "X-Disable-Rules-Engine",
          "in" : "header",
          "description" : "Header to skip running BriteRules engine for this call.",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "RiskQuoteValidator",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RiskQuoteValidator"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Risk quote item removed successfully.",
            "schema" : {
              "$ref" : "#/definitions/RiskQuote"
            },
            "examples" : {
              "application/json" : {
                "id" : "d280ee2f-52b4-498d-a26c-40c0c8d23791",
                "number" : 5,
                "risk_state" : {
                  "id" : "d280ee2f-52b4-498d-a26c-40c0c8d23791",
                  "name" : "Golf Cart 5",
                  "number" : 5,
                  "total_premium" : 281,
                  "type" : {
                    "id" : "9c90d006-9ed1-4925-9973-36101254c6ed",
                    "name" : "golfCarts",
                    "label" : "Golf Cart"
                  },
                  "items" : {
                    "bodilyInjury" : {
                      "premium" : 126,
                      "limits" : {
                        "bodilyInjuryPerRiskLimit" : "$100,000/$300,000"
                      }
                    },
                    "propertyDamage" : {
                      "premium" : 79,
                      "limits" : {
                        "propertyDamagePerRiskLimit" : "$100,000"
                      }
                    }
                  },
                  "detached_items" : [ "medicalExpense" ],
                  "field_answers" : {
                    "zipCode5DigitsOnly" : "zipCode5DigitsOnly_20101",
                    "bodilyInjuryLimit" : "bodilyInjuryLimit_100000300000",
                    "propertyDamageLimit" : "propertyDamageLimit_100000",
                    "serialVin" : "12345678901234567",
                    "modelYear" : 2004,
                    "uninsuredMotoristFormRequired" : false,
                    "bodyStyle" : "GC"
                  },
                  "detached_answers" : {
                    "medicalExpenseLimit" : "medicalExpenseLimit_2000"
                  },
                  "calculations" : {
                    "cartFactor" : 0.5,
                    "primaryDriverFactor" : 1,
                    "secondaryDriverFactor" : 0,
                    "termFactor" : 1,
                    "otherAutoPolicy" : 0
                  },
                  "rate_tables" : {
                    "bodilyInjuryBaseRate" : 172,
                    "bodilyInjuryTierFactor" : 1,
                    "propertyDamageBaseRate" : 143,
                    "propertyDamageTierFactor" : 1,
                    "medicalExpenseBaseRate" : 49,
                    "medicalExpenseTierFactor" : 1
                  }
                },
                "risk_type_state" : {
                  "id" : "9c90d006-9ed1-4925-9973-36101254c6ed",
                  "label" : "Golf Cart",
                  "name" : "golfCarts",
                  "description" : "Golf Cart",
                  "version" : "d4606fb0-94e9-4d47-9330-ac06a1179c22",
                  "line" : {
                    "id" : "6e7b578e-4dde-4872-8544-eaf9faa6c1a1",
                    "label" : "Personal Auto",
                    "name" : "PA",
                    "description" : "AMIC Personal Auto"
                  },
                  "fields" : [ {
                    "id" : "3f21d46d-f97e-42d9-ad50-cb27c5c3e5a8",
                    "risk_type" : "9c90d006-9ed1-4925-9973-36101254c6ed",
                    "version" : "d4606fb0-94e9-4d47-9330-ac06a1179c22",
                    "order" : 0,
                    "name" : "vehicleNumber",
                    "label" : "Vehicle Number",
                    "type" : "string",
                    "supplemental" : false,
                    "optional" : false
                  }, {
                    "id" : "d42e4d4b-9f3d-4e63-b555-113c02e3b278",
                    "risk_type" : "9c90d006-9ed1-4925-9973-36101254c6ed",
                    "version" : "d4606fb0-94e9-4d47-9330-ac06a1179c22",
                    "order" : 1,
                    "name" : "serialVin",
                    "label" : "Serial/VIN",
                    "type" : "string",
                    "supplemental" : true,
                    "optional" : false
                  }, {
                    "id" : "ffc62fb4-5588-4b79-9465-7bdf8322efc1",
                    "risk_type" : "9c90d006-9ed1-4925-9973-36101254c6ed",
                    "version" : "d4606fb0-94e9-4d47-9330-ac06a1179c22",
                    "order" : 10,
                    "options" : [ {
                      "value" : "$25,000/$50,000",
                      "label" : "$25,000/$50,000",
                      "display_label" : "$25,000/$50,000",
                      "name" : "bodilyInjuryLimit_2500050000"
                    }, {
                      "value" : "$50,000/$100,000",
                      "label" : "$50,000/$100,000",
                      "display_label" : "$50,000/$100,000",
                      "name" : "bodilyInjuryLimit_50000100000"
                    }, {
                      "value" : "$100,000/$200,000",
                      "label" : "$100,000/$200,000",
                      "display_label" : "$100,000/$200,000",
                      "name" : "bodilyInjuryLimit_100000200000"
                    } ],
                    "name" : "bodilyInjuryLimit",
                    "label" : "Bodily Injury Limit",
                    "type" : "enum",
                    "default" : "bodilyInjuryLimit_100000300000",
                    "supplemental" : false,
                    "optional" : false
                  }, {
                    "id" : "fcaf0232-0ae4-495e-a773-9ebd57779d0e",
                    "risk_type" : "9c90d006-9ed1-4925-9973-36101254c6ed",
                    "version" : "d4606fb0-94e9-4d47-9330-ac06a1179c22",
                    "order" : 11,
                    "options" : [ {
                      "value" : "$20,000",
                      "label" : "$20,000",
                      "display_label" : "$20,000",
                      "name" : "propertyDamageLimit_20000"
                    }, {
                      "value" : "$25,000",
                      "label" : "$25,000",
                      "display_label" : "$25,000",
                      "name" : "propertyDamageLimit_25000"
                    }, {
                      "value" : "$50,000",
                      "label" : "$50,000",
                      "display_label" : "$50,000",
                      "name" : "propertyDamageLimit_50000"
                    } ],
                    "name" : "propertyDamageLimit",
                    "label" : "Property Damage Limit",
                    "type" : "enum",
                    "default" : "propertyDamageLimit_100000",
                    "supplemental" : false,
                    "optional" : false
                  }, {
                    "id" : "d62765f3-db79-4600-9a57-79c65026518a",
                    "risk_type" : "9c90d006-9ed1-4925-9973-36101254c6ed",
                    "version" : "d4606fb0-94e9-4d47-9330-ac06a1179c22",
                    "order" : 15,
                    "options" : [ {
                      "value" : "$1,000",
                      "label" : "$1,000",
                      "display_label" : "$1,000",
                      "name" : "medicalExpenseLimit_1000"
                    }, {
                      "value" : "$2,000",
                      "label" : "$2,000",
                      "display_label" : "$2,000",
                      "name" : "medicalExpenseLimit_2000"
                    } ],
                    "name" : "medicalExpenseLimit",
                    "label" : "Medical Expense Limit",
                    "type" : "enum",
                    "default" : "medicalExpenseLimit_2000",
                    "supplemental" : false,
                    "optional" : false
                  } ],
                  "items" : [ {
                    "id" : "96d6044f-6332-4aa5-9f06-957b61e30610",
                    "label" : "Bodily Injury",
                    "name" : "bodilyInjury",
                    "presence" : "mandatory",
                    "order" : 0,
                    "fields" : {
                      "zipCode5DigitsOnly" : {
                        "optional" : false
                      },
                      "bodilyInjuryLimit" : {
                        "optional" : false
                      }
                    },
                    "limits" : [ {
                      "id" : "f8c1dc9a-824d-437f-9bdf-072ea2e326f7",
                      "calculation" : {
                        "id" : "c44224c5-99b0-4df9-9d61-3956b0365cb0",
                        "name" : "bodilyInjuryPerRiskLimitCalculation",
                        "type" : "limit",
                        "calculation" : "bodilyInjuryLimit",
                        "compiled_code" : "gANjZGlsbC5kaWxsCl9sb2FkX3R5cGUKcQBYCAAAAENvZGVUeXBlcQGFcQJScQMoSwBLAEsASwFLQEMEZQBTAHEEKVgRAAAAYm9kaWx5SW5qdXJ5TGltaXRxBYVxBilYCAAAADxzdHJpbmc+cQdYCAAAADxtb2R1bGU+cQhLAUMAcQkpKXRxClJxCy4=",
                        "referenced_names" : {
                          "current" : [ "bodilyInjuryLimit" ]
                        }
                      },
                      "risk_type" : "9c90d006-9ed1-4925-9973-36101254c6ed",
                      "version" : "d4606fb0-94e9-4d47-9330-ac06a1179c22",
                      "name" : "bodilyInjuryPerRiskLimit",
                      "label" : "Bodily Injury Limit",
                      "type" : "per_risk_limit"
                    } ]
                  }, {
                    "id" : "3fa93a6e-5578-47b5-b9f8-de748a7b4f47",
                    "label" : "Property Damage",
                    "name" : "propertyDamage",
                    "presence" : "mandatory",
                    "order" : 1,
                    "fields" : {
                      "zipCode5DigitsOnly" : {
                        "optional" : false
                      },
                      "propertyDamageLimit" : {
                        "optional" : false
                      }
                    },
                    "limits" : [ {
                      "id" : "42bbbcdb-c8c1-405a-a381-b2a13100e071",
                      "calculation" : {
                        "id" : "df1a5fbc-866b-4a89-b876-e38260e75b14",
                        "name" : "propertyDamagePerRiskLimitCalculation",
                        "type" : "limit",
                        "calculation" : "propertyDamageLimit",
                        "compiled_code" : "gANjZGlsbC5kaWxsCl9sb2FkX3R5cGUKcQBYCAAAAENvZGVUeXBlcQGFcQJScQMoSwBLAEsASwFLQEMEZQBTAHEEKVgTAAAAcHJvcGVydHlEYW1hZ2VMaW1pdHEFhXEGKVgIAAAAPHN0cmluZz5xB1gIAAAAPG1vZHVsZT5xCEsBQwBxCSkpdHEKUnELLg==",
                        "referenced_names" : {
                          "current" : [ "propertyDamageLimit" ]
                        }
                      },
                      "risk_type" : "9c90d006-9ed1-4925-9973-36101254c6ed",
                      "version" : "d4606fb0-94e9-4d47-9330-ac06a1179c22",
                      "name" : "propertyDamagePerRiskLimit",
                      "label" : "Property Damage Limit",
                      "type" : "per_risk_limit"
                    } ]
                  } ]
                },
                "final_rate" : 0.0,
                "date_added" : "2019-08-19T23:24:57.138149+00:00",
                "date_modified" : "2019-08-19T23:25:23.159705+00:00"
              }
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "options" : {
        "tags" : [ "CORS" ],
        "summary" : "CORS support",
        "description" : "Enable CORS by returning correct headers",
        "consumes" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Default response for CORS method",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      }
    },
    "/quote/quotable-products" : {
      "get" : {
        "tags" : [ "quote" ],
        "description" : "Returns a list of Products that are available for quoting.",
        "operationId" : "getQuotableProducts",
        "parameters" : [ {
          "name" : "effective_before",
          "in" : "query",
          "description" : "The date to filter products by their effective date.\nDate string should be in YYYY-MM-DD format. If not present or invalid, defaults to current date.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "The list of Products is returned.",
            "examples" : {
              "application/json" : [ {
                "line" : {
                  "id" : "bb1c110c-a3b3-42f4-b691-cff7602d2d84",
                  "label" : "General Auto",
                  "name" : "generalAuto",
                  "description" : "General Auto Description"
                },
                "version" : {
                  "id" : "a84f76d9-9f89-46f8-a200-df5c8b750175",
                  "date_added" : "2019-06-29",
                  "date_modified" : "2019-06-29",
                  "name" : "Initial Version",
                  "effective_date" : "2019-05-10",
                  "status" : "published",
                  "description" : "The first version of the product."
                },
                "name" : "generalAutoCW",
                "label" : "General Auto - Countrywide"
              } ]
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "options" : {
        "tags" : [ "CORS" ],
        "summary" : "CORS support",
        "description" : "Enable CORS by returning correct headers",
        "consumes" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Default response for CORS method",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      }
    },
    "/quote/risks" : {
      "post" : {
        "tags" : [ "quote" ],
        "description" : "Creates a risk quote.",
        "operationId" : "createRisk",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Disable-Rating-Engine",
          "in" : "header",
          "description" : "Header to skip running Rating engine for this call.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "dry_run",
          "in" : "query",
          "description" : "Enable dry run mode. Creates a Risk Quote but does not save it on server.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "X-Disable-Rules-Engine",
          "in" : "header",
          "description" : "Header to skip running BriteRules engine for this call.",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "CreateRiskQuote",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CreateRiskQuote"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Risk quote created successfully.",
            "schema" : {
              "$ref" : "#/definitions/RiskQuote"
            },
            "examples" : {
              "application/json" : {
                "id" : "590bb117-e323-4df5-9cc2-f07e908ae8c7",
                "number" : 20,
                "risk_state" : {
                  "id" : "590bb117-e323-4df5-9cc2-f07e908ae8c7",
                  "name" : "Jane",
                  "number" : 20,
                  "total_premium" : 0,
                  "type" : {
                    "id" : "965ad495-a65c-401e-b7e3-086def4e07fe",
                    "name" : "drivers",
                    "label" : "Driver"
                  },
                  "field_answers" : {
                    "driverNumber" : "20",
                    "firstName" : "Jane",
                    "dateOfBirth" : "2001-09-30",
                    "gender" : "gender_female",
                    "married" : "false",
                    "accidentPreventionCourseCompleted" : false,
                    "drivingSchool" : false
                  },
                  "field_overrides" : {
                    "goodGrades" : {
                      "visible" : true
                    },
                    "isNamedInsured" : {
                      "visible" : true
                    }
                  },
                  "calculations" : {
                    "driverAge" : 18,
                    "pleasureComputedFieldCalculation" : 2.9
                  },
                  "rate_tables" : {
                    "pleasureCode" : 8936,
                    "pleasureFactor" : 2.9
                  }
                },
                "risk_type_state" : {
                  "id" : "965ad495-a65c-401e-b7e3-086def4e07fe",
                  "label" : "Driver",
                  "name" : "drivers",
                  "description" : "Driver",
                  "version" : "d4606fb0-94e9-4d47-9330-ac06a1179c22",
                  "line" : {
                    "id" : "6e7b578e-4dde-4872-8544-eaf9faa6c1a1",
                    "label" : "Personal Auto",
                    "name" : "PA",
                    "description" : "AMIC Personal Auto"
                  },
                  "fields" : [ {
                    "id" : "2bad206f-48db-472d-8806-ad9ee9f5aa1c",
                    "risk_type" : "965ad495-a65c-401e-b7e3-086def4e07fe",
                    "version" : "d4606fb0-94e9-4d47-9330-ac06a1179c22",
                    "order" : 0,
                    "name" : "driverNumber",
                    "label" : "Driver Number",
                    "type" : "string",
                    "supplemental" : false,
                    "optional" : false
                  }, {
                    "id" : "058e62c0-f8cb-411a-9752-d4cf17b7c0ce",
                    "risk_type" : "965ad495-a65c-401e-b7e3-086def4e07fe",
                    "version" : "d4606fb0-94e9-4d47-9330-ac06a1179c22",
                    "order" : 1,
                    "name" : "firstName",
                    "label" : "First Name",
                    "type" : "string",
                    "supplemental" : true,
                    "optional" : false
                  }, {
                    "id" : "ff4f524c-03c4-42ac-b5de-5248f8697eb2",
                    "risk_type" : "965ad495-a65c-401e-b7e3-086def4e07fe",
                    "version" : "d4606fb0-94e9-4d47-9330-ac06a1179c22",
                    "order" : 5,
                    "name" : "dateOfBirth",
                    "label" : "Date of Birth",
                    "type" : "date",
                    "default" : {
                      "years" : -18
                    },
                    "supplemental" : true,
                    "optional" : false
                  }, {
                    "id" : "77d8431d-82ef-40f9-9ea8-1f81f0f6edd3",
                    "risk_type" : "965ad495-a65c-401e-b7e3-086def4e07fe",
                    "version" : "d4606fb0-94e9-4d47-9330-ac06a1179c22",
                    "order" : 6,
                    "options" : [ {
                      "value" : "Female",
                      "label" : "Female",
                      "display_label" : "Female",
                      "name" : "gender_female"
                    }, {
                      "value" : "Male",
                      "label" : "Male",
                      "display_label" : "Male",
                      "name" : "gender_male"
                    } ],
                    "name" : "gender",
                    "label" : "Gender",
                    "type" : "enum",
                    "default" : "gender_female",
                    "supplemental" : true,
                    "optional" : false
                  }, {
                    "id" : "3c4955e1-39c1-4600-8378-064aef0bd12e",
                    "risk_type" : "965ad495-a65c-401e-b7e3-086def4e07fe",
                    "version" : "d4606fb0-94e9-4d47-9330-ac06a1179c22",
                    "order" : 7,
                    "name" : "married",
                    "label" : "Married",
                    "type" : "boolean",
                    "default" : "false",
                    "supplemental" : true,
                    "optional" : false
                  }, {
                    "id" : "b44494b8-1074-42b9-ad7f-e311eebdf43c",
                    "risk_type" : "965ad495-a65c-401e-b7e3-086def4e07fe",
                    "version" : "d4606fb0-94e9-4d47-9330-ac06a1179c22",
                    "order" : 10,
                    "options" : [ {
                      "value" : "AL - Alabama",
                      "label" : "AL - Alabama",
                      "display_label" : "AL - Alabama",
                      "name" : "licenseState_aLAlabama"
                    }, {
                      "value" : "AK - Alaska",
                      "label" : "AK - Alaska",
                      "display_label" : "AK - Alaska",
                      "name" : "licenseState_aKAlaska"
                    } ]
                  }, {
                    "id" : "ad13883c-c137-4eee-b370-7139ca473263",
                    "risk_type" : "965ad495-a65c-401e-b7e3-086def4e07fe",
                    "version" : "d4606fb0-94e9-4d47-9330-ac06a1179c22",
                    "order" : 17,
                    "name" : "goodGrades",
                    "label" : "Good Student",
                    "type" : "boolean",
                    "default" : false,
                    "supplemental" : true,
                    "optional" : false
                  }, {
                    "id" : "e925a4d8-3dc9-4f1b-9f67-3cf025ad8a65",
                    "risk_type" : "965ad495-a65c-401e-b7e3-086def4e07fe",
                    "version" : "d4606fb0-94e9-4d47-9330-ac06a1179c22",
                    "order" : 20,
                    "name" : "isNamedInsured",
                    "label" : "Named Insured",
                    "type" : "boolean",
                    "default" : false,
                    "supplemental" : true,
                    "optional" : false
                  }, {
                    "id" : "d846ccd0-dcb6-4306-a69c-1156d9f8876b",
                    "risk_type" : "965ad495-a65c-401e-b7e3-086def4e07fe",
                    "version" : "d4606fb0-94e9-4d47-9330-ac06a1179c22",
                    "order" : 21,
                    "calculation" : "pleasureFactor",
                    "name" : "pleasure",
                    "label" : "Pleasure",
                    "type" : "computed",
                    "supplemental" : false,
                    "optional" : false,
                    "calculation_name" : "pleasureComputedFieldCalculation"
                  } ]
                },
                "final_rate" : 3.0,
                "date_added" : "2019-08-19T23:24:57.138149+00:00",
                "date_modified" : "2019-08-19T23:25:23.159705+00:00"
              }
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "options" : {
        "tags" : [ "CORS" ],
        "summary" : "CORS support",
        "description" : "Enable CORS by returning correct headers",
        "consumes" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Default response for CORS method",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      }
    },
    "/quote/risks/{risk_quote_id}" : {
      "get" : {
        "tags" : [ "quote" ],
        "description" : "Get a RiskQuote object including its children RiskQuotes.",
        "operationId" : "getRiskQuote",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "risk_quote_id",
          "in" : "path",
          "description" : "Risk Quote ID.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "The RiskQuote is returned.",
            "schema" : {
              "$ref" : "#/definitions/RiskQuote"
            },
            "examples" : {
              "application/json" : {
                "id" : "50d61656-bf33-462d-bf02-9d3f6240e998",
                "number" : 1,
                "risk_state" : {
                  "id" : "50d61656-bf33-462d-bf02-9d3f6240e998",
                  "name" : "Policy 1",
                  "number" : 1,
                  "total_premium" : 0,
                  "type" : {
                    "id" : "400162a1-a796-4fed-ab31-bea68ce69084",
                    "name" : "policy",
                    "label" : "Policy"
                  },
                  "field_answers" : {
                    "firstNameNI" : "John"
                  }
                },
                "risk_type_state" : {
                  "id" : "400162a1-a796-4fed-ab31-bea68ce69084",
                  "label" : "Policy",
                  "name" : "policy",
                  "version" : "d50fa993-d8c1-4be8-b0ef-bc594f4c2c3e",
                  "line" : {
                    "id" : "3fc5a303-2fa3-4418-918a-69f01e357654",
                    "label" : "Personal Auto",
                    "name" : "PA",
                    "description" : "AMIC Personal Auto"
                  },
                  "fields" : [ {
                    "id" : "7b6e1fdb-6d1b-4f6b-8842-8fbb1e7dfed3",
                    "risk_type" : "400162a1-a796-4fed-ab31-bea68ce69084",
                    "version" : "d50fa993-d8c1-4be8-b0ef-bc594f4c2c3e",
                    "order" : 0,
                    "validators" : [ {
                      "name" : "length_range",
                      "params" : {
                        "min_value" : "1"
                      }
                    } ],
                    "name" : "firstNameNI",
                    "label" : "First Name of Named Insured",
                    "type" : "string",
                    "supplemental" : true
                  } ]
                },
                "final_rate" : 0.0,
                "date_added" : "2019-08-19T23:24:57.138149+00:00",
                "date_modified" : "2019-08-19T23:25:23.159705+00:00",
                "risk_quotes" : [ {
                  "id" : "6850925e-d694-45f7-a630-4125d772058a",
                  "number" : 1,
                  "risk_state" : {
                    "id" : "6850925e-d694-45f7-a630-4125d772058a",
                    "name" : "Driver 1",
                    "number" : 1,
                    "total_premium" : 0,
                    "type" : {
                      "id" : "89fb61a9-7592-40c0-8768-e12e3d99ae3b",
                      "name" : "drivers",
                      "label" : "Driver"
                    },
                    "field_answers" : {
                      "firstName" : "John"
                    }
                  },
                  "risk_type_state" : {
                    "id" : "89fb61a9-7592-40c0-8768-e12e3d99ae3b",
                    "label" : "Driver",
                    "name" : "drivers",
                    "description" : "Driver",
                    "version" : "d50fa993-d8c1-4be8-b0ef-bc594f4c2c3e",
                    "line" : {
                      "id" : "3fc5a303-2fa3-4418-918a-69f01e357654",
                      "label" : "Personal Auto",
                      "name" : "PA",
                      "description" : "AMIC Personal Auto"
                    },
                    "fields" : [ {
                      "id" : "26bd787e-4feb-462d-a7cb-1aa0e7dd67b0",
                      "risk_type" : "89fb61a9-7592-40c0-8768-e12e3d99ae3b",
                      "version" : "d50fa993-d8c1-4be8-b0ef-bc594f4c2c3e",
                      "order" : 0,
                      "validators" : [ {
                        "name" : "length_range",
                        "params" : {
                          "min_value" : "1"
                        }
                      } ],
                      "name" : "firstName",
                      "label" : "First Name",
                      "type" : "string",
                      "supplemental" : true
                    } ]
                  }
                } ]
              }
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "quote" ],
        "description" : "Updates a risk quote.",
        "operationId" : "updateRisk",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Disable-Rating-Engine",
          "in" : "header",
          "description" : "Header to skip running Rating engine for this call.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "risk_quote_id",
          "in" : "path",
          "description" : "Risk Quote ID.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "X-Disable-Rules-Engine",
          "in" : "header",
          "description" : "Header to skip running BriteRules engine for this call.",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "UpdateRiskQuote",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/UpdateRiskQuote"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Risk quote updated successfully.",
            "schema" : {
              "$ref" : "#/definitions/RiskQuote"
            },
            "examples" : {
              "application/json" : {
                "id" : "590bb117-e323-4df5-9cc2-f07e908ae8c7",
                "number" : 20,
                "risk_state" : {
                  "id" : "590bb117-e323-4df5-9cc2-f07e908ae8c7",
                  "name" : "Jane",
                  "number" : 20,
                  "total_premium" : 0,
                  "type" : {
                    "id" : "965ad495-a65c-401e-b7e3-086def4e07fe",
                    "name" : "drivers",
                    "label" : "Driver"
                  },
                  "field_answers" : {
                    "driverNumber" : "20",
                    "firstName" : "Jane",
                    "dateOfBirth" : "2001-09-30",
                    "gender" : "gender_female",
                    "married" : "false",
                    "accidentPreventionCourseCompleted" : false,
                    "drivingSchool" : false
                  },
                  "field_overrides" : {
                    "goodGrades" : {
                      "visible" : true
                    },
                    "isNamedInsured" : {
                      "visible" : true
                    }
                  },
                  "calculations" : {
                    "driverAge" : 18,
                    "pleasureComputedFieldCalculation" : 2.9
                  },
                  "rate_tables" : {
                    "pleasureCode" : 8936,
                    "pleasureFactor" : 2.9
                  }
                },
                "risk_type_state" : {
                  "id" : "965ad495-a65c-401e-b7e3-086def4e07fe",
                  "label" : "Driver",
                  "name" : "drivers",
                  "description" : "Driver",
                  "version" : "d4606fb0-94e9-4d47-9330-ac06a1179c22",
                  "line" : {
                    "id" : "6e7b578e-4dde-4872-8544-eaf9faa6c1a1",
                    "label" : "Personal Auto",
                    "name" : "PA",
                    "description" : "AMIC Personal Auto"
                  },
                  "fields" : [ {
                    "id" : "2bad206f-48db-472d-8806-ad9ee9f5aa1c",
                    "risk_type" : "965ad495-a65c-401e-b7e3-086def4e07fe",
                    "version" : "d4606fb0-94e9-4d47-9330-ac06a1179c22",
                    "order" : 0,
                    "name" : "driverNumber",
                    "label" : "Driver Number",
                    "type" : "string",
                    "supplemental" : false,
                    "optional" : false
                  }, {
                    "id" : "058e62c0-f8cb-411a-9752-d4cf17b7c0ce",
                    "risk_type" : "965ad495-a65c-401e-b7e3-086def4e07fe",
                    "version" : "d4606fb0-94e9-4d47-9330-ac06a1179c22",
                    "order" : 1,
                    "name" : "firstName",
                    "label" : "First Name",
                    "type" : "string",
                    "supplemental" : true,
                    "optional" : false
                  }, {
                    "id" : "ff4f524c-03c4-42ac-b5de-5248f8697eb2",
                    "risk_type" : "965ad495-a65c-401e-b7e3-086def4e07fe",
                    "version" : "d4606fb0-94e9-4d47-9330-ac06a1179c22",
                    "order" : 5,
                    "name" : "dateOfBirth",
                    "label" : "Date of Birth",
                    "type" : "date",
                    "default" : {
                      "years" : -18
                    },
                    "supplemental" : true,
                    "optional" : false
                  }, {
                    "id" : "77d8431d-82ef-40f9-9ea8-1f81f0f6edd3",
                    "risk_type" : "965ad495-a65c-401e-b7e3-086def4e07fe",
                    "version" : "d4606fb0-94e9-4d47-9330-ac06a1179c22",
                    "order" : 6,
                    "options" : [ {
                      "value" : "Female",
                      "label" : "Female",
                      "display_label" : "Female",
                      "name" : "gender_female"
                    }, {
                      "value" : "Male",
                      "label" : "Male",
                      "display_label" : "Male",
                      "name" : "gender_male"
                    } ],
                    "name" : "gender",
                    "label" : "Gender",
                    "type" : "enum",
                    "default" : "gender_female",
                    "supplemental" : true,
                    "optional" : false
                  }, {
                    "id" : "3c4955e1-39c1-4600-8378-064aef0bd12e",
                    "risk_type" : "965ad495-a65c-401e-b7e3-086def4e07fe",
                    "version" : "d4606fb0-94e9-4d47-9330-ac06a1179c22",
                    "order" : 7,
                    "name" : "married",
                    "label" : "Married",
                    "type" : "boolean",
                    "default" : "false",
                    "supplemental" : true,
                    "optional" : false
                  }, {
                    "id" : "b44494b8-1074-42b9-ad7f-e311eebdf43c",
                    "risk_type" : "965ad495-a65c-401e-b7e3-086def4e07fe",
                    "version" : "d4606fb0-94e9-4d47-9330-ac06a1179c22",
                    "order" : 10,
                    "options" : [ {
                      "value" : "AL - Alabama",
                      "label" : "AL - Alabama",
                      "display_label" : "AL - Alabama",
                      "name" : "licenseState_aLAlabama"
                    }, {
                      "value" : "AK - Alaska",
                      "label" : "AK - Alaska",
                      "display_label" : "AK - Alaska",
                      "name" : "licenseState_aKAlaska"
                    } ]
                  }, {
                    "id" : "ad13883c-c137-4eee-b370-7139ca473263",
                    "risk_type" : "965ad495-a65c-401e-b7e3-086def4e07fe",
                    "version" : "d4606fb0-94e9-4d47-9330-ac06a1179c22",
                    "order" : 17,
                    "name" : "goodGrades",
                    "label" : "Good Student",
                    "type" : "boolean",
                    "default" : false,
                    "supplemental" : true,
                    "optional" : false
                  }, {
                    "id" : "e925a4d8-3dc9-4f1b-9f67-3cf025ad8a65",
                    "risk_type" : "965ad495-a65c-401e-b7e3-086def4e07fe",
                    "version" : "d4606fb0-94e9-4d47-9330-ac06a1179c22",
                    "order" : 20,
                    "name" : "isNamedInsured",
                    "label" : "Named Insured",
                    "type" : "boolean",
                    "default" : false,
                    "supplemental" : true,
                    "optional" : false
                  }, {
                    "id" : "d846ccd0-dcb6-4306-a69c-1156d9f8876b",
                    "risk_type" : "965ad495-a65c-401e-b7e3-086def4e07fe",
                    "version" : "d4606fb0-94e9-4d47-9330-ac06a1179c22",
                    "order" : 21,
                    "calculation" : "pleasureFactor",
                    "name" : "pleasure",
                    "label" : "Pleasure",
                    "type" : "computed",
                    "supplemental" : false,
                    "optional" : false,
                    "calculation_name" : "pleasureComputedFieldCalculation"
                  } ]
                },
                "final_rate" : 3.0,
                "date_added" : "2019-08-19T23:24:57.138149+00:00",
                "date_modified" : "2019-08-19T23:25:23.159705+00:00"
              }
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "400" : {
            "description" : "Risk quote update failed on risk state validation.",
            "examples" : {
              "application/json" : {
                "errors" : {
                  "__all__" : [ {
                    "message" : "Risk state does not conform to risk state schema: 'field_answers' is a required property",
                    "code" : "required"
                  } ]
                }
              }
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "quote" ],
        "operationId" : "deleteRiskQuote",
        "parameters" : [ {
          "name" : "X-Disable-Rating-Engine",
          "in" : "header",
          "description" : "Header to skip running Rating engine for this call.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "risk_quote_id",
          "in" : "path",
          "description" : "Risk Quote ID.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "X-Disable-Rules-Engine",
          "in" : "header",
          "description" : "Header to skip running BriteRules engine for this call.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "Risk quote is successfully deleted.",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "options" : {
        "tags" : [ "CORS" ],
        "summary" : "CORS support",
        "description" : "Enable CORS by returning correct headers",
        "consumes" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Default response for CORS method",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "patch" : {
        "tags" : [ "quote" ],
        "operationId" : "partialUpdateRisk",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "RiskQuote",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RiskQuote"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "schema" : {
              "$ref" : "#/definitions/RiskQuote"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      }
    },
    "/quote/risks/{risk_quote_id}/fields" : {
      "options" : {
        "tags" : [ "CORS" ],
        "summary" : "CORS support",
        "description" : "Enable CORS by returning correct headers",
        "consumes" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Default response for CORS method",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "patch" : {
        "tags" : [ "quote" ],
        "description" : "Update field answers, run rules, rate and return the updated Risk.",
        "operationId" : "updateFieldAnswersRisk",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "risk_quote_id",
          "in" : "path",
          "description" : "Risk Quote ID.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "UpdateRiskQuoteFieldAnswers",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/UpdateRiskQuoteFieldAnswers"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Risk Quote field answers updated successfully.",
            "schema" : {
              "$ref" : "#/definitions/UpdateRiskQuote"
            },
            "examples" : {
              "application/json" : {
                "risk_state" : {
                  "id" : "590bb117-e323-4df5-9cc2-f07e908ae8c7",
                  "name" : "Jane",
                  "number" : 20,
                  "total_premium" : 0,
                  "type" : {
                    "id" : "965ad495-a65c-401e-b7e3-086def4e07fe",
                    "name" : "drivers",
                    "label" : "Driver"
                  },
                  "field_answers" : {
                    "driverNumber" : "21",
                    "firstName" : "Jane",
                    "dateOfBirth" : "2001-09-30",
                    "gender" : "gender_female",
                    "accidentPreventionCourseCompleted" : false,
                    "drivingSchool" : false
                  },
                  "field_overrides" : {
                    "actualPoints" : {
                      "read_only" : true
                    },
                    "goodGrades" : {
                      "visible" : true
                    },
                    "isNamedInsured" : {
                      "visible" : true
                    },
                    "accidentPreventionCourseCompleted" : {
                      "visible" : false
                    },
                    "drivingSchool" : {
                      "visible" : true
                    }
                  },
                  "calculations" : {
                    "driverAge" : 18,
                    "pleasureComputedFieldCalculation" : 2.9
                  },
                  "rate_tables" : {
                    "pleasureCode" : 8936,
                    "pleasureFactor" : 2.9
                  }
                }
              }
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "400" : {
            "description" : "Risk Quote field answers contain validation errors.",
            "examples" : {
              "application/json" : {
                "errors" : {
                  "vin" : [ {
                    "code" : "length_not_in_range",
                    "message" : "Length must be between 12 and 18."
                  } ],
                  "invalid_field" : [ {
                    "code" : "does_not_exist",
                    "message" : "Field 'invalid_field' does not exist."
                  } ]
                }
              }
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      }
    },
    "/quote/risks/{risk_quote_id}/fields/{risk_field_name}/validate-answer" : {
      "post" : {
        "tags" : [ "quote" ],
        "description" : "Validates Risk Field answer.",
        "operationId" : "validateRiskQuoteFieldAnswer",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "name" : "risk_field_name",
          "in" : "path",
          "description" : "Risk Field Reference Name.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "risk_quote_id",
          "in" : "path",
          "description" : "Risk Quote ID.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "RiskFieldAnswerValidator",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/RiskFieldAnswerValidator"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "API call was successful. Check the valid attribute in the response to determine if the Field answer is valid or not.",
            "examples" : {
              "application/json" : {
                "valid" : true
              }
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "options" : {
        "tags" : [ "CORS" ],
        "summary" : "CORS support",
        "description" : "Enable CORS by returning correct headers",
        "consumes" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Default response for CORS method",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      }
    },
    "/quote/risks/{risk_quote_id}/finalize" : {
      "post" : {
        "tags" : [ "quote" ],
        "description" : "Performs full validation on the Risk and sets its final rate.",
        "operationId" : "finalizeRiskQuote",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "risk_quote_id",
          "in" : "path",
          "description" : "Risk Quote ID.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Risk Quote validated successfully and final rate has been set.",
            "schema" : {
              "$ref" : "#/definitions/RiskQuote"
            },
            "examples" : {
              "application/json" : {
                "id" : "590bb117-e323-4df5-9cc2-f07e908ae8c7",
                "number" : 20,
                "risk_state" : {
                  "id" : "590bb117-e323-4df5-9cc2-f07e908ae8c7",
                  "name" : "Jane",
                  "number" : 20,
                  "total_premium" : 0,
                  "type" : {
                    "id" : "965ad495-a65c-401e-b7e3-086def4e07fe",
                    "name" : "drivers",
                    "label" : "Driver"
                  },
                  "field_answers" : {
                    "driverNumber" : "20",
                    "firstName" : "Jane",
                    "dateOfBirth" : "2001-09-30",
                    "gender" : "gender_female",
                    "married" : "false",
                    "accidentPreventionCourseCompleted" : false,
                    "drivingSchool" : false
                  },
                  "field_overrides" : {
                    "goodGrades" : {
                      "visible" : true
                    },
                    "isNamedInsured" : {
                      "visible" : true
                    }
                  },
                  "calculations" : {
                    "driverAge" : 18,
                    "pleasureComputedFieldCalculation" : 2.9
                  },
                  "rate_tables" : {
                    "pleasureCode" : 8936,
                    "pleasureFactor" : 2.9
                  }
                },
                "risk_type_state" : {
                  "id" : "965ad495-a65c-401e-b7e3-086def4e07fe",
                  "label" : "Driver",
                  "name" : "drivers",
                  "description" : "Driver",
                  "version" : "d4606fb0-94e9-4d47-9330-ac06a1179c22",
                  "line" : {
                    "id" : "6e7b578e-4dde-4872-8544-eaf9faa6c1a1",
                    "label" : "Personal Auto",
                    "name" : "PA",
                    "description" : "AMIC Personal Auto"
                  },
                  "fields" : [ {
                    "id" : "2bad206f-48db-472d-8806-ad9ee9f5aa1c",
                    "risk_type" : "965ad495-a65c-401e-b7e3-086def4e07fe",
                    "version" : "d4606fb0-94e9-4d47-9330-ac06a1179c22",
                    "order" : 0,
                    "name" : "driverNumber",
                    "label" : "Driver Number",
                    "type" : "string",
                    "supplemental" : false,
                    "optional" : false
                  }, {
                    "id" : "058e62c0-f8cb-411a-9752-d4cf17b7c0ce",
                    "risk_type" : "965ad495-a65c-401e-b7e3-086def4e07fe",
                    "version" : "d4606fb0-94e9-4d47-9330-ac06a1179c22",
                    "order" : 1,
                    "name" : "firstName",
                    "label" : "First Name",
                    "type" : "string",
                    "supplemental" : true,
                    "optional" : false
                  }, {
                    "id" : "ff4f524c-03c4-42ac-b5de-5248f8697eb2",
                    "risk_type" : "965ad495-a65c-401e-b7e3-086def4e07fe",
                    "version" : "d4606fb0-94e9-4d47-9330-ac06a1179c22",
                    "order" : 5,
                    "name" : "dateOfBirth",
                    "label" : "Date of Birth",
                    "type" : "date",
                    "default" : {
                      "years" : -18
                    },
                    "supplemental" : true,
                    "optional" : false
                  }, {
                    "id" : "77d8431d-82ef-40f9-9ea8-1f81f0f6edd3",
                    "risk_type" : "965ad495-a65c-401e-b7e3-086def4e07fe",
                    "version" : "d4606fb0-94e9-4d47-9330-ac06a1179c22",
                    "order" : 6,
                    "options" : [ {
                      "value" : "Female",
                      "label" : "Female",
                      "display_label" : "Female",
                      "name" : "gender_female"
                    }, {
                      "value" : "Male",
                      "label" : "Male",
                      "display_label" : "Male",
                      "name" : "gender_male"
                    } ],
                    "name" : "gender",
                    "label" : "Gender",
                    "type" : "enum",
                    "default" : "gender_female",
                    "supplemental" : true,
                    "optional" : false
                  }, {
                    "id" : "3c4955e1-39c1-4600-8378-064aef0bd12e",
                    "risk_type" : "965ad495-a65c-401e-b7e3-086def4e07fe",
                    "version" : "d4606fb0-94e9-4d47-9330-ac06a1179c22",
                    "order" : 7,
                    "name" : "married",
                    "label" : "Married",
                    "type" : "boolean",
                    "default" : "false",
                    "supplemental" : true,
                    "optional" : false
                  }, {
                    "id" : "b44494b8-1074-42b9-ad7f-e311eebdf43c",
                    "risk_type" : "965ad495-a65c-401e-b7e3-086def4e07fe",
                    "version" : "d4606fb0-94e9-4d47-9330-ac06a1179c22",
                    "order" : 10,
                    "options" : [ {
                      "value" : "AL - Alabama",
                      "label" : "AL - Alabama",
                      "display_label" : "AL - Alabama",
                      "name" : "licenseState_aLAlabama"
                    }, {
                      "value" : "AK - Alaska",
                      "label" : "AK - Alaska",
                      "display_label" : "AK - Alaska",
                      "name" : "licenseState_aKAlaska"
                    } ]
                  }, {
                    "id" : "ad13883c-c137-4eee-b370-7139ca473263",
                    "risk_type" : "965ad495-a65c-401e-b7e3-086def4e07fe",
                    "version" : "d4606fb0-94e9-4d47-9330-ac06a1179c22",
                    "order" : 17,
                    "name" : "goodGrades",
                    "label" : "Good Student",
                    "type" : "boolean",
                    "default" : false,
                    "supplemental" : true,
                    "optional" : false
                  }, {
                    "id" : "e925a4d8-3dc9-4f1b-9f67-3cf025ad8a65",
                    "risk_type" : "965ad495-a65c-401e-b7e3-086def4e07fe",
                    "version" : "d4606fb0-94e9-4d47-9330-ac06a1179c22",
                    "order" : 20,
                    "name" : "isNamedInsured",
                    "label" : "Named Insured",
                    "type" : "boolean",
                    "default" : false,
                    "supplemental" : true,
                    "optional" : false
                  }, {
                    "id" : "d846ccd0-dcb6-4306-a69c-1156d9f8876b",
                    "risk_type" : "965ad495-a65c-401e-b7e3-086def4e07fe",
                    "version" : "d4606fb0-94e9-4d47-9330-ac06a1179c22",
                    "order" : 21,
                    "calculation" : "pleasureFactor",
                    "name" : "pleasure",
                    "label" : "Pleasure",
                    "type" : "computed",
                    "supplemental" : false,
                    "optional" : false,
                    "calculation_name" : "pleasureComputedFieldCalculation"
                  } ]
                },
                "final_rate" : 3.0,
                "date_added" : "2019-08-19T23:24:57.138149+00:00",
                "date_modified" : "2019-08-19T23:25:23.159705+00:00"
              }
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "400" : {
            "description" : "Risk Quote contains validation errors.",
            "examples" : {
              "application/json" : {
                "driverName" : [ {
                  "code" : "required",
                  "message" : "This field is required."
                } ],
                "driversLicenseNumber" : [ {
                  "code" : "required",
                  "message" : "This field is required."
                } ]
              }
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "options" : {
        "tags" : [ "CORS" ],
        "summary" : "CORS support",
        "description" : "Enable CORS by returning correct headers",
        "consumes" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Default response for CORS method",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      }
    },
    "/quote/risks/{risk_quote_id}/validate" : {
      "get" : {
        "tags" : [ "quote" ],
        "description" : "Validates a Risk Quote. Does not validate child Risk Quotes.",
        "operationId" : "validateRiskQuote",
        "parameters" : [ {
          "name" : "risk_quote_id",
          "in" : "path",
          "description" : "Risk Quote ID.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "API call was successful. Check the valid attribute in the response to determine if the Risk Quote is valid or not.",
            "examples" : {
              "application/json" : {
                "valid" : false,
                "errors" : {
                  "overridePoints" : [ {
                    "message" : "This field is required.",
                    "code" : "required"
                  } ],
                  "vehiclePrimarilyDriven" : [ {
                    "message" : "This field is required.",
                    "code" : "required"
                  } ]
                }
              }
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "options" : {
        "tags" : [ "CORS" ],
        "summary" : "CORS support",
        "description" : "Enable CORS by returning correct headers",
        "consumes" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Default response for CORS method",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      }
    },
    "/quote/{quote_number}" : {
      "get" : {
        "tags" : [ "quote" ],
        "description" : "Get the details of a Quote.",
        "operationId" : "getQuote",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "quote_number",
          "in" : "path",
          "description" : "Quote number.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "The Quote is returned.",
            "schema" : {
              "$ref" : "#/definitions/Quote"
            },
            "examples" : {
              "application/json" : {
                "id" : "017398f5-9191-40e4-95a5-e900f884cdec",
                "quote_number" : "Q-PA-2018-106",
                "policy_state" : {
                  "policy" : {
                    "inception_date" : "2018-04-25"
                  },
                  "term" : {
                    "effective_date" : "2018-04-25",
                    "expiration_date" : "2019-04-25"
                  },
                  "revision" : {
                    "revision_date" : "2018-04-25",
                    "description" : "New Policy"
                  }
                },
                "root_risk_quote_id" : "50d61656-bf33-462d-bf02-9d3f6240e998",
                "product_name" : "personalAutoCW",
                "product_version" : "3d152ef4-9123-4ff2-b8d5-df9fb1c04ca0",
                "product_label" : "Personal Auto - Countrywide",
                "agency" : {
                  "id" : "e2cdc695-cfd4-4376-a8bb-5411ad4516ca"
                },
                "agents" : [ {
                  "id" : "327023a5-8fc7-4cd2-801e-45269df6d4a9"
                }, {
                  "id" : "7b6ee056-5861-4a1a-b4fc-345172b913e3"
                } ],
                "is_bound" : false
              }
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "options" : {
        "tags" : [ "CORS" ],
        "summary" : "CORS support",
        "description" : "Enable CORS by returning correct headers",
        "consumes" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Default response for CORS method",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      }
    },
    "/quote/{quote_number}/flow" : {
      "get" : {
        "tags" : [ "quote" ],
        "description" : "Returns a Quote Flow for a given Quote",
        "operationId" : "getQuoteFlow",
        "parameters" : [ {
          "name" : "quote_number",
          "in" : "path",
          "description" : "Quote number.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "A Quote Flow is returned.",
            "examples" : {
              "application/json" : {
                "version" : "1.0",
                "pageGroups" : [ {
                  "title" : "Setup",
                  "name" : "setup",
                  "pages" : [ {
                    "title" : "Policy Setup",
                    "name" : "policySetup",
                    "components" : [ {
                      "type" : "riskEdit",
                      "riskType" : "policy",
                      "fieldGroups" : [ {
                        "title" : "Setup",
                        "name" : "Setup",
                        "fields" : [ {
                          "name" : "uninsuredMotoristBodilyInjury"
                        }, {
                          "name" : "uninsuredMotoristPropertyDamage"
                        } ]
                      } ]
                    } ]
                  } ]
                }, {
                  "title" : "Drivers",
                  "name" : "drivers",
                  "pages" : [ {
                    "title" : "Drivers",
                    "name" : "setup",
                    "layout" : {
                      "type" : "standard"
                    },
                    "components" : [ {
                      "type" : "riskTable",
                      "name" : "driverTable",
                      "riskTypes" : [ "drivers" ],
                      "riskLabel" : "Driver",
                      "columns" : [ {
                        "name" : "driverName",
                        "header" : "Name"
                      }, {
                        "name" : "gender",
                        "header" : "Gender"
                      } ],
                      "actions" : [ {
                        "trigger" : "rowClick",
                        "type" : "showModal",
                        "components" : [ {
                          "type" : "riskEdit",
                          "riskType" : "drivers",
                          "fieldGroups" : [ {
                            "title" : "Personal Information",
                            "name" : "Personal Info",
                            "displayType" : "el-card",
                            "fields" : [ {
                              "name" : "driversLicenseNumber"
                            }, {
                              "name" : "driverName",
                              "label" : "Driver Name"
                            }, {
                              "name" : "dob"
                            }, {
                              "name" : "gender",
                              "widget" : {
                                "type" : "button-selection",
                                "size" : "lg"
                              }
                            } ]
                          } ]
                        } ]
                      }, {
                        "trigger" : "addNewClick",
                        "type" : "showModal",
                        "components" : [ {
                          "type" : "riskEdit",
                          "riskType" : "drivers",
                          "fieldGroups" : [ {
                            "title" : "Personal Information",
                            "name" : "Personal Info",
                            "displayType" : "el-card",
                            "fields" : [ {
                              "name" : "driversLicenseNumber"
                            }, {
                              "name" : "driverName",
                              "label" : "Driver Name"
                            }, {
                              "name" : "dob"
                            }, {
                              "name" : "gender",
                              "widget" : {
                                "type" : "button-selection",
                                "size" : "lg"
                              }
                            } ]
                          } ]
                        } ]
                      } ]
                    } ]
                  } ]
                } ]
              }
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "options" : {
        "tags" : [ "CORS" ],
        "summary" : "CORS support",
        "description" : "Enable CORS by returning correct headers",
        "consumes" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Default response for CORS method",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      }
    },
    "/quote/{quote_number}/risks" : {
      "get" : {
        "tags" : [ "quote" ],
        "description" : "The RiskQuote list is returned based on the `format` query parameter, which can be either `flat` or `hierarchical` (defaults to `hierarchical`).",
        "operationId" : "listRisk",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "quote_number",
          "in" : "path",
          "description" : "Quote number.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "format",
          "in" : "query",
          "description" : "The format used to display the Risk Quotes, either hierarchical or flat.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "A page number within the paginated result set.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "The RiskQuote list is returned.",
            "schema" : {
              "$ref" : "#/definitions/RiskQuote"
            },
            "examples" : {
              "application/json" : {
                "id" : "50d61656-bf33-462d-bf02-9d3f6240e998",
                "number" : 1,
                "risk_state" : {
                  "id" : "50d61656-bf33-462d-bf02-9d3f6240e998",
                  "name" : "Policy 1",
                  "number" : 1,
                  "total_premium" : 0,
                  "type" : {
                    "id" : "400162a1-a796-4fed-ab31-bea68ce69084",
                    "name" : "policy",
                    "label" : "Policy"
                  },
                  "field_answers" : {
                    "firstNameNI" : "John"
                  }
                },
                "risk_type_state" : {
                  "id" : "400162a1-a796-4fed-ab31-bea68ce69084",
                  "label" : "Policy",
                  "name" : "policy",
                  "version" : "d50fa993-d8c1-4be8-b0ef-bc594f4c2c3e",
                  "line" : {
                    "id" : "3fc5a303-2fa3-4418-918a-69f01e357654",
                    "label" : "Personal Auto",
                    "name" : "PA",
                    "description" : "AMIC Personal Auto"
                  },
                  "fields" : [ {
                    "id" : "7b6e1fdb-6d1b-4f6b-8842-8fbb1e7dfed3",
                    "risk_type" : "400162a1-a796-4fed-ab31-bea68ce69084",
                    "version" : "d50fa993-d8c1-4be8-b0ef-bc594f4c2c3e",
                    "order" : 0,
                    "validators" : [ {
                      "name" : "length_range",
                      "params" : {
                        "min_value" : "1"
                      }
                    } ],
                    "name" : "firstNameNI",
                    "label" : "First Name of Named Insured",
                    "type" : "string",
                    "supplemental" : true
                  } ]
                },
                "final_rate" : 0.0,
                "date_added" : "2019-08-19T23:24:57.138149+00:00",
                "date_modified" : "2019-08-19T23:25:23.159705+00:00",
                "risk_quotes" : [ {
                  "id" : "6850925e-d694-45f7-a630-4125d772058a",
                  "number" : 1,
                  "risk_state" : {
                    "id" : "6850925e-d694-45f7-a630-4125d772058a",
                    "name" : "Driver 1",
                    "number" : 1,
                    "total_premium" : 0,
                    "type" : {
                      "id" : "89fb61a9-7592-40c0-8768-e12e3d99ae3b",
                      "name" : "drivers",
                      "label" : "Driver"
                    },
                    "field_answers" : {
                      "firstName" : "John"
                    }
                  },
                  "risk_type_state" : {
                    "id" : "89fb61a9-7592-40c0-8768-e12e3d99ae3b",
                    "label" : "Driver",
                    "name" : "drivers",
                    "description" : "Driver",
                    "version" : "d50fa993-d8c1-4be8-b0ef-bc594f4c2c3e",
                    "line" : {
                      "id" : "3fc5a303-2fa3-4418-918a-69f01e357654",
                      "label" : "Personal Auto",
                      "name" : "PA",
                      "description" : "AMIC Personal Auto"
                    },
                    "fields" : [ {
                      "id" : "26bd787e-4feb-462d-a7cb-1aa0e7dd67b0",
                      "risk_type" : "89fb61a9-7592-40c0-8768-e12e3d99ae3b",
                      "version" : "d50fa993-d8c1-4be8-b0ef-bc594f4c2c3e",
                      "order" : 0,
                      "validators" : [ {
                        "name" : "length_range",
                        "params" : {
                          "min_value" : "1"
                        }
                      } ],
                      "name" : "firstName",
                      "label" : "First Name",
                      "type" : "string",
                      "supplemental" : true
                    } ]
                  },
                  "final_rate" : 0.0,
                  "date_added" : "2019-08-19T23:24:57.138149+00:00",
                  "date_modified" : "2019-08-19T23:25:23.159705+00:00"
                } ]
              }
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "options" : {
        "tags" : [ "CORS" ],
        "summary" : "CORS support",
        "description" : "Enable CORS by returning correct headers",
        "consumes" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Default response for CORS method",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      }
    },
    "/quote/{quote_number}/submit" : {
      "post" : {
        "tags" : [ "quote" ],
        "description" : "Submits a Quote and creates a new Policy from it.",
        "operationId" : "submitQuote",
        "parameters" : [ {
          "name" : "quote_number",
          "in" : "path",
          "description" : "Quote number.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "201" : {
            "description" : "Quote submitted successfully. The new Policy is returned.",
            "examples" : {
              "application/json" : {
                "id" : "fbd677cc-473d-4c6a-8c85-bf9f7debb5e4",
                "number" : "P-2019-1",
                "inception_date" : "2019-09-05",
                "external_id" : "4d62fef0-cc80-4eaa-99fc-8177d623a9e6",
                "revision_id" : "e5c66959-92de-4cc4-8d95-f5770db8d1b5"
              }
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          },
          "400" : {
            "description" : "This quote has already been submitted.",
            "examples" : {
              "application/json" : {
                "errors" : {
                  "__all__" : [ {
                    "code" : "policy_already_exists",
                    "message" : "This quote has already been submitted."
                  } ]
                }
              }
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "options" : {
        "tags" : [ "CORS" ],
        "summary" : "CORS support",
        "description" : "Enable CORS by returning correct headers",
        "consumes" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Default response for CORS method",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      }
    },
    "/rating/compile-calculation" : {
      "post" : {
        "tags" : [ "rating" ],
        "description" : "Compiles calculation.",
        "operationId" : "compileCalculation",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "MODELc1afb8",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/MODELc1afb8"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Compiled calculation data.",
            "examples" : {
              "application/json" : {
                "calculation" : "mileage * 42",
                "code" : "gANjZGlsbC5kaWxsCl9sb2FkX3R5cGUKcQBYCAAAAENvZGVUeXBlcQGFcQJScQMoSwBLAEsASwRLQEMSZQBlAWUCZACDAmQBgwEUAFMAcQRYBwAAAERlY2ltYWxxBVgCAAAANDJxBoZxB1gHAAAAbWlsZWFnZXEIWAkAAABfZ2V0YXR0cl9xCVgHAAAAZGVjaW1hbHEKh3ELKVgIAAAAPHN0cmluZz5xDFgIAAAAPG1vZHVsZT5xDUsBQwBxDikpdHEPUnEQLg==",
                "references" : {
                  "current" : [ "mileage", "decimal" ]
                }
              }
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "options" : {
        "tags" : [ "CORS" ],
        "summary" : "CORS support",
        "description" : "Enable CORS by returning correct headers",
        "consumes" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Default response for CORS method",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      }
    },
    "/rating/evaluate-computed-fields" : {
      "post" : {
        "tags" : [ "rating" ],
        "description" : "Rates Risk State.",
        "operationId" : "rateRiskState",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Rating-Debug",
          "in" : "header",
          "description" : "Flag to get rating resolved and unresolved references.",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "MODEL3af1cf",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/MODEL3af1cf"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Rated Risk State.",
            "examples" : {
              "application/json" : {
                "name" : "Vehicle 1",
                "number" : 1,
                "total_premium" : 398.65,
                "type" : {
                  "id" : "4106270d-929f-41ab-88e5-ab3f2af0c888",
                  "name" : "vehicles",
                  "label" : "Vehicle"
                },
                "items" : {
                  "bodilyInjury" : {
                    "premium" : 0.0
                  },
                  "propertyDamage" : {
                    "premium" : 0.0
                  },
                  "uninsuredMotorist" : {
                    "premium" : 398.65,
                    "meta" : {
                      "resolved_refs" : [ {
                        "reference" : "baseRate",
                        "value" : 35.0
                      }, {
                        "reference" : "uninsuredMotoristBiTable",
                        "value" : 6.7
                      }, {
                        "reference" : "uninsuredMotoristPdTable",
                        "value" : 1.7
                      } ]
                    }
                  },
                  "medicalExpense" : {
                    "premium" : 0.0
                  }
                },
                "field_answers" : {
                  "bodilyInjuryLimit" : "bodilyInjuryLimit_50000100000",
                  "includeAntiLockBrakes" : true,
                  "propertyDamageLimit" : "propertyDamageLimit_250000",
                  "medicalExpenseLimit" : "medicalExpenseLimit_2000",
                  "driverAge" : "25"
                },
                "id" : "c76e8271-a3ce-476d-943f-ea4023362b8a"
              }
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "options" : {
        "tags" : [ "CORS" ],
        "summary" : "CORS support",
        "description" : "Enable CORS by returning correct headers",
        "consumes" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Default response for CORS method",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      }
    },
    "/rating/rate" : {
      "post" : {
        "tags" : [ "rating" ],
        "description" : "Rates Risk State.",
        "operationId" : "rateRiskState",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Rating-Debug",
          "in" : "header",
          "description" : "Flag to get rating resolved and unresolved references.",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "MODEL45fe1d",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/MODEL45fe1d"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Rated Risk State.",
            "examples" : {
              "application/json" : {
                "name" : "Vehicle 1",
                "number" : 1,
                "total_premium" : 398.65,
                "type" : {
                  "id" : "4106270d-929f-41ab-88e5-ab3f2af0c888",
                  "name" : "vehicles",
                  "label" : "Vehicle"
                },
                "items" : {
                  "bodilyInjury" : {
                    "premium" : 0.0
                  },
                  "propertyDamage" : {
                    "premium" : 0.0
                  },
                  "uninsuredMotorist" : {
                    "premium" : 398.65,
                    "meta" : {
                      "resolved_refs" : [ {
                        "reference" : "baseRate",
                        "value" : 35.0
                      }, {
                        "reference" : "uninsuredMotoristBiTable",
                        "value" : 6.7
                      }, {
                        "reference" : "uninsuredMotoristPdTable",
                        "value" : 1.7
                      } ]
                    }
                  },
                  "medicalExpense" : {
                    "premium" : 0.0
                  }
                },
                "field_answers" : {
                  "bodilyInjuryLimit" : "bodilyInjuryLimit_50000100000",
                  "includeAntiLockBrakes" : true,
                  "propertyDamageLimit" : "propertyDamageLimit_250000",
                  "medicalExpenseLimit" : "medicalExpenseLimit_2000",
                  "driverAge" : "25"
                },
                "id" : "c76e8271-a3ce-476d-943f-ea4023362b8a"
              }
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "options" : {
        "tags" : [ "CORS" ],
        "summary" : "CORS support",
        "description" : "Enable CORS by returning correct headers",
        "consumes" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Default response for CORS method",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      }
    },
    "/rating/rate-quote" : {
      "post" : {
        "tags" : [ "rating" ],
        "description" : "Rates an entire Quote, including its children.",
        "operationId" : "rateQuote",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Rating-Debug",
          "in" : "header",
          "description" : "Flag to get rating resolved and unresolved references.",
          "required" : false,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "MODELfc9087",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/MODELfc9087"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Rated Quote.",
            "examples" : {
              "application/json" : {
                "id" : "d8241bc6-62ab-4758-bfbb-1fbcdf60bc9e",
                "name" : "Policy 1",
                "number" : 1,
                "total_premium" : 0,
                "type" : {
                  "id" : "400162a1-a796-4fed-ab31-bea68ce69084",
                  "name" : "policy",
                  "label" : "Policy"
                },
                "field_answers" : {
                  "firstNameNI" : "John",
                  "lastNameNI" : "Doe",
                  "socialSecurityNumberNI" : "123-45-6789",
                  "dateOfBirthNI" : "1980-01-10",
                  "licenseNumberNI" : "1234567898",
                  "licenseStateNI" : "VA - Virginia",
                  "streetAddressNI" : "1234 Fake St.",
                  "cityNI" : "Fake City",
                  "stateOfNI" : "VA - Virginia",
                  "zipCodeNI" : "13231",
                  "emailNI" : "foobar@email.com",
                  "insuranceScoreNI" : "22",
                  "securityFreeze" : false,
                  "otherPolicy" : "None",
                  "otherAmicAutoPolicy" : true,
                  "uber" : false,
                  "rentedToOthers" : false,
                  "deliveryUse" : false,
                  "licenseSuspended" : false,
                  "financialFilings" : false,
                  "coverageDeclinedInThree" : false,
                  "notSolelyOwned" : false,
                  "otherLosses" : false,
                  "modified" : false,
                  "damage" : false,
                  "loanedToOthers" : false,
                  "parkedElsewhere" : false,
                  "atSchool" : false,
                  "otherAutoInsurance" : false,
                  "military" : false,
                  "impairment" : false,
                  "nonDriverResident" : false
                },
                "field_overrides" : {
                  "otherPolicyNumberId" : {
                    "visible" : false
                  }
                },
                "children" : [ {
                  "id" : "a2ca7e78-6d65-4dd1-9585-cfddb653a16c",
                  "name" : "John Doe",
                  "number" : 1,
                  "total_premium" : 0,
                  "type" : {
                    "id" : "89fb61a9-7592-40c0-8768-e12e3d99ae3b",
                    "name" : "drivers",
                    "label" : "Driver"
                  },
                  "field_answers" : {
                    "firstName" : "John",
                    "lastName" : "Doe",
                    "dateOfBirth" : "1980-01-10",
                    "gender" : "Female",
                    "married" : true,
                    "socialSecurityNumber" : "123-45-6789",
                    "licenseNumber" : "1234567889",
                    "licenseState" : "VA - Virginia",
                    "dateLicensed" : "1998-10-10",
                    "governmentEmployee" : false,
                    "actualPoints" : "0",
                    "accidentPreventionCourseCompleted" : false,
                    "drivingSchool" : false,
                    "goodGrades" : false,
                    "mvrMismatch" : false,
                    "deceased" : false
                  },
                  "field_overrides" : {
                    "vehiclePrimarilyDriven" : {
                      "visible" : true
                    },
                    "actualPoints" : {
                      "read_only" : true
                    },
                    "accidentPreventionCourseCompleted" : {
                      "visible" : true
                    },
                    "drivingSchool" : {
                      "visible" : false
                    },
                    "goodGrades" : {
                      "visible" : false
                    }
                  }
                }, {
                  "id" : "82da2cf2-f588-4d4f-bb67-b632f2110761",
                  "name" : "2000 Prowler Nightowl",
                  "number" : 1,
                  "total_premium" : 197,
                  "type" : {
                    "id" : "7c0993cb-f06a-4fed-b72c-45419028d08a",
                    "name" : "trailersOrCampers",
                    "label" : "Recreational Trailer or Camper Body"
                  },
                  "items" : {
                    "comprehensive" : {
                      "premium" : 40,
                      "deductible" : "$100"
                    },
                    "collision" : {
                      "premium" : 157,
                      "deductible" : "$250"
                    }
                  },
                  "field_answers" : {
                    "serialVin" : "123456789521245789",
                    "modelYear" : "2000",
                    "make" : "Prowler",
                    "model" : "Nightowl",
                    "garagingAddress" : "3236 Fake St.",
                    "garagingTown" : "Foobar",
                    "garagingState" : "VA - Virginia",
                    "zipCode5DigitsOnly" : "23422",
                    "program" : "Standard",
                    "valueOfTrailer" : 10000,
                    "comprehensiveSymbol" : "1",
                    "comprehensiveDeductible" : "$100",
                    "collisionSymbol" : "1",
                    "collisionDeductible" : "$250"
                  },
                  "field_overrides" : {
                    "loanNumber" : {
                      "visible" : false
                    }
                  },
                  "calculations" : {
                    "motorHomeCCFactor" : 0.5,
                    "primaryDriverFactor" : 1,
                    "secondaryDriverFactor" : 0,
                    "termFactor" : 1,
                    "colValue" : 0,
                    "compValue" : 0,
                    "modelAge" : 19,
                    "colAddlBase" : 0,
                    "compAddlBase" : 0
                  },
                  "rate_tables" : {
                    "collisionDeductibleFactor" : 0.98,
                    "collisionSymbolFactor" : 0.88,
                    "comprehensiveDeductibleFactor" : 1,
                    "comprehensiveSymbolFactor" : 0.78,
                    "territoryAssignment" : 20,
                    "collisionBaseRate" : 338,
                    "collisionTierFactor" : 1,
                    "comprehensiveBaseRate" : 96,
                    "comprehensiveTierFactor" : 1,
                    "vehicleAgeFactor" : 0.45
                  }
                } ],
                "rate_tables" : {
                  "insuranceRelativityFactor" : 2.4
                }
              }
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "options" : {
        "tags" : [ "CORS" ],
        "summary" : "CORS support",
        "description" : "Enable CORS by returning correct headers",
        "consumes" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Default response for CORS method",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      }
    },
    "/rating/reserved-names" : {
      "get" : {
        "tags" : [ "rating" ],
        "description" : "Returns a list of names reserved by rating engine.",
        "operationId" : "listReservedNames",
        "responses" : {
          "200" : {
            "description" : "List of names reserved by rating engine.",
            "examples" : {
              "application/json" : [ "bc", "Q", "items", "field_answers", "total_premium", "calculations", "decimal", "None", "False", "True", "abs", "bool", "callable", "chr", "complex", "divmod", "float", "hash", "hex", "id", "int", "isinstance", "issubclass", "len", "oct", "ord", "pow", "range", "repr", "round", "slice", "str", "tuple", "zip", "__build_class__", "ArithmeticError", "AssertionError", "AttributeError", "BaseException", "BufferError", "BytesWarning", "DeprecationWarning", "EOFError", "EnvironmentError", "Exception", "FloatingPointError", "FutureWarning", "GeneratorExit", "IOError", "ImportError", "ImportWarning", "IndentationError", "IndexError", "KeyError", "KeyboardInterrupt", "LookupError", "MemoryError", "NameError", "NotImplementedError", "OSError", "OverflowError", "PendingDeprecationWarning", "ReferenceError", "RuntimeError", "RuntimeWarning", "StopIteration", "SyntaxError", "SyntaxWarning", "SystemError", "SystemExit", "TabError", "TypeError", "UnboundLocalError", "UnicodeDecodeError", "UnicodeEncodeError", "UnicodeError", "UnicodeTranslateError", "UnicodeWarning", "UserWarning", "ValueError", "Warning", "ZeroDivisionError", "setattr", "delattr", "_getattr_" ]
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "options" : {
        "tags" : [ "CORS" ],
        "summary" : "CORS support",
        "description" : "Enable CORS by returning correct headers",
        "consumes" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Default response for CORS method",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      }
    },
    "/rating/utilities-references" : {
      "get" : {
        "tags" : [ "rating" ],
        "description" : "Returns a list of available rating utilities.",
        "operationId" : "listUtilitiesReferences",
        "responses" : {
          "200" : {
            "description" : "List of available rating utilities.",
            "examples" : {
              "application/json" : [ {
                "name" : "bc.FIVE_DECIMALS",
                "label" : "bc.FIVE_DECIMALS",
                "type" : "Utility",
                "display" : "Utility"
              }, {
                "name" : "bc.FOUR_DECIMALS",
                "label" : "bc.FOUR_DECIMALS",
                "type" : "Utility",
                "display" : "Utility"
              }, {
                "name" : "bc.NEAREST_HUNDRED",
                "label" : "bc.NEAREST_HUNDRED",
                "type" : "Utility",
                "display" : "Utility"
              }, {
                "name" : "bc.NEAREST_ONE",
                "label" : "bc.NEAREST_ONE",
                "type" : "Utility",
                "display" : "Utility"
              }, {
                "name" : "bc.NEAREST_TEN",
                "label" : "bc.NEAREST_TEN",
                "type" : "Utility",
                "display" : "Utility"
              }, {
                "name" : "bc.NEAREST_THOUSAND",
                "label" : "bc.NEAREST_THOUSAND",
                "type" : "Utility",
                "display" : "Utility"
              }, {
                "name" : "bc.ONE_DECIMAL",
                "label" : "bc.ONE_DECIMAL",
                "type" : "Utility",
                "display" : "Utility"
              }, {
                "name" : "bc.ROUND_CEILING",
                "label" : "bc.ROUND_CEILING",
                "type" : "Utility",
                "display" : "Utility"
              }, {
                "name" : "bc.ROUND_DOWN",
                "label" : "bc.ROUND_DOWN",
                "type" : "Utility",
                "display" : "Utility"
              }, {
                "name" : "bc.ROUND_FLOOR",
                "label" : "bc.ROUND_FLOOR",
                "type" : "Utility",
                "display" : "Utility"
              }, {
                "name" : "bc.ROUND_HALF_UP",
                "label" : "bc.ROUND_HALF_UP",
                "type" : "Utility",
                "display" : "Utility"
              }, {
                "name" : "bc.ROUND_UP",
                "label" : "bc.ROUND_UP",
                "type" : "Utility",
                "display" : "Utility"
              }, {
                "name" : "bc.THREE_DECIMALS",
                "label" : "bc.THREE_DECIMALS",
                "type" : "Utility",
                "display" : "Utility"
              }, {
                "name" : "bc.TWO_DECIMALS",
                "label" : "bc.TWO_DECIMALS",
                "type" : "Utility",
                "display" : "Utility"
              }, {
                "name" : "bc.age",
                "label" : "bc.age",
                "type" : "Utility",
                "display" : "Utility",
                "doc" : "Calculates age based on the `date_value` by subtracting it from the rating date.\n\n### Parameters\n\n* `date_value` (date or number)\n    * The date to determine an age for. If it is a number then we assume it is a year.\n\n### Usage\n\n```python\nbc.age(date_value)\n```\n\n### Returns\n\nA number representing the age in years"
              }, {
                "name" : "bc.condition",
                "label" : "bc.condition",
                "type" : "Utility",
                "display" : "Utility",
                "doc" : "Based on a given boolean value, returns a `true_result` or a `false_result`.\n\n### Parameters\n\n* `bool_value` (boolean)\n    * The boolean value to evaluate\n* `true_result`\n    * What should be returned if `bool_value` is true.\n* `false_result`\n    * What should be returned if `bool_value` is false.\n\n### Usage\n\n```python\nbc.condition(bool_value, true_result, false_result)\n```\n\n### Examples\n\n```python\nbc.condition(otherPolicy, 1, 0)\n```"
              }, {
                "name" : "bc.if_item",
                "label" : "bc.if_item",
                "type" : "Utility",
                "display" : "Utility",
                "doc" : "Returns the `true_result` if an Item has been added to the current risk,\notherwise returns the `false_result`.\n\n### Parameters\n\n* `item_name` (string)\n    The name of the Item\n* `true_result`\n    The result to return if the Item has been added to the risk\n* `false_result`\n    The result to return if the Item has not been added to the risk\n\n### Usage\n\n```python\nbc.if_item(item_name, true_result, false_result)\n```\n\n### Examples\n\n```python\nbc.if_item('bodilyInjury', 100.0, 50.0)\n```"
              }, {
                "name" : "bc.max",
                "label" : "bc.max",
                "type" : "Utility",
                "display" : "Utility",
                "doc" : "Returns the maximum value from the given numbers.\n\n### Examples\n\n```python\nbc.max(numberField, otherNumberField)\n```\n\n```python\nbc.max(baseRateTable, otherCalculation)\n```\n\n```python\nbc.max(bodilyInjuryCoverage.premium, physicalDamageCoverage.premium)\n```"
              }, {
                "name" : "bc.min",
                "label" : "bc.min",
                "type" : "Utility",
                "display" : "Utility",
                "doc" : "Returns the minimum value from the given numbers.\n\n### Examples\n\n```python\nbc.min(numberField, otherNumberField)\n```\n\n```python\nbc.min(baseRateTable, otherCalculation)\n```\n\n```python\nbc.min(bodilyInjuryCoverage.premium, physicalDamageCoverage.premium)\n```"
              }, {
                "name" : "bc.optional",
                "label" : "bc.optional",
                "type" : "Utility",
                "display" : "Utility",
                "doc" : "Marks a reference as optional. If the reference can not be resolved then the\ndefault value is used instead.\n\n### Usage\n\n```python\nbc.optional(value, default=default_value)\n```\n\n### Examples\n\n```python\nbc.optional(myOptionalField, default=0.0)\n```"
              }, {
                "name" : "bc.policyEffectiveDate",
                "label" : "bc.policyEffectiveDate",
                "type" : "Utility",
                "display" : "Utility"
              }, {
                "name" : "bc.policyInceptionDate",
                "label" : "bc.policyInceptionDate",
                "type" : "Utility",
                "display" : "Utility"
              }, {
                "name" : "bc.round",
                "label" : "bc.round",
                "type" : "Utility",
                "display" : "Utility",
                "doc" : "Rounds a number to a given decimal place using a given rounding method.\n\n### Parameters\n\n* `value` (number)\n    * The number to round\n* `round_to` (optional, defaults to TWO_DECIMALS)\n    * The digit that the value should be rounded to. Possible values are\n    `ONE_DECIMAL`, `TWO_DECIMALS`, `THREE_DECIMALS`, `FOUR_DECIMALS`, and\n    `FIVE_DECIMALS`.\n* `round_method` (optional, defaults to ROUND_HALF_UP)\n    * The method to use when rounding. Possible values are `ROUND_UP`,\n    `ROUND_DOWN`, `ROUND_CEILING`, `ROUND_FLOOR`, `ROUND_HALF_UP`.\n\n### Usage\n\n```python\nbc.round(value, round_to, round_method)\n```\n\n### Examples\n\n```python\nbc.round(numberField, 2)\n```\n\n```python\nbc.round(numberField, round_to=NEAREST_HUNDRED, round_method=ROUND_UP)\n```"
              }, {
                "name" : "bc.risk",
                "label" : "bc.risk",
                "type" : "Utility",
                "display" : "Utility",
                "meta" : {
                  "utilities" : [ {
                    "name" : "get",
                    "label" : "get",
                    "type" : "Utility",
                    "display" : "Utility"
                  }, {
                    "name" : "number",
                    "label" : "number",
                    "type" : "Utility",
                    "display" : "Utility"
                  }, {
                    "name" : "total_premium",
                    "label" : "total_premium",
                    "type" : "Utility",
                    "display" : "Utility"
                  }, {
                    "name" : "descendants",
                    "label" : "descendants",
                    "type" : "Utility",
                    "display" : "Utility",
                    "meta" : {
                      "utilities" : [ {
                        "name" : "avg",
                        "label" : "avg",
                        "type" : "Utility",
                        "display" : "Utility"
                      }, {
                        "name" : "count",
                        "label" : "count",
                        "type" : "Utility",
                        "display" : "Utility"
                      }, {
                        "name" : "exists",
                        "label" : "exists",
                        "type" : "Utility",
                        "display" : "Utility"
                      }, {
                        "name" : "filter",
                        "label" : "filter",
                        "type" : "Utility",
                        "display" : "Utility"
                      }, {
                        "name" : "max",
                        "label" : "max",
                        "type" : "Utility",
                        "display" : "Utility"
                      }, {
                        "name" : "min",
                        "label" : "min",
                        "type" : "Utility",
                        "display" : "Utility"
                      }, {
                        "name" : "sum",
                        "label" : "sum",
                        "type" : "Utility",
                        "display" : "Utility"
                      } ]
                    }
                  }, {
                    "name" : "descendants_up_to",
                    "label" : "descendants_up_to",
                    "type" : "Utility",
                    "display" : "Utility",
                    "meta" : {
                      "utilities" : [ {
                        "name" : "avg",
                        "label" : "avg",
                        "type" : "Utility",
                        "display" : "Utility"
                      }, {
                        "name" : "count",
                        "label" : "count",
                        "type" : "Utility",
                        "display" : "Utility"
                      }, {
                        "name" : "exists",
                        "label" : "exists",
                        "type" : "Utility",
                        "display" : "Utility"
                      }, {
                        "name" : "filter",
                        "label" : "filter",
                        "type" : "Utility",
                        "display" : "Utility"
                      }, {
                        "name" : "max",
                        "label" : "max",
                        "type" : "Utility",
                        "display" : "Utility"
                      }, {
                        "name" : "min",
                        "label" : "min",
                        "type" : "Utility",
                        "display" : "Utility"
                      }, {
                        "name" : "sum",
                        "label" : "sum",
                        "type" : "Utility",
                        "display" : "Utility"
                      } ]
                    }
                  }, {
                    "name" : "all_descendants",
                    "label" : "all_descendants",
                    "type" : "Utility",
                    "display" : "Utility",
                    "meta" : {
                      "utilities" : [ {
                        "name" : "avg",
                        "label" : "avg",
                        "type" : "Utility",
                        "display" : "Utility"
                      }, {
                        "name" : "count",
                        "label" : "count",
                        "type" : "Utility",
                        "display" : "Utility"
                      }, {
                        "name" : "exists",
                        "label" : "exists",
                        "type" : "Utility",
                        "display" : "Utility"
                      }, {
                        "name" : "filter",
                        "label" : "filter",
                        "type" : "Utility",
                        "display" : "Utility"
                      }, {
                        "name" : "max",
                        "label" : "max",
                        "type" : "Utility",
                        "display" : "Utility"
                      }, {
                        "name" : "min",
                        "label" : "min",
                        "type" : "Utility",
                        "display" : "Utility"
                      }, {
                        "name" : "sum",
                        "label" : "sum",
                        "type" : "Utility",
                        "display" : "Utility"
                      } ]
                    }
                  }, {
                    "name" : "children",
                    "label" : "children",
                    "type" : "Utility",
                    "display" : "Utility",
                    "meta" : {
                      "utilities" : [ {
                        "name" : "avg",
                        "label" : "avg",
                        "type" : "Utility",
                        "display" : "Utility"
                      }, {
                        "name" : "count",
                        "label" : "count",
                        "type" : "Utility",
                        "display" : "Utility"
                      }, {
                        "name" : "exists",
                        "label" : "exists",
                        "type" : "Utility",
                        "display" : "Utility"
                      }, {
                        "name" : "filter",
                        "label" : "filter",
                        "type" : "Utility",
                        "display" : "Utility"
                      }, {
                        "name" : "max",
                        "label" : "max",
                        "type" : "Utility",
                        "display" : "Utility"
                      }, {
                        "name" : "min",
                        "label" : "min",
                        "type" : "Utility",
                        "display" : "Utility"
                      }, {
                        "name" : "sum",
                        "label" : "sum",
                        "type" : "Utility",
                        "display" : "Utility"
                      } ]
                    }
                  }, {
                    "name" : "grandchildren",
                    "label" : "grandchildren",
                    "type" : "Utility",
                    "display" : "Utility",
                    "meta" : {
                      "utilities" : [ {
                        "name" : "avg",
                        "label" : "avg",
                        "type" : "Utility",
                        "display" : "Utility"
                      }, {
                        "name" : "count",
                        "label" : "count",
                        "type" : "Utility",
                        "display" : "Utility"
                      }, {
                        "name" : "exists",
                        "label" : "exists",
                        "type" : "Utility",
                        "display" : "Utility"
                      }, {
                        "name" : "filter",
                        "label" : "filter",
                        "type" : "Utility",
                        "display" : "Utility"
                      }, {
                        "name" : "max",
                        "label" : "max",
                        "type" : "Utility",
                        "display" : "Utility"
                      }, {
                        "name" : "min",
                        "label" : "min",
                        "type" : "Utility",
                        "display" : "Utility"
                      }, {
                        "name" : "sum",
                        "label" : "sum",
                        "type" : "Utility",
                        "display" : "Utility"
                      } ]
                    }
                  }, {
                    "name" : "great_grandchildren",
                    "label" : "great_grandchildren",
                    "type" : "Utility",
                    "display" : "Utility",
                    "meta" : {
                      "utilities" : [ {
                        "name" : "avg",
                        "label" : "avg",
                        "type" : "Utility",
                        "display" : "Utility"
                      }, {
                        "name" : "count",
                        "label" : "count",
                        "type" : "Utility",
                        "display" : "Utility"
                      }, {
                        "name" : "exists",
                        "label" : "exists",
                        "type" : "Utility",
                        "display" : "Utility"
                      }, {
                        "name" : "filter",
                        "label" : "filter",
                        "type" : "Utility",
                        "display" : "Utility"
                      }, {
                        "name" : "max",
                        "label" : "max",
                        "type" : "Utility",
                        "display" : "Utility"
                      }, {
                        "name" : "min",
                        "label" : "min",
                        "type" : "Utility",
                        "display" : "Utility"
                      }, {
                        "name" : "sum",
                        "label" : "sum",
                        "type" : "Utility",
                        "display" : "Utility"
                      } ]
                    }
                  } ]
                }
              } ]
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "options" : {
        "tags" : [ "CORS" ],
        "summary" : "CORS support",
        "description" : "Enable CORS by returning correct headers",
        "consumes" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Default response for CORS method",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      }
    },
    "/rules/executor/{proxy+}" : {
      "x-amazon-apigateway-any-method" : {
        "parameters" : [ {
          "name" : "proxy",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : { }
      }
    },
    "/rules/validate" : {
      "post" : {
        "description" : "Creates a line.",
        "operationId" : "createLine",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "ProjectDescriptor",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ProjectDescriptor"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "200 response",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "options" : {
        "tags" : [ "CORS" ],
        "summary" : "CORS support",
        "description" : "Enable CORS by returning correct headers",
        "consumes" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Default response for CORS method",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      }
    },
    "/rules/{proxy+}" : {
      "x-amazon-apigateway-any-method" : {
        "parameters" : [ {
          "name" : "proxy",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : { }
      }
    },
    "/user-management/groups" : {
      "get" : {
        "tags" : [ "user-management" ],
        "summary" : "Returns the list of groups configured in the system.",
        "operationId" : "listGroups",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "cursor",
          "in" : "query",
          "description" : "Pagination cursor",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Maximum items to be returned in a page",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/MODELc9c094"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "user-management" ],
        "summary" : "Creates a single group, specified by name and description in post body.",
        "operationId" : "createGroup",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "MODEL90b826",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/MODEL90b826"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "created",
            "schema" : {
              "$ref" : "#/definitions/Group"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "options" : {
        "tags" : [ "CORS" ],
        "summary" : "CORS support",
        "description" : "Enable CORS by returning correct headers",
        "consumes" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Default response for CORS method",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      }
    },
    "/user-management/groups/{group}" : {
      "get" : {
        "tags" : [ "user-management" ],
        "summary" : "Returns data for a single group, specified by name.",
        "operationId" : "getGroup",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "group",
          "in" : "path",
          "description" : "The specified group's name",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/Group"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "user-management" ],
        "summary" : "Updates a single group, specified by description in post body.",
        "operationId" : "updateGroup",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "name" : "group",
          "in" : "path",
          "description" : "The group's name to be updated",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "MODEL15f797",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/MODEL15f797"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "user-management" ],
        "summary" : "Delete a single group, specified by name.",
        "operationId" : "deleteGroup",
        "parameters" : [ {
          "name" : "group",
          "in" : "path",
          "description" : "The specified group's name",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "options" : {
        "tags" : [ "CORS" ],
        "summary" : "CORS support",
        "description" : "Enable CORS by returning correct headers",
        "consumes" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Default response for CORS method",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      }
    },
    "/user-management/users" : {
      "get" : {
        "tags" : [ "user-management" ],
        "summary" : "Returns the list of users configured in the system.",
        "operationId" : "listUsers",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "cursor",
          "in" : "query",
          "description" : "Pagination cursor",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "Maximum items to be returned in a page",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/MODEL05753a"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "post" : {
        "tags" : [ "user-management" ],
        "summary" : "Creates a new user in the user pool.",
        "operationId" : "createUser",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "CreateUserRequest",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CreateUserRequest"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/MODEL9d3085"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "options" : {
        "tags" : [ "CORS" ],
        "summary" : "CORS support",
        "description" : "Enable CORS by returning correct headers",
        "consumes" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Default response for CORS method",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      }
    },
    "/user-management/users/{username}" : {
      "get" : {
        "tags" : [ "user-management" ],
        "summary" : "Returns data for a single user, specified by username.",
        "operationId" : "getUser",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "username",
          "in" : "path",
          "description" : "The specified user's username",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "success",
            "schema" : {
              "$ref" : "#/definitions/User"
            },
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "put" : {
        "tags" : [ "user-management" ],
        "summary" : "Updates data for a single user, specified by username.",
        "operationId" : "updateUser",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "name" : "username",
          "in" : "path",
          "description" : "The specified user's username",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "UpdateUserRequest",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/UpdateUserRequest"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "success",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "delete" : {
        "tags" : [ "user-management" ],
        "summary" : "Deletes an existing user in the user pool.",
        "operationId" : "deleteUser",
        "parameters" : [ {
          "name" : "username",
          "in" : "path",
          "description" : "The specified user's username",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "success",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "options" : {
        "tags" : [ "CORS" ],
        "summary" : "CORS support",
        "description" : "Enable CORS by returning correct headers",
        "consumes" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Default response for CORS method",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      }
    },
    "/user-management/users/{username}/actions/disable" : {
      "post" : {
        "tags" : [ "user-management" ],
        "summary" : "Disables an existing user in the user pool, specified by username",
        "operationId" : "disableUser",
        "parameters" : [ {
          "name" : "username",
          "in" : "path",
          "description" : "The specified user's username",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "success",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "options" : {
        "tags" : [ "CORS" ],
        "summary" : "CORS support",
        "description" : "Enable CORS by returning correct headers",
        "consumes" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Default response for CORS method",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      }
    },
    "/user-management/users/{username}/actions/disable-mfa" : {
      "post" : {
        "tags" : [ "user-management" ],
        "summary" : "Disables MFA for existing user in the user pool, specified by username.",
        "operationId" : "disableMFA",
        "parameters" : [ {
          "name" : "username",
          "in" : "path",
          "description" : "The specified user's username",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "success",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "options" : {
        "tags" : [ "CORS" ],
        "summary" : "CORS support",
        "description" : "Enable CORS by returning correct headers",
        "consumes" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Default response for CORS method",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      }
    },
    "/user-management/users/{username}/actions/enable" : {
      "post" : {
        "tags" : [ "user-management" ],
        "summary" : "Enables an existing user in the user pool, specified by username",
        "operationId" : "enableUser",
        "parameters" : [ {
          "name" : "username",
          "in" : "path",
          "description" : "The specified user's username",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "success",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "options" : {
        "tags" : [ "CORS" ],
        "summary" : "CORS support",
        "description" : "Enable CORS by returning correct headers",
        "consumes" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Default response for CORS method",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      }
    },
    "/user-management/users/{username}/actions/reset-password" : {
      "post" : {
        "tags" : [ "user-management" ],
        "summary" : "Resets the specified user's password in a user pool. Works on users in the CONFIRMED, PASSWORD_CHANGE_REQUIRED and PASSWORD_RESET_REQUIRED states.",
        "operationId" : "resetUserPassword",
        "parameters" : [ {
          "name" : "username",
          "in" : "path",
          "description" : "The specified user's username",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "options" : {
        "tags" : [ "CORS" ],
        "summary" : "CORS support",
        "description" : "Enable CORS by returning correct headers",
        "consumes" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Default response for CORS method",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      }
    },
    "/user-management/users/{username}/groups" : {
      "put" : {
        "tags" : [ "user-management" ],
        "summary" : "Updates the user's group membership to only the groups provided.",
        "operationId" : "updateUserGroups",
        "consumes" : [ "application/json" ],
        "parameters" : [ {
          "name" : "username",
          "in" : "path",
          "description" : "The specified user's username",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "UpdateUserGroupsRequest",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/UpdateUserGroupsRequest"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "success",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      },
      "options" : {
        "tags" : [ "CORS" ],
        "summary" : "CORS support",
        "description" : "Enable CORS by returning correct headers",
        "consumes" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "Default response for CORS method",
            "headers" : {
              "Access-Control-Allow-Origin" : {
                "type" : "string"
              },
              "Access-Control-Allow-Methods" : {
                "type" : "string"
              },
              "x-bc-request-id" : {
                "type" : "string"
              },
              "Access-Control-Allow-Headers" : {
                "type" : "string"
              }
            }
          }
        },
        "security" : [ {
          "apigateway-lambda-authorizer" : [ ]
        } ]
      }
    }
  },
  "securityDefinitions" : {
    "apigateway-lambda-authorizer" : {
      "type" : "apiKey",
      "name" : "Authorization",
      "in" : "header",
      "x-amazon-apigateway-authtype" : "custom"
    },
    "sigv4" : {
      "type" : "apiKey",
      "name" : "Authorization",
      "in" : "header",
      "x-amazon-apigateway-authtype" : "awsSigv4"
    }
  },
  "definitions" : {
    "ContextItem" : {
      "type" : "object",
      "properties" : {
        "selector" : {
          "type" : "string",
          "description" : "What fragment of the evaluation context should this value override",
          "pattern" : "^\\$(action|record)\\.[a-z][a-z0-9_]+$"
        },
        "value" : {
          "type" : "string",
          "description" : "What value should be used to override the context fragment referred by the respective selector"
        }
      }
    },
    "ArrayOfActor" : {
      "type" : "array",
      "items" : {
        "$ref" : "#/definitions/Actor"
      }
    },
    "RateTableUpdate" : {
      "type" : "object",
      "required" : [ "data", "label", "name", "sources" ],
      "properties" : {
        "sources" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/RateTableSource"
          }
        },
        "name" : {
          "type" : "string",
          "title" : "Name",
          "minLength" : 1,
          "maxLength" : 150
        },
        "label" : {
          "type" : "string",
          "title" : "Label",
          "minLength" : 1,
          "maxLength" : 250
        },
        "default" : {
          "type" : "string",
          "title" : "Default",
          "maxLength" : 64
        },
        "data" : {
          "type" : "string",
          "format" : "json",
          "title" : "Data"
        },
        "force_changes" : {
          "type" : "boolean",
          "title" : "Force changes",
          "default" : false
        }
      }
    },
    "MODELc1afb8" : {
      "type" : "object",
      "required" : [ "calculation" ],
      "properties" : {
        "calculation" : {
          "type" : "string",
          "description" : "Calculation to compile.",
          "title" : "Calculation"
        }
      }
    },
    "Product" : {
      "type" : "object",
      "required" : [ "label", "line", "name", "parent_product" ],
      "properties" : {
        "line" : {
          "type" : "string",
          "format" : "uuid",
          "title" : "Line"
        },
        "parent_product" : {
          "type" : "string",
          "format" : "uuid",
          "title" : "Parent product"
        },
        "tags" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "name" : {
          "type" : "string",
          "title" : "Name",
          "minLength" : 1,
          "maxLength" : 170
        },
        "label" : {
          "type" : "string",
          "title" : "Label",
          "minLength" : 1,
          "maxLength" : 170
        }
      }
    },
    "UpdateRiskQuoteFieldAnswers" : {
      "type" : "object",
      "required" : [ "field_answers" ],
      "properties" : {
        "field_answers" : {
          "type" : "object",
          "title" : "Field Answers",
          "properties" : { }
        }
      }
    },
    "CalculationUpdate" : {
      "type" : "object",
      "required" : [ "calculation", "name", "order" ],
      "properties" : {
        "order" : {
          "type" : "integer",
          "title" : "Order"
        },
        "limit" : {
          "type" : "string",
          "format" : "uuid",
          "title" : "Limit"
        },
        "name" : {
          "type" : "string",
          "title" : "Name",
          "minLength" : 1,
          "maxLength" : 150
        },
        "description" : {
          "type" : "string",
          "title" : "Description",
          "maxLength" : 250
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "enum" : [ "variable", "limit", "deductible", "premium" ]
        },
        "calculation" : {
          "type" : "string",
          "title" : "Calculation",
          "minLength" : 1
        }
      }
    },
    "PolicyStatement" : {
      "type" : "object",
      "required" : [ "actions", "effect", "resource", "sid" ],
      "properties" : {
        "sid" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The statement id"
        },
        "effect" : {
          "type" : "string",
          "description" : "Indicates whether an action on a resource is allowed or not",
          "enum" : [ "allow", "deny" ]
        },
        "resource" : {
          "type" : "string",
          "description" : "The resource an action will be allowed or denied to act upon",
          "pattern" : "^[a-z][a-z0-9_-]{1,20}\\\\.[a-z][a-z0-9_-]{1,20}\\\\.[a-z][a-z0-9_-]{1,20}$"
        },
        "actions" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "description" : "The set of actions a policy will be allowed or denied to do on a specific resource",
            "pattern" : "^[A-Z]{1}[a-zA-Z0-9_]{2,29}$"
          }
        },
        "records" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "description" : "The set of record paths"
          }
        },
        "condition" : {
          "type" : "object",
          "description" : "Additional conditions that are required to allow or deny to perform an action to a resource",
          "properties" : {
            "StringEquals" : {
              "type" : "object",
              "properties" : { }
            },
            "Bool" : {
              "type" : "object",
              "properties" : { }
            }
          }
        }
      }
    },
    "VersionStatus" : {
      "type" : "object",
      "required" : [ "status" ],
      "properties" : {
        "status" : {
          "type" : "string",
          "title" : "Status",
          "enum" : [ "draft", "locked", "published", "archived" ]
        }
      }
    },
    "LimitPartialUpdate" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string",
          "title" : "Name",
          "minLength" : 1,
          "maxLength" : 150
        },
        "label" : {
          "type" : "string",
          "title" : "Label",
          "minLength" : 1,
          "maxLength" : 250
        },
        "type" : {
          "type" : "string",
          "title" : "Type"
        }
      }
    },
    "MODELd833e4" : {
      "type" : "object",
      "properties" : {
        "error" : {
          "type" : "string",
          "enum" : [ "invalid_request", "invalid_client", "invalid_grant", "unauthorized_client", "unsupported_grant_type" ]
        }
      }
    },
    "CalculationRestore" : {
      "type" : "object"
    },
    "Actor" : {
      "type" : "object",
      "required" : [ "name" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "Name of the actor. Actor names are unique.",
          "maxLength" : 160,
          "pattern" : "^[\\w\\W]+$"
        }
      }
    },
    "RateTable" : {
      "type" : "object",
      "required" : [ "data", "label", "name", "sources" ],
      "properties" : {
        "sources" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/RateTableSource"
          }
        },
        "name" : {
          "type" : "string",
          "title" : "Name",
          "minLength" : 1,
          "maxLength" : 150
        },
        "label" : {
          "type" : "string",
          "title" : "Label",
          "minLength" : 1,
          "maxLength" : 250
        },
        "default" : {
          "type" : "string",
          "title" : "Default",
          "maxLength" : 64
        },
        "data" : {
          "type" : "string",
          "format" : "json",
          "title" : "Data"
        },
        "force_changes" : {
          "type" : "boolean",
          "title" : "Force changes",
          "default" : false
        }
      }
    },
    "ArrayOfNoteType" : {
      "type" : "array",
      "items" : {
        "$ref" : "#/definitions/NoteType"
      }
    },
    "MODEL45fe1d" : {
      "type" : "object",
      "required" : [ "rating_date", "risk_state_id", "unified_risk_state" ],
      "properties" : {
        "unified_risk_state" : {
          "type" : "object",
          "description" : "Unified Risk State containing Risk State for root Risk Type along with all its children Risk Types states.",
          "title" : "Unified Risk State",
          "properties" : { }
        },
        "risk_state_id" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "ID of the Risk State which needs to be rated.",
          "title" : "Risk State ID"
        },
        "rating_date" : {
          "type" : "string",
          "format" : "date",
          "description" : "A date to rate against.",
          "title" : "Rating Date"
        },
        "policy_inception_date" : {
          "type" : "string",
          "format" : "date",
          "description" : "A date policy was first created on.",
          "title" : "Policy Inception Date"
        }
      }
    },
    "RatePreviewRiskFieldAnswerValidator" : {
      "type" : "object",
      "properties" : {
        "field_overrides" : {
          "type" : "object",
          "description" : "An object containing parameters to override field definition (e.g. options for Enum field).",
          "title" : "Field overrides",
          "properties" : { }
        }
      }
    },
    "RiskField" : {
      "type" : "object",
      "required" : [ "label", "name", "type" ],
      "properties" : {
        "force_changes" : {
          "type" : "boolean",
          "title" : "Force changes",
          "default" : false
        },
        "validators" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/RiskFieldValidator"
          }
        },
        "name" : {
          "type" : "string",
          "title" : "Name",
          "minLength" : 1,
          "maxLength" : 150
        },
        "label" : {
          "type" : "string",
          "title" : "Label",
          "minLength" : 1,
          "maxLength" : 250
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "enum" : [ "string", "number", "date", "boolean", "enum" ]
        },
        "field_format" : {
          "type" : "string",
          "title" : "Field format",
          "maxLength" : 50
        },
        "default" : {
          "type" : "string",
          "title" : "Default"
        },
        "supplemental" : {
          "type" : "boolean",
          "title" : "Supplemental"
        },
        "optional" : {
          "type" : "boolean",
          "description" : "Optionality status when not used in rating",
          "title" : "Optional"
        },
        "description" : {
          "type" : "string",
          "title" : "Description",
          "maxLength" : 500
        },
        "options" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AvailableFieldOption"
          }
        },
        "source" : {
          "type" : "object",
          "description" : "Source object, required if `type` is `enum` and no `options` are provided.",
          "title" : "Source",
          "properties" : {
            "source_type" : {
              "type" : "string",
              "description" : "Source type to be used.",
              "title" : "Source type",
              "enum" : [ "risk_types" ]
            },
            "source_entity" : {
              "type" : "string",
              "format" : "uuid",
              "description" : "Risk type to be used for options.",
              "title" : "Source entity"
            },
            "source_label_template" : {
              "type" : "string",
              "description" : "Option display label template.",
              "title" : "Source label template."
            }
          },
          "required" : [ "source_entity", "source_label_template", "source_type" ]
        }
      }
    },
    "ArrayOfDomain" : {
      "type" : "array",
      "items" : {
        "$ref" : "#/definitions/Domain"
      }
    },
    "MODEL05753a" : {
      "type" : "object",
      "required" : [ "next", "users" ],
      "properties" : {
        "next" : {
          "type" : "string",
          "format" : "uri"
        },
        "users" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/User"
          }
        }
      }
    },
    "LineUpdate" : {
      "type" : "object",
      "required" : [ "label" ],
      "properties" : {
        "label" : {
          "type" : "string",
          "title" : "Label",
          "minLength" : 1,
          "maxLength" : 150
        },
        "description" : {
          "type" : "string",
          "title" : "Description",
          "maxLength" : 500
        }
      }
    },
    "FieldFormat" : {
      "type" : "object",
      "required" : [ "classification", "default_field_values", "description", "group", "label" ],
      "properties" : {
        "label" : {
          "type" : "string",
          "title" : "Label",
          "minLength" : 1
        },
        "classification" : {
          "type" : "string",
          "title" : "Classification",
          "minLength" : 1
        },
        "group" : {
          "type" : "object",
          "title" : "Group",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "description" : {
          "type" : "string",
          "title" : "Description",
          "minLength" : 1
        },
        "default_field_values" : {
          "type" : "object",
          "title" : "Default field values",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "ArrayOfUser" : {
      "type" : "array",
      "items" : {
        "$ref" : "#/definitions/User"
      }
    },
    "ArrayOfPolicy" : {
      "type" : "array",
      "items" : {
        "$ref" : "#/definitions/Policy"
      }
    },
    "MODEL98b218" : {
      "type" : "object"
    },
    "RiskFieldRestore" : {
      "type" : "object",
      "properties" : {
        "force_changes" : {
          "type" : "boolean",
          "title" : "Force changes",
          "default" : false
        }
      }
    },
    "Scenario" : {
      "type" : "object",
      "required" : [ "name" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "title" : "Name",
          "minLength" : 1,
          "maxLength" : 250
        },
        "total_premium" : {
          "type" : "number",
          "format" : "decimal",
          "title" : "Total premium"
        }
      }
    },
    "ArrayOfPolicyAssignment" : {
      "type" : "array",
      "items" : {
        "$ref" : "#/definitions/PolicyAssignment"
      }
    },
    "Line" : {
      "type" : "object",
      "required" : [ "label", "name" ],
      "properties" : {
        "label" : {
          "type" : "string",
          "title" : "Label",
          "minLength" : 1,
          "maxLength" : 150
        },
        "name" : {
          "type" : "string",
          "title" : "Name",
          "minLength" : 1,
          "maxLength" : 150
        },
        "description" : {
          "type" : "string",
          "title" : "Description",
          "maxLength" : 500
        }
      }
    },
    "EvaluationRequest" : {
      "type" : "object",
      "required" : [ "action", "resource", "subject" ],
      "properties" : {
        "subject" : {
          "type" : "string",
          "description" : "Who is trying to access a resource",
          "pattern" : "^[a-z][A-Za-z0-9-_]+:[a-z][A-Za-z0-9-_]+$"
        },
        "resource" : {
          "type" : "string",
          "description" : "What type of resource is the subject trying to access",
          "pattern" : "^[a-z][a-z0-9_-]{1,20}\\\\.[a-z][a-z0-9_-]{1,20}\\\\.[a-z][a-z0-9_-]{1,20}$"
        },
        "action" : {
          "type" : "string",
          "description" : "What action is the subject trying to perform over the target resource record",
          "pattern" : "^[A-Z]{1}[a-zA-Z0-9_]{2,29}$"
        },
        "record" : {
          "type" : "string",
          "description" : "What record of the given resource type is the subject trying to access"
        },
        "context" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ContextItem"
          }
        }
      }
    },
    "MODELf084dc" : {
      "type" : "object"
    },
    "Note" : {
      "type" : "object",
      "required" : [ "reference", "title" ],
      "properties" : {
        "creator" : {
          "type" : "object",
          "properties" : {
            "username" : {
              "type" : "string",
              "description" : "username from BriteAuth"
            },
            "name" : {
              "type" : "string",
              "description" : "the creator name"
            }
          }
        },
        "title" : {
          "type" : "string",
          "description" : "The note title"
        },
        "reference" : {
          "type" : "object",
          "description" : "Information about the entity to which the note belongs to",
          "properties" : {
            "id" : {
              "type" : "string",
              "format" : "uuid",
              "description" : "The reference's immutable identifier"
            },
            "label" : {
              "type" : "string",
              "description" : "The reference's application-level mutable identifier"
            },
            "domain" : {
              "type" : "string",
              "description" : "The domain to which the reference belongs to"
            },
            "level" : {
              "type" : "string",
              "description" : "The level inside the domain"
            }
          }
        },
        "body" : {
          "type" : "string"
        },
        "custom_data" : {
          "type" : "object",
          "description" : "Custom information provided and used solely by the consumer",
          "properties" : { }
        },
        "is_locked" : {
          "type" : "boolean",
          "description" : "If true, a note can no longer be modified or deleted."
        }
      }
    },
    "CalculationCreate" : {
      "type" : "object",
      "required" : [ "calculation", "name", "order" ],
      "properties" : {
        "order" : {
          "type" : "integer",
          "title" : "Order"
        },
        "limit" : {
          "type" : "string",
          "format" : "uuid",
          "title" : "Limit"
        },
        "name" : {
          "type" : "string",
          "title" : "Name",
          "minLength" : 1,
          "maxLength" : 150
        },
        "description" : {
          "type" : "string",
          "title" : "Description",
          "maxLength" : 250
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "enum" : [ "variable", "limit", "deductible", "premium" ]
        },
        "calculation" : {
          "type" : "string",
          "title" : "Calculation",
          "minLength" : 1
        }
      }
    },
    "RiskQuote" : {
      "type" : "object",
      "properties" : {
        "number" : {
          "type" : "number",
          "title" : "Risk Quote Number"
        },
        "final_rate" : {
          "type" : "number",
          "title" : "Final Rate"
        },
        "id" : {
          "type" : "string",
          "format" : "uuid",
          "title" : "Risk Quote ID"
        },
        "risk_state" : {
          "type" : "object",
          "title" : "Risk State",
          "properties" : { }
        },
        "risk_type_state" : {
          "type" : "object",
          "title" : "Risk Type State",
          "properties" : { }
        },
        "risk_quotes" : {
          "type" : "array",
          "title" : "List of Child Risk Quotes",
          "items" : {
            "type" : "object",
            "properties" : { }
          }
        },
        "date_added" : {
          "type" : "string",
          "format" : "date-time",
          "title" : "Risk Quote creation date"
        },
        "date_modified" : {
          "type" : "string",
          "format" : "date-time",
          "title" : "Risk Quote modified date"
        }
      }
    },
    "RiskStateInitializationValidator" : {
      "type" : "object",
      "required" : [ "id", "number", "rating_date" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "format" : "uuid",
          "title" : "Id"
        },
        "number" : {
          "type" : "integer",
          "title" : "Number",
          "minimum" : 1.0
        },
        "rating_date" : {
          "type" : "string",
          "format" : "date",
          "title" : "Rating date"
        }
      }
    },
    "MODEL3af1cf" : {
      "type" : "object",
      "required" : [ "rating_date", "risk_state_id", "unified_risk_state" ],
      "properties" : {
        "unified_risk_state" : {
          "type" : "object",
          "description" : "Unified Risk State containing Risk State for root Risk Type along with all its children Risk Types states.",
          "title" : "Unified Risk State",
          "properties" : { }
        },
        "risk_state_id" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "ID of the Risk State which needs to be rated.",
          "title" : "Risk State ID"
        },
        "rating_date" : {
          "type" : "string",
          "format" : "date",
          "description" : "A date to rate against.",
          "title" : "Rating Date"
        },
        "policy_inception_date" : {
          "type" : "string",
          "format" : "date",
          "description" : "A date policy was first created on.",
          "title" : "Policy Inception Date"
        }
      }
    },
    "CalculationListRetrieve" : {
      "type" : "object",
      "required" : [ "calculation", "name", "order", "referenced_names" ],
      "properties" : {
        "order" : {
          "type" : "integer",
          "title" : "Order"
        },
        "name" : {
          "type" : "string",
          "title" : "Name",
          "minLength" : 1,
          "maxLength" : 150
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "enum" : [ "variable", "limit", "deductible", "premium" ]
        },
        "description" : {
          "type" : "string",
          "title" : "Description",
          "maxLength" : 250
        },
        "calculation" : {
          "type" : "string",
          "title" : "Calculation",
          "minLength" : 1
        },
        "referenced_names" : {
          "type" : "string",
          "title" : "Referenced names"
        }
      }
    },
    "Group" : {
      "type" : "object",
      "required" : [ "name" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "Group id"
        },
        "name" : {
          "type" : "string",
          "description" : "Name of the group",
          "maxLength" : 160,
          "pattern" : "^[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}]+$"
        }
      }
    },
    "ProductPartialUpdate" : {
      "type" : "object",
      "required" : [ "label", "line", "parent_product" ],
      "properties" : {
        "line" : {
          "type" : "string",
          "format" : "uuid",
          "title" : "Line"
        },
        "parent_product" : {
          "type" : "string",
          "format" : "uuid",
          "title" : "Parent product"
        },
        "tags" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "label" : {
          "type" : "string",
          "title" : "Label",
          "minLength" : 1,
          "maxLength" : 170
        }
      }
    },
    "RiskTypeState" : {
      "type" : "object",
      "required" : [ "label", "name" ],
      "properties" : {
        "label" : {
          "type" : "string",
          "title" : "Label",
          "minLength" : 1,
          "maxLength" : 250
        },
        "name" : {
          "type" : "string",
          "title" : "Name",
          "minLength" : 1,
          "maxLength" : 50
        },
        "description" : {
          "type" : "string",
          "title" : "Description",
          "maxLength" : 500
        }
      }
    },
    "MODEL4cb80f" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "Custom reference name for copied risk type.",
          "title" : "Name"
        },
        "label" : {
          "type" : "string",
          "description" : "Custom label for copied risk type",
          "title" : "Label"
        }
      }
    },
    "RateTableReorder" : {
      "type" : "object",
      "required" : [ "order" ],
      "properties" : {
        "order" : {
          "type" : "integer",
          "title" : "Order",
          "minimum" : 0.0
        }
      }
    },
    "ArrayOfGroup" : {
      "type" : "array",
      "items" : {
        "$ref" : "#/definitions/Group"
      }
    },
    "VersionUpdate" : {
      "type" : "object",
      "required" : [ "description", "effective_date", "name" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "title" : "Name",
          "minLength" : 1,
          "maxLength" : 250
        },
        "effective_date" : {
          "type" : "string",
          "format" : "date",
          "title" : "Effective date"
        },
        "description" : {
          "type" : "string",
          "description" : "A short description of the version",
          "title" : "Description",
          "minLength" : 1,
          "maxLength" : 500
        }
      }
    },
    "RateTablePartialUpdate" : {
      "type" : "object",
      "properties" : {
        "sources" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/RateTableSource"
          }
        },
        "validity_state" : {
          "type" : "string",
          "title" : "Validity state",
          "enum" : [ "valid", "inconsistent_data" ]
        },
        "name" : {
          "type" : "string",
          "title" : "Name",
          "minLength" : 1,
          "maxLength" : 150
        },
        "label" : {
          "type" : "string",
          "title" : "Label",
          "minLength" : 1,
          "maxLength" : 250
        },
        "default" : {
          "type" : "string",
          "title" : "Default",
          "maxLength" : 64
        },
        "data" : {
          "type" : "string",
          "title" : "Data"
        },
        "force_changes" : {
          "type" : "boolean",
          "title" : "Force changes",
          "default" : false
        }
      }
    },
    "ResourceAttribute" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "Name of the resource attribute"
        },
        "type" : {
          "type" : "string",
          "description" : "Indicates the data type of the attribute",
          "enum" : [ "string", "integer" ]
        }
      }
    },
    "CreateRisk" : {
      "type" : "object",
      "required" : [ "parent_risk", "risk_type" ],
      "properties" : {
        "parent_risk" : {
          "type" : "string",
          "format" : "uuid",
          "title" : "Parent risk"
        },
        "risk_type" : {
          "type" : "string",
          "format" : "uuid",
          "title" : "Risk type"
        }
      }
    },
    "CalculationReorder" : {
      "type" : "object",
      "required" : [ "order" ],
      "properties" : {
        "order" : {
          "type" : "integer",
          "title" : "Order",
          "minimum" : 0.0
        }
      }
    },
    "RiskItemUpdate" : {
      "type" : "object",
      "required" : [ "label", "name" ],
      "properties" : {
        "label" : {
          "type" : "string",
          "title" : "Label",
          "minLength" : 1,
          "maxLength" : 250
        },
        "name" : {
          "type" : "string",
          "title" : "Name",
          "minLength" : 1,
          "maxLength" : 150
        },
        "presence" : {
          "type" : "string",
          "title" : "Presence",
          "enum" : [ "mandatory", "default", "optional" ]
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "enum" : [ "coverage", "fee" ]
        }
      }
    },
    "MODELc9c094" : {
      "type" : "object",
      "required" : [ "groups", "next" ],
      "properties" : {
        "next" : {
          "type" : "string",
          "format" : "uri"
        },
        "groups" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Group"
          }
        }
      }
    },
    "ArrayOfRole" : {
      "type" : "array",
      "items" : {
        "$ref" : "#/definitions/Role"
      }
    },
    "PolicyAssignment" : {
      "type" : "object",
      "required" : [ "actor", "role" ],
      "properties" : {
        "policy_id" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "Access policy id"
        },
        "actor" : {
          "type" : "string",
          "description" : "Name of the actor",
          "maxLength" : 160,
          "pattern" : "^[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}]+$"
        },
        "role" : {
          "type" : "string",
          "description" : "Name of the role",
          "maxLength" : 160,
          "pattern" : "^[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}]+$"
        },
        "date_added" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date the policy was assigned to a user and a role."
        }
      }
    },
    "RiskItem" : {
      "type" : "object",
      "required" : [ "item_name", "risk_state" ],
      "properties" : {
        "item_name" : {
          "type" : "string",
          "title" : "Item name",
          "minLength" : 1
        },
        "risk_state" : {
          "type" : "string",
          "title" : "Risk state"
        }
      }
    },
    "ArrayOfEvaluationRequest" : {
      "type" : "array",
      "items" : {
        "$ref" : "#/definitions/EvaluationRequest"
      }
    },
    "MODELda58f0" : {
      "type" : "object"
    },
    "NoteType" : {
      "type" : "object",
      "required" : [ "name" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "the note type name"
        },
        "description" : {
          "type" : "string",
          "description" : "the note type description"
        }
      }
    },
    "RateTableRestore" : {
      "type" : "object",
      "properties" : {
        "force_changes" : {
          "type" : "boolean",
          "title" : "Force changes",
          "default" : false
        }
      }
    },
    "UpdateRisk" : {
      "type" : "object",
      "required" : [ "risk_state" ],
      "properties" : {
        "risk_state" : {
          "type" : "string",
          "title" : "Risk state"
        }
      }
    },
    "ProjectDescriptor" : {
      "type" : "object",
      "required" : [ "projectId", "version" ],
      "properties" : {
        "projectId" : {
          "type" : "string",
          "title" : "Project Id",
          "minLength" : 1,
          "maxLength" : 150
        },
        "version" : {
          "type" : "string",
          "title" : "Version",
          "minLength" : 20,
          "maxLength" : 20
        }
      }
    },
    "MODEL90b826" : {
      "type" : "object",
      "required" : [ "name" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "The group's name"
        },
        "description" : {
          "type" : "string",
          "description" : "The group's description"
        }
      }
    },
    "LimitUpdate" : {
      "type" : "object",
      "required" : [ "label", "name", "type" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "title" : "Name",
          "minLength" : 1,
          "maxLength" : 150
        },
        "label" : {
          "type" : "string",
          "title" : "Label",
          "minLength" : 1,
          "maxLength" : 250
        },
        "type" : {
          "type" : "string",
          "title" : "Type"
        }
      }
    },
    "ArrayOfRoleGroupAssignment" : {
      "type" : "array",
      "items" : {
        "$ref" : "#/definitions/RoleGroupAssignment"
      }
    },
    "Policy" : {
      "type" : "object",
      "required" : [ "name", "statements", "type" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "The name of the access policy"
        },
        "description" : {
          "type" : "string",
          "description" : "A detailed explanation of the access policy"
        },
        "version" : {
          "type" : "string",
          "description" : "The policy version",
          "pattern" : "^[0-9]{3}.[0-9]{3}.[0-9]{3}$"
        },
        "type" : {
          "type" : "string",
          "description" : "The access policy type. Only custom access policies can be created via the API",
          "enum" : [ "custom", "system" ]
        },
        "date_added" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The date the policy was added"
        },
        "statements" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PolicyStatement"
          }
        }
      }
    },
    "RoleGroupAssignment" : {
      "type" : "object",
      "required" : [ "group", "role" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "RoleUserAssignment id"
        },
        "role" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "Role id"
        },
        "group" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "Group id"
        }
      }
    },
    "VersionListRetrieve" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string",
          "title" : "Name",
          "minLength" : 1,
          "maxLength" : 250
        },
        "effective_date" : {
          "type" : "string",
          "format" : "date",
          "title" : "Effective date"
        },
        "description" : {
          "type" : "string",
          "description" : "A short description of the version",
          "title" : "Description",
          "minLength" : 1,
          "maxLength" : 500
        }
      }
    },
    "RiskFieldReorder" : {
      "type" : "object",
      "required" : [ "order" ],
      "properties" : {
        "order" : {
          "type" : "integer",
          "title" : "Order",
          "minimum" : 0.0
        }
      }
    },
    "MODEL2a2d67" : {
      "type" : "object"
    },
    "MODEL98044e" : {
      "type" : "object"
    },
    "MODEL697037" : {
      "type" : "object"
    },
    "ArrayOfNoteHistoryEvent" : {
      "type" : "array",
      "items" : {
        "$ref" : "#/definitions/NoteHistoryEvent"
      }
    },
    "QuoteFlowPartialUpdate" : {
      "type" : "object",
      "required" : [ "configuration", "criteria" ],
      "properties" : {
        "configuration" : {
          "type" : "string",
          "title" : "Configuration"
        },
        "criteria" : {
          "type" : "string",
          "title" : "Criteria"
        }
      }
    },
    "VersionCreate" : {
      "type" : "object",
      "required" : [ "description", "effective_date", "name", "previous" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "title" : "Name",
          "minLength" : 1,
          "maxLength" : 250
        },
        "effective_date" : {
          "type" : "string",
          "format" : "date",
          "title" : "Effective date"
        },
        "description" : {
          "type" : "string",
          "description" : "A short description of the version",
          "title" : "Description",
          "minLength" : 1,
          "maxLength" : 500
        },
        "previous" : {
          "type" : "string",
          "format" : "uuid",
          "title" : "Previous"
        }
      }
    },
    "MODEL742328" : {
      "type" : "object",
      "required" : [ "count", "results" ],
      "properties" : {
        "count" : {
          "type" : "integer"
        },
        "next" : {
          "type" : "string",
          "format" : "uri"
        },
        "previous" : {
          "type" : "string",
          "format" : "uri"
        },
        "results" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Line"
          }
        }
      }
    },
    "InvitationMessagesRequest" : {
      "type" : "object",
      "properties" : {
        "EmailMessage" : {
          "type" : "string"
        },
        "SMSMessage" : {
          "type" : "string"
        },
        "EmailSubject" : {
          "type" : "string"
        }
      }
    },
    "MODEL48b5b3" : {
      "type" : "object"
    },
    "MODELfc9087" : {
      "type" : "object",
      "required" : [ "policy_inception_date", "product", "rating_date", "unified_risk_state", "version" ],
      "properties" : {
        "unified_risk_state" : {
          "type" : "object",
          "description" : "Unified Risk State containing Risk State for root Risk Type along with all its children Risk Types states.",
          "title" : "Unified Risk State",
          "properties" : { }
        },
        "rating_date" : {
          "type" : "string",
          "format" : "date",
          "description" : "The date to rate against.",
          "title" : "Rating Date"
        },
        "policy_inception_date" : {
          "type" : "string",
          "format" : "date",
          "description" : "The date the policy was first created on.",
          "title" : "Policy Inception Date"
        },
        "product" : {
          "type" : "object",
          "description" : "An object representing a product.",
          "title" : "Product",
          "properties" : { }
        },
        "version" : {
          "type" : "object",
          "description" : "An object representing a version.",
          "title" : "Version",
          "properties" : { }
        }
      }
    },
    "RiskQuoteValidator" : {
      "type" : "object",
      "required" : [ "risk_quote" ],
      "properties" : {
        "risk_quote" : {
          "type" : "string",
          "format" : "uuid",
          "title" : "Risk quote"
        }
      }
    },
    "MODEL411f1e" : {
      "type" : "object"
    },
    "RiskItemPartialUpdate" : {
      "type" : "object",
      "properties" : {
        "label" : {
          "type" : "string",
          "title" : "Label",
          "minLength" : 1,
          "maxLength" : 250
        },
        "name" : {
          "type" : "string",
          "title" : "Name",
          "minLength" : 1,
          "maxLength" : 150
        },
        "presence" : {
          "type" : "string",
          "title" : "Presence",
          "enum" : [ "mandatory", "default", "optional" ]
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "enum" : [ "coverage", "fee" ]
        }
      }
    },
    "ArrayOfRoleUserAssignment" : {
      "type" : "array",
      "items" : {
        "$ref" : "#/definitions/RoleUserAssignment"
      }
    },
    "MODEL3811c1" : {
      "type" : "object"
    },
    "MODEL9d3085" : {
      "type" : "object",
      "required" : [ "user" ],
      "properties" : {
        "user" : {
          "$ref" : "#/definitions/User"
        }
      }
    },
    "NoteHistoryEvent" : {
      "type" : "object",
      "properties" : {
        "type" : {
          "type" : "string",
          "description" : "the event type"
        },
        "modified_by" : {
          "type" : "object",
          "properties" : {
            "username" : {
              "type" : "string",
              "description" : "BriteAuth's username"
            },
            "name" : {
              "type" : "string",
              "description" : "BriteAuth's user name"
            }
          }
        },
        "date_modified" : {
          "type" : "string",
          "description" : "the event date"
        }
      },
      "description" : "Represents an event in the note life"
    },
    "Resource" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "The name of the resource",
          "pattern" : "^[a-z_][a-z0-9_-]{2,29}$"
        },
        "attrs" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ResourceAttribute"
          }
        },
        "actions" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Action"
          }
        }
      }
    },
    "RiskTypeUpdate" : {
      "type" : "object",
      "required" : [ "description", "label", "name" ],
      "properties" : {
        "label" : {
          "type" : "string",
          "title" : "Label",
          "minLength" : 1,
          "maxLength" : 250
        },
        "name" : {
          "type" : "string",
          "title" : "Name",
          "minLength" : 1,
          "maxLength" : 50
        },
        "description" : {
          "type" : "string",
          "title" : "Description",
          "maxLength" : 500
        },
        "risk_name_template" : {
          "type" : "string",
          "title" : "Risk name template",
          "minLength" : 1,
          "maxLength" : 300
        }
      }
    },
    "RelatedDocument" : {
      "type" : "object",
      "required" : [ "label", "risk_item", "template_id" ],
      "properties" : {
        "label" : {
          "type" : "string",
          "title" : "Label",
          "minLength" : 1,
          "maxLength" : 250
        },
        "description" : {
          "type" : "string",
          "title" : "Description",
          "maxLength" : 500
        },
        "template_id" : {
          "type" : "string",
          "description" : "Pointer to an external Document",
          "title" : "Template id",
          "minLength" : 1,
          "maxLength" : 250
        },
        "risk_item" : {
          "type" : "string",
          "format" : "uuid",
          "title" : "Risk item"
        }
      }
    },
    "ActionParameter" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "Name of the action attribute"
        },
        "required" : {
          "type" : "boolean",
          "description" : "Indicates whether the attribute is required or not"
        },
        "type" : {
          "type" : "string",
          "description" : "Indicates the data type of the attribute",
          "enum" : [ "string", "integer" ]
        },
        "default" : {
          "type" : "string",
          "description" : "The default value of the action parameter"
        }
      }
    },
    "QuoteFlow" : {
      "type" : "object",
      "required" : [ "configuration", "criteria" ],
      "properties" : {
        "configuration" : {
          "type" : "string",
          "title" : "Configuration"
        },
        "criteria" : {
          "type" : "string",
          "title" : "Criteria"
        }
      }
    },
    "Role" : {
      "type" : "object",
      "required" : [ "name" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "Name of the role. Role names are unique.",
          "maxLength" : 160,
          "pattern" : "^[\\w\\W]+$"
        },
        "description" : {
          "type" : "string",
          "description" : "A detailed explanation of the role"
        }
      }
    },
    "RiskFieldAnswerValidator" : {
      "type" : "object",
      "properties" : {
        "field_overrides" : {
          "type" : "object",
          "description" : "An object containing parameters to override field definition (e.g. options for Enum field).",
          "title" : "Field overrides",
          "properties" : { }
        },
        "rating_date" : {
          "type" : "string",
          "format" : "date",
          "title" : "Rating date"
        }
      }
    },
    "MODELd06ea7" : {
      "type" : "object",
      "required" : [ "grant_type" ],
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "Required if grant_type is authorization_code."
        },
        "grant_type" : {
          "type" : "string",
          "description" : "Must be authorization_code, refresh_token or client_credentials."
        },
        "scope" : {
          "type" : "string",
          "description" : "Can be a combination of any custom scopes associated with a client. Any scope requested must be pre-associated with the client or it will be ignored at runtime. If the client doesn't request any scopes, the authentication server uses all custom scopes associated with the client. Only used if the grant_type is client_credentials."
        },
        "redirect_uri" : {
          "type" : "string",
          "description" : "Must be the same redirect_uri that was used to get authorization_code in /oauth2/authorize. Required only if grant_type is authorization_code."
        },
        "client_id" : {
          "type" : "string",
          "description" : "Must be a preregistered client in the user pool. Required if the client is public and does not have a secret."
        },
        "code_verifier" : {
          "type" : "string",
          "description" : "Required if grant_type is authorization_code and the authorization code was requested with PKCE."
        }
      }
    },
    "CreateUserRequest" : {
      "type" : "object",
      "required" : [ "attributes", "contact_id", "username" ],
      "properties" : {
        "attributes" : {
          "$ref" : "#/definitions/UserAttributes"
        },
        "contact_id" : {
          "type" : "string",
          "title" : "Contact id of the contact to be linked to this user.",
          "minLength" : 1,
          "maxLength" : 40
        },
        "username" : {
          "type" : "string",
          "title" : "Username",
          "minLength" : 1,
          "maxLength" : 128
        }
      }
    },
    "VersionPartialUpdate" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string",
          "title" : "Name",
          "minLength" : 1,
          "maxLength" : 250
        },
        "effective_date" : {
          "type" : "string",
          "format" : "date",
          "title" : "Effective date"
        },
        "description" : {
          "type" : "string",
          "description" : "A short description of the version",
          "title" : "Description",
          "minLength" : 1,
          "maxLength" : 500
        }
      }
    },
    "Domain" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "The domain name",
          "pattern" : "^[a-z_][a-z0-9_-]{2,29}$"
        },
        "org" : {
          "type" : "string",
          "description" : "The name of the organization",
          "pattern" : "^[a-z_][a-z0-9_-]{2,29}$"
        },
        "resources" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Resource"
          }
        }
      }
    },
    "PasswordPolicyRequest" : {
      "type" : "object",
      "properties" : {
        "RequireNumbers" : {
          "type" : "boolean"
        },
        "MinimumLength" : {
          "type" : "integer",
          "format" : "int32"
        },
        "TemporaryPasswordValidityDays" : {
          "type" : "integer",
          "format" : "int32"
        },
        "RequireUppercase" : {
          "type" : "boolean"
        },
        "RequireLowercase" : {
          "type" : "boolean"
        },
        "RequireSymbols" : {
          "type" : "boolean"
        }
      }
    },
    "UpdateUserRequest" : {
      "type" : "object",
      "required" : [ "attributes" ],
      "properties" : {
        "attributes" : {
          "$ref" : "#/definitions/UserAttributes"
        }
      }
    },
    "MODEL15f797" : {
      "type" : "object",
      "required" : [ "description" ],
      "properties" : {
        "description" : {
          "type" : "string",
          "description" : "The specified group's description"
        }
      }
    },
    "Action" : {
      "type" : "object",
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "Name of the action",
          "pattern" : "^[A-Z]{1}[a-zA-Z0-9_]{2,29}$"
        },
        "parameters" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ActionParameter"
          }
        }
      }
    },
    "User" : {
      "type" : "object",
      "required" : [ "name" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "User id"
        },
        "name" : {
          "type" : "string",
          "description" : "Name of the user",
          "maxLength" : 160,
          "pattern" : "^[\\p{L}\\p{M}\\p{S}\\p{N}\\p{P}]+$"
        }
      }
    },
    "RiskItemListRetrieve" : {
      "type" : "object",
      "required" : [ "label", "name" ],
      "properties" : {
        "label" : {
          "type" : "string",
          "title" : "Label",
          "minLength" : 1,
          "maxLength" : 250
        },
        "name" : {
          "type" : "string",
          "title" : "Name",
          "minLength" : 1,
          "maxLength" : 150
        },
        "presence" : {
          "type" : "string",
          "title" : "Presence",
          "enum" : [ "mandatory", "default", "optional" ]
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "enum" : [ "coverage", "fee" ]
        }
      }
    },
    "RateTableSource" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "format" : "uuid",
          "title" : "Id"
        },
        "resolution" : {
          "type" : "string",
          "title" : "Resolution",
          "enum" : [ "map", "interpolation_key", "nearest_gt", "nearest_lt" ],
          "default" : "map"
        },
        "tier_values" : {
          "type" : "string",
          "format" : "json",
          "title" : "Tier values"
        },
        "sub_risk_field" : {
          "type" : "string",
          "format" : "uuid",
          "title" : "Sub risk field"
        },
        "source_field" : {
          "type" : "string",
          "format" : "uuid",
          "title" : "Source field"
        },
        "source_table" : {
          "type" : "string",
          "format" : "uuid",
          "title" : "Source table"
        },
        "source_calculation" : {
          "type" : "string",
          "format" : "uuid",
          "title" : "Source calculation"
        }
      }
    },
    "Risk" : {
      "type" : "object",
      "required" : [ "risk_state" ],
      "properties" : {
        "risk_state" : {
          "type" : "string",
          "title" : "Risk state"
        }
      }
    },
    "RoleUserAssignment" : {
      "type" : "object",
      "required" : [ "role", "user" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "RoleUserAssignment id"
        },
        "role" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "Role id"
        },
        "user" : {
          "type" : "string",
          "format" : "uuid",
          "description" : "User id"
        }
      }
    },
    "RiskQuoteItem" : {
      "type" : "object",
      "required" : [ "risk_item_name", "risk_quote" ],
      "properties" : {
        "risk_quote" : {
          "type" : "string",
          "format" : "uuid",
          "title" : "Risk quote"
        },
        "risk_item_name" : {
          "type" : "string",
          "title" : "Risk item name",
          "minLength" : 1
        }
      }
    },
    "UserAttributes" : {
      "type" : "object",
      "required" : [ "email", "name" ],
      "properties" : {
        "website" : {
          "type" : "string",
          "title" : "URL of the User's webpage or blog",
          "minLength" : 1,
          "maxLength" : 2048
        },
        "zoneinfo" : {
          "type" : "string",
          "title" : "User's timezone",
          "minLength" : 1,
          "maxLength" : 2048
        },
        "address" : {
          "type" : "object",
          "title" : "User's address",
          "properties" : { }
        },
        "birthdate" : {
          "type" : "string",
          "title" : "User's birthdate",
          "minLength" : 1,
          "maxLength" : 2048
        },
        "email_verified" : {
          "type" : "boolean",
          "title" : "User's email is verified"
        },
        "gender" : {
          "type" : "string",
          "title" : "User's gender",
          "minLength" : 1,
          "maxLength" : 2048
        },
        "profile" : {
          "type" : "string",
          "title" : "URL of the User's profile page",
          "minLength" : 1,
          "maxLength" : 2048
        },
        "preferred_username" : {
          "type" : "string",
          "format" : "string",
          "title" : "User's preferred username",
          "minLength" : 1,
          "maxLength" : 128
        },
        "given_name" : {
          "type" : "string",
          "title" : "User's given name",
          "minLength" : 1,
          "maxLength" : 2048
        },
        "locale" : {
          "type" : "string",
          "title" : "User's locale",
          "minLength" : 1,
          "maxLength" : 2048
        },
        "middle_name" : {
          "type" : "string",
          "title" : "User's middle name",
          "minLength" : 1,
          "maxLength" : 2048
        },
        "picture" : {
          "type" : "string",
          "title" : "URL of the User's profile picture",
          "minLength" : 1,
          "maxLength" : 2048
        },
        "phone_verified" : {
          "type" : "boolean",
          "title" : "User's phone number is verified"
        },
        "updated_at" : {
          "type" : "integer",
          "format" : "int32",
          "title" : "User last updated at"
        },
        "phone" : {
          "type" : "string",
          "title" : "User's phone number",
          "minLength" : 1,
          "maxLength" : 2048
        },
        "name" : {
          "type" : "string",
          "title" : "User's full name",
          "minLength" : 1,
          "maxLength" : 2048
        },
        "nickname" : {
          "type" : "string",
          "title" : "User's nickname",
          "minLength" : 1,
          "maxLength" : 2048
        },
        "family_name" : {
          "type" : "string",
          "title" : "User's family name",
          "minLength" : 1,
          "maxLength" : 2048
        },
        "email" : {
          "type" : "string",
          "format" : "email",
          "title" : "User's E-mail address",
          "minLength" : 1,
          "maxLength" : 2048
        }
      },
      "title" : "User attributes"
    },
    "RiskItemRestore" : {
      "type" : "object"
    },
    "RiskFieldValidator" : {
      "type" : "object",
      "required" : [ "name", "params" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "title" : "Name",
          "minLength" : 1,
          "maxLength" : 64
        },
        "params" : {
          "type" : "string",
          "title" : "Params"
        }
      }
    },
    "LimitCreate" : {
      "type" : "object",
      "required" : [ "label", "name", "type" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "title" : "Name",
          "minLength" : 1,
          "maxLength" : 150
        },
        "label" : {
          "type" : "string",
          "title" : "Label",
          "minLength" : 1,
          "maxLength" : 250
        },
        "type" : {
          "type" : "string",
          "title" : "Type"
        }
      }
    },
    "RiskItemReorder" : {
      "type" : "object",
      "required" : [ "order" ],
      "properties" : {
        "order" : {
          "type" : "integer",
          "title" : "Order",
          "minimum" : 0.0
        }
      }
    },
    "LimitListRetrieve" : {
      "type" : "object",
      "required" : [ "label", "name", "type" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "title" : "Name",
          "minLength" : 1,
          "maxLength" : 150
        },
        "label" : {
          "type" : "string",
          "title" : "Label",
          "minLength" : 1,
          "maxLength" : 250
        },
        "type" : {
          "type" : "string",
          "title" : "Type"
        }
      }
    },
    "MODEL9d9ea8" : {
      "type" : "object"
    },
    "RiskTypeCreate" : {
      "type" : "object",
      "required" : [ "description", "label", "name" ],
      "properties" : {
        "parent_risk_type" : {
          "type" : "string",
          "format" : "uuid",
          "title" : "Parent risk type"
        },
        "label" : {
          "type" : "string",
          "title" : "Label",
          "minLength" : 1,
          "maxLength" : 250
        },
        "name" : {
          "type" : "string",
          "title" : "Name",
          "minLength" : 1,
          "maxLength" : 50
        },
        "description" : {
          "type" : "string",
          "title" : "Description",
          "maxLength" : 500
        },
        "risk_name_template" : {
          "type" : "string",
          "title" : "Risk name template",
          "minLength" : 1,
          "maxLength" : 300
        }
      }
    },
    "MODELcbd4d3" : {
      "type" : "object",
      "required" : [ "group_names", "user_names" ],
      "properties" : {
        "user_names" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/User"
          }
        },
        "group_names" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Group"
          }
        }
      }
    },
    "CalculationPartialUpdate" : {
      "type" : "object",
      "properties" : {
        "order" : {
          "type" : "integer",
          "title" : "Order"
        },
        "limit" : {
          "type" : "string",
          "format" : "uuid",
          "title" : "Limit"
        },
        "name" : {
          "type" : "string",
          "title" : "Name",
          "minLength" : 1,
          "maxLength" : 150
        },
        "description" : {
          "type" : "string",
          "title" : "Description",
          "maxLength" : 250
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "enum" : [ "variable", "limit", "deductible", "premium" ]
        },
        "calculation" : {
          "type" : "string",
          "title" : "Calculation",
          "minLength" : 1
        }
      }
    },
    "MODEL2e7edf" : {
      "type" : "object"
    },
    "MODEL793bc7" : {
      "type" : "object"
    },
    "AvailableFieldOption" : {
      "type" : "object",
      "required" : [ "name", "value" ],
      "properties" : {
        "value" : {
          "type" : "string",
          "title" : "Value",
          "minLength" : 1,
          "maxLength" : 250
        },
        "label" : {
          "type" : "string",
          "title" : "Label",
          "maxLength" : 250
        },
        "display_label" : {
          "type" : "string",
          "title" : "Display label",
          "minLength" : 1
        },
        "name" : {
          "type" : "string",
          "title" : "Name",
          "minLength" : 1,
          "maxLength" : 150
        }
      }
    },
    "Quote" : {
      "type" : "object",
      "required" : [ "quote_number" ],
      "properties" : {
        "quote_number" : {
          "type" : "string",
          "title" : "Quote number",
          "minLength" : 1,
          "maxLength" : 50
        },
        "product_name" : {
          "type" : "string",
          "title" : "Product name",
          "maxLength" : 150
        },
        "product_version" : {
          "type" : "string",
          "title" : "Product version",
          "maxLength" : 36
        },
        "product_label" : {
          "type" : "string",
          "title" : "Product label",
          "maxLength" : 170
        },
        "agency" : {
          "type" : "object",
          "properties" : {
            "id" : {
              "type" : "string",
              "format" : "uuid",
              "maxLength" : 36
            }
          }
        },
        "agents" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "format" : "uuid",
                "maxLength" : 36
              }
            }
          }
        },
        "is_bound" : {
          "type" : "boolean",
          "title" : "A quote is said to be \"bound\" if it gets submitted to BritePolicies"
        },
        "root_risk_quote_id" : {
          "type" : "string",
          "format" : "uuid",
          "title" : "Root RiskQuote ID",
          "maxLength" : 36
        }
      }
    },
    "CreateRiskQuote" : {
      "type" : "object",
      "required" : [ "parent_risk_quote", "quote", "risk_type_name" ],
      "properties" : {
        "quote" : {
          "type" : "string",
          "format" : "uuid",
          "title" : "Quote"
        },
        "parent_risk_quote" : {
          "type" : "string",
          "format" : "uuid",
          "title" : "Parent risk quote"
        },
        "risk_type_name" : {
          "type" : "string",
          "title" : "Risk type name",
          "minLength" : 1,
          "maxLength" : 150
        }
      }
    },
    "UpdateRiskQuote" : {
      "type" : "object",
      "required" : [ "risk_state" ],
      "properties" : {
        "risk_state" : {
          "type" : "object",
          "title" : "Risk state",
          "properties" : { }
        }
      }
    },
    "ArrayOfNote" : {
      "type" : "array",
      "items" : {
        "$ref" : "#/definitions/Note"
      }
    },
    "RiskItemCreate" : {
      "type" : "object",
      "required" : [ "label", "name" ],
      "properties" : {
        "label" : {
          "type" : "string",
          "title" : "Label",
          "minLength" : 1,
          "maxLength" : 250
        },
        "name" : {
          "type" : "string",
          "title" : "Name",
          "minLength" : 1,
          "maxLength" : 150
        },
        "presence" : {
          "type" : "string",
          "title" : "Presence",
          "enum" : [ "mandatory", "default", "optional" ]
        },
        "type" : {
          "type" : "string",
          "title" : "Type",
          "enum" : [ "coverage", "fee" ]
        }
      }
    },
    "CreateQuote" : {
      "type" : "object",
      "required" : [ "effective_date", "expiration_date", "product_name" ],
      "properties" : {
        "effective_date" : {
          "type" : "string",
          "format" : "date",
          "title" : "Effective date"
        },
        "expiration_date" : {
          "type" : "string",
          "format" : "date",
          "title" : "Expiration date"
        },
        "product_name" : {
          "type" : "string",
          "title" : "Product name",
          "maxLength" : 150
        },
        "agency" : {
          "type" : "object",
          "properties" : {
            "id" : {
              "type" : "string",
              "format" : "uuid",
              "maxLength" : 36
            }
          }
        },
        "agents" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string",
                "format" : "uuid",
                "maxLength" : 36
              }
            }
          }
        }
      }
    },
    "UpdateUserGroupsRequest" : {
      "type" : "object",
      "required" : [ "groups" ],
      "properties" : {
        "groups" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      }
    }
  }
}